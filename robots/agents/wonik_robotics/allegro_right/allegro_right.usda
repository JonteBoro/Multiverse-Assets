#usda 1.0
(
    defaultPrim = "allegro_right"
    metersPerUnit = 1
    upAxis = "Z"
)

def Mujoco "mujoco" (
    prepend apiSchemas = ["MujocoOptionAPI"]
)
{
    string mujoco:model = "allegro_right"
    float mujoco:option:timestep = 0.002

    def MujocoAsset "asset"
    {
        def MujocoMesh "meshes"
        {
            def MujocoMesh "base_link"
            {
                asset mujoco:mesh:file = @allegro_right/meshes/stl/base_link.stl@
            }

            def MujocoMesh "link_0_0"
            {
                asset mujoco:mesh:file = @allegro_right/meshes/stl/link_0_0.stl@
            }

            def MujocoMesh "link_1_0"
            {
                asset mujoco:mesh:file = @allegro_right/meshes/stl/link_1_0.stl@
            }

            def MujocoMesh "link_2_0"
            {
                asset mujoco:mesh:file = @allegro_right/meshes/stl/link_2_0.stl@
            }

            def MujocoMesh "link_3_0"
            {
                asset mujoco:mesh:file = @allegro_right/meshes/stl/link_3_0.stl@
            }

            def MujocoMesh "link_3_0_tip"
            {
                asset mujoco:mesh:file = @allegro_right/meshes/stl/link_3_0_tip.stl@
            }

            def MujocoMesh "link_12_0_right"
            {
                asset mujoco:mesh:file = @allegro_right/meshes/stl/link_12_0_right.stl@
            }

            def MujocoMesh "link_13_0"
            {
                asset mujoco:mesh:file = @allegro_right/meshes/stl/link_13_0.stl@
            }

            def MujocoMesh "link_14_0"
            {
                asset mujoco:mesh:file = @allegro_right/meshes/stl/link_14_0.stl@
            }

            def MujocoMesh "link_15_0"
            {
                asset mujoco:mesh:file = @allegro_right/meshes/stl/link_15_0.stl@
            }

            def MujocoMesh "link_15_0_tip"
            {
                asset mujoco:mesh:file = @allegro_right/meshes/stl/link_15_0_tip.stl@
            }
        }

        def MujocoMaterial "materials"
        {
            def MujocoMaterial "black"
            {
                float mujoco:material:emission = 0
                color4f mujoco:material:rgba = (0.2, 0.2, 0.2, 1)
                float mujoco:material:specular = 0.5
            }

            def MujocoMaterial "white"
            {
                float mujoco:material:emission = 0
                color4f mujoco:material:rgba = (0.9, 0.9, 0.9, 1)
                float mujoco:material:specular = 0.5
            }
        }

        def MujocoTexture "textures"
        {
        }
    }

    def MujocoEquality "equality"
    {
    }
}

def Xform "allegro_right" (
    prepend apiSchemas = ["MujocoBodyAPI"]
)
{
    point3f mujoco:body:pos = (0, 0, 0)
    quatf mujoco:body:quat = (1, 0, 0, 0)

    def Xform "palm" (
        prepend apiSchemas = ["MujocoBodyAPI"]
    )
    {
        point3f mujoco:body:pos = (0, 0, 0)
        quatf mujoco:body:quat = (1, 0, 0, 0)

        def Mesh "Geom_0" (
            prepend apiSchemas = ["MujocoGeomAPI", "MaterialBindingAPI", "UrdfLinkVisualAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./allegro_right/meshes/usd/base_link.usda@</base_link>
        )
        {
            rel material:binding = </allegro_right/palm/Geom_0/Materials/black>
            rel mujoco:geom:material = </mujoco/asset/materials/black>
            rel mujoco:geom:mesh = </mujoco/asset/meshes/base_link>
            point3f mujoco:geom:pos = (-0.008985614, -0.0039570974, -0.040269274)
            quatf mujoco:geom:quat = (0.4717978, 0.8816922, 0.003048065, -0.004061145)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [1]
            asset urdf:geometry:mesh:filename = @./allegro_right/meshes/obj/base_link.obj@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            float3 urdf:visual:origin:rpy = (2.1589293, 0.010037668, 0.0015429098)
            point3f urdf:visual:origin:xyz = (-0.008985614, -0.0039570974, -0.040269274)
            matrix4d xformOp:transform = ( (0.9999484328114966, 0.0015428314421146554, -0.01003749913937882, 0), (0.009206987829732819, -0.5547950772209627, 0.8319360874889907, 0), (-0.004285217956529154, -0.8319856020163616, -0.5547806728289457, 0), (-0.008985614630811375, -0.003957097428660344, -0.04026927255984563, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Scope "Materials"
            {
                def Material "black" (
                    prepend references = @./allegro_right/materials/usd/black.usda@</black>
                )
                {
                }
            }
        }

        def Cube "Geom_1" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (-0.0093, 0, -0.0475)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.0204, 0.0565, 0.0475)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (-0.0093, 0, -0.0475)
            float3 urdf:geometry:box:size = (0.0408, 0.113, 0.095)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.0204, 0, 0, 0), (0, 0.0565, 0, 0), (0, 0, 0.0475, 0), (-0.0093, 0, -0.0475, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def PhysicsRevoluteJoint "ffj0" (
            prepend apiSchemas = ["MujocoJointAPI", "UrdfJointAPI"]
        )
        {
            vector3f mujoco:joint:axis = (0, 0, 1)
            point3f mujoco:joint:pos = (0, 0, 0)
            float2 mujoco:joint:range = (-0.47, 0.47)
            uniform token mujoco:joint:type = "hinge"
            uniform token physics:axis = "Z"
            rel physics:body0 = </allegro_right/palm>
            rel physics:body1 = </allegro_right/ff_base>
            bool physics:collisionEnabled = 0
            point3f physics:localPos0 = (0, 0.0435, -0.001542)
            point3f physics:localPos1 = (0, 0, 0)
            quatf physics:localRot0 = (0.99904823, -0.04361941, 0, 0)
            quatf physics:localRot1 = (1, 0, 0, 0)
            float physics:lowerLimit = -26.929016
            float physics:upperLimit = 26.929016
            vector3f urdf:joint:axis = (0, 0, 1)
            prepend rel urdf:joint:child = </allegro_right/ff_base>
            float urdf:joint:limit:effort = 1000
            float urdf:joint:limit:lower = -0.47
            float urdf:joint:limit:upper = 0.47
            float urdf:joint:limit:velocity = 1000
            float3 urdf:joint:origin:rpy = (-0.087266505, 0, 0)
            point3f urdf:joint:origin:xyz = (0, 0.0435, -0.001542)
            prepend rel urdf:joint:parent = </allegro_right/palm>
            uniform token urdf:joint:type = "revolute"
        }

        def PhysicsRevoluteJoint "mfj0" (
            prepend apiSchemas = ["MujocoJointAPI", "UrdfJointAPI"]
        )
        {
            vector3f mujoco:joint:axis = (0, 0, 1)
            point3f mujoco:joint:pos = (0, 0, 0)
            float2 mujoco:joint:range = (-0.47, 0.47)
            uniform token mujoco:joint:type = "hinge"
            uniform token physics:axis = "Z"
            rel physics:body0 = </allegro_right/palm>
            rel physics:body1 = </allegro_right/mf_base>
            bool physics:collisionEnabled = 0
            point3f physics:localPos0 = (0, 0, 0.0007)
            point3f physics:localPos1 = (0, 0, 0)
            quatf physics:localRot0 = (1, 0, 0, 0)
            quatf physics:localRot1 = (1, 0, 0, 0)
            float physics:lowerLimit = -26.929016
            float physics:upperLimit = 26.929016
            vector3f urdf:joint:axis = (0, 0, 1)
            prepend rel urdf:joint:child = </allegro_right/mf_base>
            float urdf:joint:limit:effort = 1000
            float urdf:joint:limit:lower = -0.47
            float urdf:joint:limit:upper = 0.47
            float urdf:joint:limit:velocity = 1000
            float3 urdf:joint:origin:rpy = (0, 0, 0)
            point3f urdf:joint:origin:xyz = (0, 0, 0.0007)
            prepend rel urdf:joint:parent = </allegro_right/palm>
            uniform token urdf:joint:type = "revolute"
        }

        def PhysicsRevoluteJoint "rfj0" (
            prepend apiSchemas = ["MujocoJointAPI", "UrdfJointAPI"]
        )
        {
            vector3f mujoco:joint:axis = (0, 0, 1)
            point3f mujoco:joint:pos = (0, 0, 0)
            float2 mujoco:joint:range = (-0.47, 0.47)
            uniform token mujoco:joint:type = "hinge"
            uniform token physics:axis = "Z"
            rel physics:body0 = </allegro_right/palm>
            rel physics:body1 = </allegro_right/rf_base>
            bool physics:collisionEnabled = 0
            point3f physics:localPos0 = (0, -0.0435, -0.001542)
            point3f physics:localPos1 = (0, 0, 0)
            quatf physics:localRot0 = (0.99904823, 0.04361941, 0, 0)
            quatf physics:localRot1 = (1, 0, 0, 0)
            float physics:lowerLimit = -26.929016
            float physics:upperLimit = 26.929016
            vector3f urdf:joint:axis = (0, 0, 1)
            prepend rel urdf:joint:child = </allegro_right/rf_base>
            float urdf:joint:limit:effort = 1000
            float urdf:joint:limit:lower = -0.47
            float urdf:joint:limit:upper = 0.47
            float urdf:joint:limit:velocity = 1000
            float3 urdf:joint:origin:rpy = (0.087266505, 0, 0)
            point3f urdf:joint:origin:xyz = (0, -0.0435, -0.001542)
            prepend rel urdf:joint:parent = </allegro_right/palm>
            uniform token urdf:joint:type = "revolute"
        }

        def PhysicsRevoluteJoint "thj0" (
            prepend apiSchemas = ["MujocoJointAPI", "UrdfJointAPI"]
        )
        {
            vector3f mujoco:joint:axis = (-1, 0, 0)
            point3f mujoco:joint:pos = (0, 0, 0)
            float2 mujoco:joint:range = (0.263, 1.396)
            uniform token mujoco:joint:type = "hinge"
            uniform token physics:axis = "Z"
            rel physics:body0 = </allegro_right/palm>
            rel physics:body1 = </allegro_right/th_base>
            bool physics:collisionEnabled = 0
            point3f physics:localPos0 = (-0.0182, 0.019333, -0.045987)
            point3f physics:localPos1 = (0, 0, 0)
            quatf physics:localRot0 = (0.030844005, 0.7064338, 0.7064338, -0.030844005)
            quatf physics:localRot1 = (0.7071068, 0, -0.7071068, 0)
            float physics:lowerLimit = 15.06879
            float physics:upperLimit = 79.98491
            vector3f urdf:joint:axis = (-1, 0, 0)
            prepend rel urdf:joint:child = </allegro_right/th_base>
            float urdf:joint:limit:effort = 1000
            float urdf:joint:limit:lower = 0.263
            float urdf:joint:limit:upper = 1.396
            float urdf:joint:limit:velocity = 1000
            float3 urdf:joint:origin:rpy = (3.1415927, -1.4835286, 1.5707964)
            point3f urdf:joint:origin:xyz = (-0.0182, 0.019333, -0.045987)
            prepend rel urdf:joint:parent = </allegro_right/palm>
            uniform token urdf:joint:type = "revolute"
        }
    }

    def Xform "ff_base" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMassAPI", "MujocoBodyAPI", "MujocoBodyInertialAPI", "UrdfLinkInertialAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (7.6537674e-7, 6.8884293e-7, 3.550457e-7)
        float mujoco:body:inertial:mass = 0.0072320164
        point3f mujoco:body:inertial:pos = (-0.0007781272, -0.000010286682, 0.008282494)
        quatf mujoco:body:inertial:quat = (0.6841336, 0.6859369, -0.17537077, 0.17520528)
        point3f mujoco:body:pos = (0, 0.0435, -0.001542)
        quatf mujoco:body:quat = (0.99904823, -0.04361941, 0, 0)
        point3f physics:centerOfMass = (-0.0007781272, -0.000010286682, 0.008282494)
        float3 physics:diagonalInertia = (7.6537674e-7, 6.8884293e-7, 3.550457e-7)
        float physics:mass = 0.0072320164
        quatf physics:principalAxes = (0.6841336, 0.6859369, -0.17537077, 0.17520528)
        bool physics:rigidBodyEnabled = 1
        float urdf:link:inertial:inertia:ixx = 7.6537674e-7
        float urdf:link:inertial:inertia:iyy = 6.8884293e-7
        float urdf:link:inertial:inertia:izz = 3.550457e-7
        float urdf:link:inertial:mass = 0.0072320164
        float3 urdf:link:inertial:origin:rpy = (1.5736793, -0.5010122, -0.0009793029)
        point3f urdf:link:inertial:origin:xyz = (-0.0007781272, -0.000010286682, 0.008282494)
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 0.9961946942067061, -0.08715578715385047, 0), (0, 0.08715578715385047, 0.9961946942067061, 0), (0, 0.0435, -0.001542, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "Geom_2" (
            prepend apiSchemas = ["MujocoGeomAPI", "MaterialBindingAPI", "UrdfLinkVisualAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./allegro_right/meshes/usd/link_0.0.usda@</link_0_0>
        )
        {
            rel material:binding = </allegro_right/ff_base/Geom_2/Materials/black>
            rel mujoco:geom:material = </mujoco/asset/materials/black>
            rel mujoco:geom:mesh = </mujoco/asset/meshes/link_0_0>
            point3f mujoco:geom:pos = (-0.0007781272, -0.000010286682, 0.008282494)
            quatf mujoco:geom:quat = (0.6841326, 0.6859359, -0.17537458, 0.17520909)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [1]
            asset urdf:geometry:mesh:filename = @./allegro_right/meshes/obj/link_0.0.obj@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            float3 urdf:visual:origin:rpy = (1.5736794, -0.50102335, -0.0009793323)
            point3f urdf:visual:origin:xyz = (-0.0007781272, -0.000010286682, 0.008282494)
            matrix4d xformOp:transform = ( (0.8770910669601198, -0.0008589638930344978, 0.4803233519617687, 0), (-0.4803239488597908, -0.0024126714309984365, 0.8770878423329693, 0), (0.000405475641335834, -0.9999967205934213, -0.002528713488668899, 0), (-0.0007781272160704294, -0.000010286681267700354, 0.008282493338668923, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Scope "Materials"
            {
                def Material "black" (
                    prepend references = @./allegro_right/materials/usd/black.usda@</black>
                )
                {
                }
            }
        }

        def Cube "Geom_3" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (0, 0, 0.0082)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.0098, 0.01375, 0.0082)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0.0082)
            float3 urdf:geometry:box:size = (0.0196, 0.0275, 0.0164)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.0098, 0, 0, 0), (0, 0.01375, 0, 0), (0, 0, 0.0082, 0), (0, 0, 0.0082, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def PhysicsRevoluteJoint "ffj1" (
            prepend apiSchemas = ["MujocoJointAPI", "UrdfJointAPI"]
        )
        {
            vector3f mujoco:joint:axis = (0, 1, 0)
            point3f mujoco:joint:pos = (0, 0, 0)
            float2 mujoco:joint:range = (-0.196, 1.61)
            uniform token mujoco:joint:type = "hinge"
            uniform token physics:axis = "Z"
            rel physics:body0 = </allegro_right/ff_base>
            rel physics:body1 = </allegro_right/ff_proximal>
            bool physics:collisionEnabled = 0
            point3f physics:localPos0 = (0, 0, 0.0164)
            point3f physics:localPos1 = (0, 0, 0)
            quatf physics:localRot0 = (0.7071068, -0.7071068, 0, 0)
            quatf physics:localRot1 = (0.7071068, -0.7071068, 0, 0)
            float physics:lowerLimit = -11.229973
            float physics:upperLimit = 92.24621
            vector3f urdf:joint:axis = (0, 1, 0)
            prepend rel urdf:joint:child = </allegro_right/ff_proximal>
            float urdf:joint:limit:effort = 1000
            float urdf:joint:limit:lower = -0.196
            float urdf:joint:limit:upper = 1.61
            float urdf:joint:limit:velocity = 1000
            float3 urdf:joint:origin:rpy = (0, 0, 0)
            point3f urdf:joint:origin:xyz = (0, 0, 0.0164)
            prepend rel urdf:joint:parent = </allegro_right/ff_base>
            uniform token urdf:joint:type = "revolute"
        }
    }

    def Xform "ff_proximal" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMassAPI", "MujocoBodyAPI", "MujocoBodyInertialAPI", "UrdfLinkInertialAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (0.000011862359, 0.000011276808, 0.0000022658685)
        float mujoco:body:inertial:mass = 0.027276123
        point3f mujoco:body:inertial:pos = (2.7525333e-8, -0.00009059567, 0.02699977)
        quatf mujoco:body:inertial:quat = (1, -0.0000030626327, 1.7406441e-11, 0.0000056834892)
        point3f mujoco:body:pos = (0, 0, 0.0164)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        point3f physics:centerOfMass = (2.7525333e-8, -0.00009059567, 0.02699977)
        float3 physics:diagonalInertia = (0.000011862359, 0.000011276808, 0.0000022658685)
        float physics:mass = 0.027276123
        quatf physics:principalAxes = (1, -0.0000030626327, 1.7406441e-11, 0.0000056834892)
        bool physics:rigidBodyEnabled = 1
        float urdf:link:inertial:inertia:ixx = 0.000011862359
        float urdf:link:inertial:inertia:iyy = 0.000011276808
        float urdf:link:inertial:inertia:izz = 0.0000022658685
        float urdf:link:inertial:mass = 0.027276123
        float3 urdf:link:inertial:origin:rpy = (-0.0000061252654, 6.962586e-11, 0.0000113669785)
        point3f urdf:link:inertial:origin:xyz = (2.7525333e-8, -0.00009059567, 0.02699977)
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 0.9961946942067061, -0.08715578715385047, 0), (0, 0.08715578715385047, 0.9961946942067061, 0), (0, 0.04492935490932314, 0.014795592984989983, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "Geom_4" (
            prepend apiSchemas = ["MujocoGeomAPI", "MaterialBindingAPI", "UrdfLinkVisualAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./allegro_right/meshes/usd/link_1.0.usda@</link_1_0>
        )
        {
            rel material:binding = </allegro_right/ff_proximal/Geom_4/Materials/black>
            rel mujoco:geom:material = </mujoco/asset/materials/black>
            rel mujoco:geom:mesh = </mujoco/asset/meshes/link_1_0>
            point3f mujoco:geom:pos = (2.7525333e-8, -0.00009059567, 0.02699977)
            quatf mujoco:geom:quat = (1, -0.0000030626327, 1.7406441e-11, 0.0000056834892)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [1]
            asset urdf:geometry:mesh:filename = @./allegro_right/meshes/obj/link_1.0.obj@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            float3 urdf:visual:origin:rpy = (-0.0000061252654, 6.962586e-11, 0.0000113669785)
            point3f urdf:visual:origin:xyz = (2.7525333e-8, -0.00009059567, 0.02699977)
            matrix4d xformOp:transform = ( (0.9999999999353959, 0.000011366978476537383, -6.96257605910112e-11, 0), (-0.000011366978476750622, 0.9999999999166365, -0.000006125265454572796, 0), (0, 0.000006125265454968513, 0.9999999999812406, 0), (2.752533261725189e-8, -0.00009059566995957329, 0.02699976946079976, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Scope "Materials"
            {
                def Material "black" (
                    prepend references = @./allegro_right/materials/usd/black.usda@</black>
                )
                {
                }
            }
        }

        def Cube "Geom_5" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (0, 0, 0.027)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.0098, 0.01375, 0.027)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0.027)
            float3 urdf:geometry:box:size = (0.0196, 0.0275, 0.054)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.0098, 0, 0, 0), (0, 0.01375, 0, 0), (0, 0, 0.027, 0), (0, 0, 0.027, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def PhysicsRevoluteJoint "ffj2" (
            prepend apiSchemas = ["MujocoJointAPI", "UrdfJointAPI"]
        )
        {
            vector3f mujoco:joint:axis = (0, 1, 0)
            point3f mujoco:joint:pos = (0, 0, 0)
            float2 mujoco:joint:range = (-0.174, 1.709)
            uniform token mujoco:joint:type = "hinge"
            uniform token physics:axis = "Z"
            rel physics:body0 = </allegro_right/ff_proximal>
            rel physics:body1 = </allegro_right/ff_medial>
            bool physics:collisionEnabled = 0
            point3f physics:localPos0 = (0, 0, 0.054)
            point3f physics:localPos1 = (0, 0, 0)
            quatf physics:localRot0 = (0.7071068, -0.7071068, 0, 0)
            quatf physics:localRot1 = (0.7071068, -0.7071068, 0, 0)
            float physics:lowerLimit = -9.969465
            float physics:upperLimit = 97.91849
            vector3f urdf:joint:axis = (0, 1, 0)
            prepend rel urdf:joint:child = </allegro_right/ff_medial>
            float urdf:joint:limit:effort = 1000
            float urdf:joint:limit:lower = -0.174
            float urdf:joint:limit:upper = 1.709
            float urdf:joint:limit:velocity = 1000
            float3 urdf:joint:origin:rpy = (0, 0, 0)
            point3f urdf:joint:origin:xyz = (0, 0, 0.054)
            prepend rel urdf:joint:parent = </allegro_right/ff_proximal>
            uniform token urdf:joint:type = "revolute"
        }
    }

    def Xform "ff_medial" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMassAPI", "MujocoBodyAPI", "MujocoBodyInertialAPI", "UrdfLinkInertialAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (0.0000042873276, 0.0000036356423, 0.0000016736698)
        float mujoco:body:inertial:mass = 0.018463746
        point3f mujoco:body:inertial:pos = (-0.00019288158, -0.000077904275, 0.022586012)
        quatf mujoco:body:inertial:quat = (0.999903, -0.00028699808, 0.013923503, 0.0001700863)
        point3f mujoco:body:pos = (0, 0, 0.054)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        point3f physics:centerOfMass = (-0.00019288158, -0.000077904275, 0.022586012)
        float3 physics:diagonalInertia = (0.0000042873276, 0.0000036356423, 0.0000016736698)
        float physics:mass = 0.018463746
        quatf physics:principalAxes = (0.999903, -0.00028699808, 0.013923503, 0.0001700863)
        bool physics:rigidBodyEnabled = 1
        float urdf:link:inertial:inertia:ixx = 0.0000042873276
        float urdf:link:inertial:inertia:iyy = 0.0000036356423
        float urdf:link:inertial:inertia:izz = 0.0000016736698
        float urdf:link:inertial:mass = 0.018463746
        float3 urdf:link:inertial:origin:rpy = (-0.0005694249, 0.027848002, 0.00033227642)
        point3f urdf:link:inertial:origin:xyz = (-0.00019288158, -0.000077904275, 0.022586012)
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 0.9961946942067061, -0.08715578715385047, 0), (0, 0.08715578715385047, 0.9961946942067061, 0), (0, 0.04963576741563107, 0.06859010647215212, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "Geom_6" (
            prepend apiSchemas = ["MujocoGeomAPI", "MaterialBindingAPI", "UrdfLinkVisualAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./allegro_right/meshes/usd/link_2.0.usda@</link_2_0>
        )
        {
            rel material:binding = </allegro_right/ff_medial/Geom_6/Materials/black>
            rel mujoco:geom:material = </mujoco/asset/materials/black>
            rel mujoco:geom:mesh = </mujoco/asset/meshes/link_2_0>
            point3f mujoco:geom:pos = (-0.00019288158, -0.000077904275, 0.022586012)
            quatf mujoco:geom:quat = (0.999903, -0.00028699808, 0.013923479, 0.00017008632)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [1]
            asset urdf:geometry:mesh:filename = @./allegro_right/meshes/obj/link_2.0.obj@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            float3 urdf:visual:origin:rpy = (-0.00056942494, 0.027847955, 0.00033227645)
            point3f urdf:visual:origin:xyz = (-0.00019288158, -0.000077904275, 0.022586012)
            matrix4d xformOp:transform = ( (0.9996122155699828, 0.0003321476113283091, -0.0278443560032279, 0), (-0.0003481316592738647, 0.9999997774054904, -0.0005692041087569244, 0), (0.02784416074544205, 0.0005786768821228625, 0.999612108692891, 0), (-0.00019288158089426116, -0.00007790427771672218, 0.022586011844823915, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Scope "Materials"
            {
                def Material "black" (
                    prepend references = @./allegro_right/materials/usd/black.usda@</black>
                )
                {
                }
            }
        }

        def Cube "Geom_7" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (0, 0, 0.0192)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.0098, 0.01375, 0.0192)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0.0192)
            float3 urdf:geometry:box:size = (0.0196, 0.0275, 0.0384)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.0098, 0, 0, 0), (0, 0.01375, 0, 0), (0, 0, 0.0192, 0), (0, 0, 0.0192, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def PhysicsRevoluteJoint "ffj3" (
            prepend apiSchemas = ["MujocoJointAPI", "UrdfJointAPI"]
        )
        {
            vector3f mujoco:joint:axis = (0, 1, 0)
            point3f mujoco:joint:pos = (0, 0, 0)
            float2 mujoco:joint:range = (-0.227, 1.618)
            uniform token mujoco:joint:type = "hinge"
            uniform token physics:axis = "Z"
            rel physics:body0 = </allegro_right/ff_medial>
            rel physics:body1 = </allegro_right/ff_distal>
            bool physics:collisionEnabled = 0
            point3f physics:localPos0 = (0, 0, 0.0384)
            point3f physics:localPos1 = (0, 0, 0)
            quatf physics:localRot0 = (0.7071068, -0.7071068, 0, 0)
            quatf physics:localRot1 = (0.7071068, -0.7071068, 0, 0)
            float physics:lowerLimit = -13.006142
            float physics:upperLimit = 92.704575
            vector3f urdf:joint:axis = (0, 1, 0)
            prepend rel urdf:joint:child = </allegro_right/ff_distal>
            float urdf:joint:limit:effort = 1000
            float urdf:joint:limit:lower = -0.227
            float urdf:joint:limit:upper = 1.618
            float urdf:joint:limit:velocity = 1000
            float3 urdf:joint:origin:rpy = (0, 0, 0)
            point3f urdf:joint:origin:xyz = (0, 0, 0.0384)
            prepend rel urdf:joint:parent = </allegro_right/ff_medial>
            uniform token urdf:joint:type = "revolute"
        }
    }

    def Xform "ff_distal" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMassAPI", "MujocoBodyAPI", "MujocoBodyInertialAPI", "UrdfLinkInertialAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (7.9637954e-7, 7.281658e-7, 3.7775212e-7)
        float mujoco:body:inertial:mass = 0.0075123115
        point3f mujoco:body:inertial:pos = (-0.0005208061, -0.0000033249887, 0.0072512897)
        quatf mujoco:body:inertial:quat = (0.68775237, 0.68771815, 0.16445227, -0.16430427)
        point3f mujoco:body:pos = (0, 0, 0.0384)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        point3f physics:centerOfMass = (-0.0005208061, -0.0000033249887, 0.0072512897)
        float3 physics:diagonalInertia = (7.9637954e-7, 7.281658e-7, 3.7775212e-7)
        float physics:mass = 0.0075123115
        quatf physics:principalAxes = (0.68775237, 0.68771815, 0.16445227, -0.16430427)
        bool physics:rigidBodyEnabled = 1
        float urdf:link:inertial:inertia:ixx = 7.9637954e-7
        float urdf:link:inertial:inertia:iyy = 7.281658e-7
        float urdf:link:inertial:inertia:izz = 3.7775212e-7
        float urdf:link:inertial:mass = 0.0075123115
        float3 urdf:link:inertial:origin:rpy = (1.5707982, 0.46922472, 0.00021562444)
        point3f urdf:link:inertial:origin:xyz = (-0.0005208061, -0.0000033249887, 0.0072512897)
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 0.9961946942067061, -0.08715578715385047, 0), (0, 0.08715578715385047, 0.9961946942067061, 0), (0, 0.05298254964233893, 0.10684398272968963, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "Geom_8" (
            prepend apiSchemas = ["MujocoGeomAPI", "MaterialBindingAPI", "UrdfLinkVisualAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./allegro_right/meshes/usd/link_3.0.usda@</link_3_0>
        )
        {
            rel material:binding = </allegro_right/ff_distal/Geom_8/Materials/black>
            rel mujoco:geom:material = </mujoco/asset/materials/black>
            rel mujoco:geom:mesh = </mujoco/asset/meshes/link_3_0>
            point3f mujoco:geom:pos = (-0.0005208061, -0.0000033249887, 0.0072512897)
            quatf mujoco:geom:quat = (0.68775237, 0.68771815, 0.16445224, -0.16430424)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [1]
            asset urdf:geometry:mesh:filename = @./allegro_right/meshes/obj/link_3.0.obj@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            float3 urdf:visual:origin:rpy = (1.5707982, 0.46922463, 0.00021561774)
            point3f urdf:visual:origin:xyz = (-0.0005208061, -0.0000033249887, 0.0072512897)
            matrix4d xformOp:transform = ( (0.891919155666993, 0.00019231359515900492, -0.4521948504458663, 0), (0.4521948403168342, 0.0000957241065854264, 0.8919191763986961, 0), (0.00021481413146601236, -0.9999999769261881, -0.000001585051131014481, 0), (-0.0005208061238370608, -0.0000033249886218826706, 0.007251289762765761, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Scope "Materials"
            {
                def Material "black" (
                    prepend references = @./allegro_right/materials/usd/black.usda@</black>
                )
                {
                }
            }
        }

        def Cube "Geom_9" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (0, 0, 0.008)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.0098, 0.01375, 0.008)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0.008)
            float3 urdf:geometry:box:size = (0.0196, 0.0275, 0.016)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.0098, 0, 0, 0), (0, 0.01375, 0, 0), (0, 0, 0.008, 0), (0, 0, 0.008, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Xform "ff_tip" (
            prepend apiSchemas = ["PhysicsMassAPI", "MujocoBodyAPI", "MujocoBodyInertialAPI", "UrdfLinkInertialAPI"]
        )
        {
            float3 mujoco:body:inertial:diaginertia = (4.5582308e-7, 4.558136e-7, 4.4955877e-7)
            float mujoco:body:inertial:mass = 0.0068445215
            point3f mujoco:body:inertial:pos = (2.0724932e-11, -1.156129e-7, 0.025402764)
            quatf mujoco:body:inertial:quat = (1, 0, 0, 0)
            point3f mujoco:body:pos = (0, 0, 0)
            quatf mujoco:body:quat = (1, 0, 0, 0)
            point3f physics:centerOfMass = (2.0724932e-11, -1.156129e-7, 0.025402764)
            float3 physics:diagonalInertia = (4.5582308e-7, 4.558136e-7, 4.4955877e-7)
            float physics:mass = 0.0068445215
            quatf physics:principalAxes = (1, 0, 0, 0)
            float urdf:link:inertial:inertia:ixx = 4.5582308e-7
            float urdf:link:inertial:inertia:iyy = 4.558136e-7
            float urdf:link:inertial:inertia:izz = 4.4955877e-7
            float urdf:link:inertial:mass = 0.0068445215
            float3 urdf:link:inertial:origin:rpy = (0, 0, 0)
            point3f urdf:link:inertial:origin:xyz = (2.0724932e-11, -1.156129e-7, 0.025402764)
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Mesh "Geom_10" (
                prepend apiSchemas = ["MujocoGeomAPI", "MaterialBindingAPI", "UrdfLinkVisualAPI", "UrdfGeometryMeshAPI"]
                prepend references = @./allegro_right/meshes/usd/link_3.0_tip.usda@</link_3_0_tip>
            )
            {
                rel material:binding = </allegro_right/ff_distal/ff_tip/Geom_10/Materials/white>
                rel mujoco:geom:material = </mujoco/asset/materials/white>
                rel mujoco:geom:mesh = </mujoco/asset/meshes/link_3_0_tip>
                point3f mujoco:geom:pos = (2.0724932e-11, -1.156129e-7, 0.025402764)
                quatf mujoco:geom:quat = (1, 0, 0, 0)
                vector3f mujoco:geom:size = (1, 1, 1)
                uniform token mujoco:geom:type = "mesh"
                color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
                float[] primvars:displayOpacity = [1]
                asset urdf:geometry:mesh:filename = @./allegro_right/meshes/obj/link_3.0_tip.obj@
                float3 urdf:geometry:mesh:scale = (1, 1, 1)
                float3 urdf:visual:origin:rpy = (0, 0, 0)
                point3f urdf:visual:origin:xyz = (2.0724932e-11, -1.156129e-7, 0.025402764)
                matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (2.0724932956949826e-11, -1.1561290070827792e-7, 0.025402764748758085, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]

                def Scope "Materials"
                {
                    def Material "white" (
                        prepend references = @./allegro_right/materials/usd/white.usda@</white>
                    )
                    {
                    }
                }
            }

            def Cylinder "Geom_11" (
                prepend apiSchemas = ["PhysicsCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryCylinderAPI"]
            )
            {
                float3[] extent = [(-0.012, -0.012, -0.01), (0.012, 0.012, 0.01)]
                double height = 0.02
                point3f mujoco:geom:pos = (0, 0, 0.019)
                quatf mujoco:geom:quat = (1, 0, 0, 0)
                vector3f mujoco:geom:size = (0.012, 0.01, 0)
                uniform token mujoco:geom:type = "capsule"
                bool physics:collisionEnabled = 1
                color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
                float[] primvars:displayOpacity = [0]
                double radius = 0.012
                float3 urdf:collision:origin:rpy = (0, 0, 0)
                point3f urdf:collision:origin:xyz = (0, 0, 0.019)
                float urdf:geometry:cylinder:length = 0.02
                float urdf:geometry:cylinder:radius = 0.012
                token visibility = "invisible"
                matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0.019, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }
        }
    }

    def Xform "mf_base" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMassAPI", "MujocoBodyAPI", "MujocoBodyInertialAPI", "UrdfLinkInertialAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (7.6537674e-7, 6.8884293e-7, 3.550457e-7)
        float mujoco:body:inertial:mass = 0.0072320164
        point3f mujoco:body:inertial:pos = (-0.0007781272, -0.000010286682, 0.008282494)
        quatf mujoco:body:inertial:quat = (0.6841336, 0.6859369, -0.17537077, 0.17520528)
        point3f mujoco:body:pos = (0, 0, 0.0007)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        point3f physics:centerOfMass = (-0.0007781272, -0.000010286682, 0.008282494)
        float3 physics:diagonalInertia = (7.6537674e-7, 6.8884293e-7, 3.550457e-7)
        float physics:mass = 0.0072320164
        quatf physics:principalAxes = (0.6841336, 0.6859369, -0.17537077, 0.17520528)
        bool physics:rigidBodyEnabled = 1
        float urdf:link:inertial:inertia:ixx = 7.6537674e-7
        float urdf:link:inertial:inertia:iyy = 6.8884293e-7
        float urdf:link:inertial:inertia:izz = 3.550457e-7
        float urdf:link:inertial:mass = 0.0072320164
        float3 urdf:link:inertial:origin:rpy = (1.5736793, -0.5010122, -0.0009793029)
        point3f urdf:link:inertial:origin:xyz = (-0.0007781272, -0.000010286682, 0.008282494)
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0.0007, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "Geom_12" (
            prepend apiSchemas = ["MujocoGeomAPI", "MaterialBindingAPI", "UrdfLinkVisualAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./allegro_right/meshes/usd/link_0.0.usda@</link_0_0>
        )
        {
            rel material:binding = </allegro_right/mf_base/Geom_12/Materials/black>
            rel mujoco:geom:material = </mujoco/asset/materials/black>
            rel mujoco:geom:mesh = </mujoco/asset/meshes/link_0_0>
            point3f mujoco:geom:pos = (-0.0007781272, -0.000010286682, 0.008282494)
            quatf mujoco:geom:quat = (0.6841326, 0.6859359, -0.17537458, 0.17520909)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [1]
            asset urdf:geometry:mesh:filename = @./allegro_right/meshes/obj/link_0.0.obj@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            float3 urdf:visual:origin:rpy = (1.5736794, -0.50102335, -0.0009793323)
            point3f urdf:visual:origin:xyz = (-0.0007781272, -0.000010286682, 0.008282494)
            matrix4d xformOp:transform = ( (0.8770910669601198, -0.0008589638930344978, 0.4803233519617687, 0), (-0.4803239488597908, -0.0024126714309984365, 0.8770878423329693, 0), (0.000405475641335834, -0.9999967205934213, -0.002528713488668899, 0), (-0.0007781272160704294, -0.000010286681267700354, 0.008282493338668923, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Scope "Materials"
            {
                def Material "black" (
                    prepend references = @./allegro_right/materials/usd/black.usda@</black>
                )
                {
                }
            }
        }

        def Cube "Geom_13" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (0, 0, 0.0082)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.0098, 0.01375, 0.0082)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0.0082)
            float3 urdf:geometry:box:size = (0.0196, 0.0275, 0.0164)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.0098, 0, 0, 0), (0, 0.01375, 0, 0), (0, 0, 0.0082, 0), (0, 0, 0.0082, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def PhysicsRevoluteJoint "mfj1" (
            prepend apiSchemas = ["MujocoJointAPI", "UrdfJointAPI"]
        )
        {
            vector3f mujoco:joint:axis = (0, 1, 0)
            point3f mujoco:joint:pos = (0, 0, 0)
            float2 mujoco:joint:range = (-0.196, 1.61)
            uniform token mujoco:joint:type = "hinge"
            uniform token physics:axis = "Z"
            rel physics:body0 = </allegro_right/mf_base>
            rel physics:body1 = </allegro_right/mf_proximal>
            bool physics:collisionEnabled = 0
            point3f physics:localPos0 = (0, 0, 0.0164)
            point3f physics:localPos1 = (0, 0, 0)
            quatf physics:localRot0 = (0.7071068, -0.7071068, 0, 0)
            quatf physics:localRot1 = (0.7071068, -0.7071068, 0, 0)
            float physics:lowerLimit = -11.229973
            float physics:upperLimit = 92.24621
            vector3f urdf:joint:axis = (0, 1, 0)
            prepend rel urdf:joint:child = </allegro_right/mf_proximal>
            float urdf:joint:limit:effort = 1000
            float urdf:joint:limit:lower = -0.196
            float urdf:joint:limit:upper = 1.61
            float urdf:joint:limit:velocity = 1000
            float3 urdf:joint:origin:rpy = (0, 0, 0)
            point3f urdf:joint:origin:xyz = (0, 0, 0.0164)
            prepend rel urdf:joint:parent = </allegro_right/mf_base>
            uniform token urdf:joint:type = "revolute"
        }
    }

    def Xform "mf_proximal" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMassAPI", "MujocoBodyAPI", "MujocoBodyInertialAPI", "UrdfLinkInertialAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (0.000011862359, 0.000011276808, 0.0000022658685)
        float mujoco:body:inertial:mass = 0.027276123
        point3f mujoco:body:inertial:pos = (2.7525333e-8, -0.00009059567, 0.02699977)
        quatf mujoco:body:inertial:quat = (1, -0.0000030626327, 1.7406441e-11, 0.0000056834892)
        point3f mujoco:body:pos = (0, 0, 0.0164)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        point3f physics:centerOfMass = (2.7525333e-8, -0.00009059567, 0.02699977)
        float3 physics:diagonalInertia = (0.000011862359, 0.000011276808, 0.0000022658685)
        float physics:mass = 0.027276123
        quatf physics:principalAxes = (1, -0.0000030626327, 1.7406441e-11, 0.0000056834892)
        bool physics:rigidBodyEnabled = 1
        float urdf:link:inertial:inertia:ixx = 0.000011862359
        float urdf:link:inertial:inertia:iyy = 0.000011276808
        float urdf:link:inertial:inertia:izz = 0.0000022658685
        float urdf:link:inertial:mass = 0.027276123
        float3 urdf:link:inertial:origin:rpy = (-0.0000061252654, 6.962586e-11, 0.0000113669785)
        point3f urdf:link:inertial:origin:xyz = (2.7525333e-8, -0.00009059567, 0.02699977)
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0.0171, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "Geom_14" (
            prepend apiSchemas = ["MujocoGeomAPI", "MaterialBindingAPI", "UrdfLinkVisualAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./allegro_right/meshes/usd/link_1.0.usda@</link_1_0>
        )
        {
            rel material:binding = </allegro_right/mf_proximal/Geom_14/Materials/black>
            rel mujoco:geom:material = </mujoco/asset/materials/black>
            rel mujoco:geom:mesh = </mujoco/asset/meshes/link_1_0>
            point3f mujoco:geom:pos = (2.7525333e-8, -0.00009059567, 0.02699977)
            quatf mujoco:geom:quat = (1, -0.0000030626327, 1.7406441e-11, 0.0000056834892)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [1]
            asset urdf:geometry:mesh:filename = @./allegro_right/meshes/obj/link_1.0.obj@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            float3 urdf:visual:origin:rpy = (-0.0000061252654, 6.962586e-11, 0.0000113669785)
            point3f urdf:visual:origin:xyz = (2.7525333e-8, -0.00009059567, 0.02699977)
            matrix4d xformOp:transform = ( (0.9999999999353959, 0.000011366978476537383, -6.96257605910112e-11, 0), (-0.000011366978476750622, 0.9999999999166365, -0.000006125265454572796, 0), (0, 0.000006125265454968513, 0.9999999999812406, 0), (2.752533261725189e-8, -0.00009059566995957329, 0.02699976946079976, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Scope "Materials"
            {
                def Material "black" (
                    prepend references = @./allegro_right/materials/usd/black.usda@</black>
                )
                {
                }
            }
        }

        def Cube "Geom_15" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (0, 0, 0.027)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.0098, 0.01375, 0.027)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0.027)
            float3 urdf:geometry:box:size = (0.0196, 0.0275, 0.054)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.0098, 0, 0, 0), (0, 0.01375, 0, 0), (0, 0, 0.027, 0), (0, 0, 0.027, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def PhysicsRevoluteJoint "mfj2" (
            prepend apiSchemas = ["MujocoJointAPI", "UrdfJointAPI"]
        )
        {
            vector3f mujoco:joint:axis = (0, 1, 0)
            point3f mujoco:joint:pos = (0, 0, 0)
            float2 mujoco:joint:range = (-0.174, 1.709)
            uniform token mujoco:joint:type = "hinge"
            uniform token physics:axis = "Z"
            rel physics:body0 = </allegro_right/mf_proximal>
            rel physics:body1 = </allegro_right/mf_medial>
            bool physics:collisionEnabled = 0
            point3f physics:localPos0 = (0, 0, 0.054)
            point3f physics:localPos1 = (0, 0, 0)
            quatf physics:localRot0 = (0.7071068, -0.7071068, 0, 0)
            quatf physics:localRot1 = (0.7071068, -0.7071068, 0, 0)
            float physics:lowerLimit = -9.969465
            float physics:upperLimit = 97.91849
            vector3f urdf:joint:axis = (0, 1, 0)
            prepend rel urdf:joint:child = </allegro_right/mf_medial>
            float urdf:joint:limit:effort = 1000
            float urdf:joint:limit:lower = -0.174
            float urdf:joint:limit:upper = 1.709
            float urdf:joint:limit:velocity = 1000
            float3 urdf:joint:origin:rpy = (0, 0, 0)
            point3f urdf:joint:origin:xyz = (0, 0, 0.054)
            prepend rel urdf:joint:parent = </allegro_right/mf_proximal>
            uniform token urdf:joint:type = "revolute"
        }
    }

    def Xform "mf_medial" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMassAPI", "MujocoBodyAPI", "MujocoBodyInertialAPI", "UrdfLinkInertialAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (0.0000042873276, 0.0000036356423, 0.0000016736698)
        float mujoco:body:inertial:mass = 0.018463746
        point3f mujoco:body:inertial:pos = (-0.00019288158, -0.000077904275, 0.022586012)
        quatf mujoco:body:inertial:quat = (0.999903, -0.00028699808, 0.013923503, 0.0001700863)
        point3f mujoco:body:pos = (0, 0, 0.054)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        point3f physics:centerOfMass = (-0.00019288158, -0.000077904275, 0.022586012)
        float3 physics:diagonalInertia = (0.0000042873276, 0.0000036356423, 0.0000016736698)
        float physics:mass = 0.018463746
        quatf physics:principalAxes = (0.999903, -0.00028699808, 0.013923503, 0.0001700863)
        bool physics:rigidBodyEnabled = 1
        float urdf:link:inertial:inertia:ixx = 0.0000042873276
        float urdf:link:inertial:inertia:iyy = 0.0000036356423
        float urdf:link:inertial:inertia:izz = 0.0000016736698
        float urdf:link:inertial:mass = 0.018463746
        float3 urdf:link:inertial:origin:rpy = (-0.0005694249, 0.027848002, 0.00033227642)
        point3f urdf:link:inertial:origin:xyz = (-0.00019288158, -0.000077904275, 0.022586012)
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0.0711, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "Geom_16" (
            prepend apiSchemas = ["MujocoGeomAPI", "MaterialBindingAPI", "UrdfLinkVisualAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./allegro_right/meshes/usd/link_2.0.usda@</link_2_0>
        )
        {
            rel material:binding = </allegro_right/mf_medial/Geom_16/Materials/black>
            rel mujoco:geom:material = </mujoco/asset/materials/black>
            rel mujoco:geom:mesh = </mujoco/asset/meshes/link_2_0>
            point3f mujoco:geom:pos = (-0.00019288158, -0.000077904275, 0.022586012)
            quatf mujoco:geom:quat = (0.999903, -0.00028699808, 0.013923479, 0.00017008632)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [1]
            asset urdf:geometry:mesh:filename = @./allegro_right/meshes/obj/link_2.0.obj@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            float3 urdf:visual:origin:rpy = (-0.00056942494, 0.027847955, 0.00033227645)
            point3f urdf:visual:origin:xyz = (-0.00019288158, -0.000077904275, 0.022586012)
            matrix4d xformOp:transform = ( (0.9996122155699828, 0.0003321476113283091, -0.0278443560032279, 0), (-0.0003481316592738647, 0.9999997774054904, -0.0005692041087569244, 0), (0.02784416074544205, 0.0005786768821228625, 0.999612108692891, 0), (-0.00019288158089426116, -0.00007790427771672218, 0.022586011844823915, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Scope "Materials"
            {
                def Material "black" (
                    prepend references = @./allegro_right/materials/usd/black.usda@</black>
                )
                {
                }
            }
        }

        def Cube "Geom_17" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (0, 0, 0.0192)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.0098, 0.01375, 0.0192)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0.0192)
            float3 urdf:geometry:box:size = (0.0196, 0.0275, 0.0384)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.0098, 0, 0, 0), (0, 0.01375, 0, 0), (0, 0, 0.0192, 0), (0, 0, 0.0192, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def PhysicsRevoluteJoint "mfj3" (
            prepend apiSchemas = ["MujocoJointAPI", "UrdfJointAPI"]
        )
        {
            vector3f mujoco:joint:axis = (0, 1, 0)
            point3f mujoco:joint:pos = (0, 0, 0)
            float2 mujoco:joint:range = (-0.227, 1.618)
            uniform token mujoco:joint:type = "hinge"
            uniform token physics:axis = "Z"
            rel physics:body0 = </allegro_right/mf_medial>
            rel physics:body1 = </allegro_right/mf_distal>
            bool physics:collisionEnabled = 0
            point3f physics:localPos0 = (0, 0, 0.0384)
            point3f physics:localPos1 = (0, 0, 0)
            quatf physics:localRot0 = (0.7071068, -0.7071068, 0, 0)
            quatf physics:localRot1 = (0.7071068, -0.7071068, 0, 0)
            float physics:lowerLimit = -13.006142
            float physics:upperLimit = 92.704575
            vector3f urdf:joint:axis = (0, 1, 0)
            prepend rel urdf:joint:child = </allegro_right/mf_distal>
            float urdf:joint:limit:effort = 1000
            float urdf:joint:limit:lower = -0.227
            float urdf:joint:limit:upper = 1.618
            float urdf:joint:limit:velocity = 1000
            float3 urdf:joint:origin:rpy = (0, 0, 0)
            point3f urdf:joint:origin:xyz = (0, 0, 0.0384)
            prepend rel urdf:joint:parent = </allegro_right/mf_medial>
            uniform token urdf:joint:type = "revolute"
        }
    }

    def Xform "mf_distal" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMassAPI", "MujocoBodyAPI", "MujocoBodyInertialAPI", "UrdfLinkInertialAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (7.9637954e-7, 7.281658e-7, 3.7775212e-7)
        float mujoco:body:inertial:mass = 0.0075123115
        point3f mujoco:body:inertial:pos = (-0.0005208061, -0.0000033249887, 0.0072512897)
        quatf mujoco:body:inertial:quat = (0.68775237, 0.68771815, 0.16445227, -0.16430427)
        point3f mujoco:body:pos = (0, 0, 0.0384)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        point3f physics:centerOfMass = (-0.0005208061, -0.0000033249887, 0.0072512897)
        float3 physics:diagonalInertia = (7.9637954e-7, 7.281658e-7, 3.7775212e-7)
        float physics:mass = 0.0075123115
        quatf physics:principalAxes = (0.68775237, 0.68771815, 0.16445227, -0.16430427)
        bool physics:rigidBodyEnabled = 1
        float urdf:link:inertial:inertia:ixx = 7.9637954e-7
        float urdf:link:inertial:inertia:iyy = 7.281658e-7
        float urdf:link:inertial:inertia:izz = 3.7775212e-7
        float urdf:link:inertial:mass = 0.0075123115
        float3 urdf:link:inertial:origin:rpy = (1.5707982, 0.46922472, 0.00021562444)
        point3f urdf:link:inertial:origin:xyz = (-0.0005208061, -0.0000033249887, 0.0072512897)
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0.10949999999999999, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "Geom_18" (
            prepend apiSchemas = ["MujocoGeomAPI", "MaterialBindingAPI", "UrdfLinkVisualAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./allegro_right/meshes/usd/link_3.0.usda@</link_3_0>
        )
        {
            rel material:binding = </allegro_right/mf_distal/Geom_18/Materials/black>
            rel mujoco:geom:material = </mujoco/asset/materials/black>
            rel mujoco:geom:mesh = </mujoco/asset/meshes/link_3_0>
            point3f mujoco:geom:pos = (-0.0005208061, -0.0000033249887, 0.0072512897)
            quatf mujoco:geom:quat = (0.68775237, 0.68771815, 0.16445224, -0.16430424)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [1]
            asset urdf:geometry:mesh:filename = @./allegro_right/meshes/obj/link_3.0.obj@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            float3 urdf:visual:origin:rpy = (1.5707982, 0.46922463, 0.00021561774)
            point3f urdf:visual:origin:xyz = (-0.0005208061, -0.0000033249887, 0.0072512897)
            matrix4d xformOp:transform = ( (0.891919155666993, 0.00019231359515900492, -0.4521948504458663, 0), (0.4521948403168342, 0.0000957241065854264, 0.8919191763986961, 0), (0.00021481413146601236, -0.9999999769261881, -0.000001585051131014481, 0), (-0.0005208061238370608, -0.0000033249886218826706, 0.007251289762765761, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Scope "Materials"
            {
                def Material "black" (
                    prepend references = @./allegro_right/materials/usd/black.usda@</black>
                )
                {
                }
            }
        }

        def Cube "Geom_19" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (0, 0, 0.008)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.0098, 0.01375, 0.008)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0.008)
            float3 urdf:geometry:box:size = (0.0196, 0.0275, 0.016)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.0098, 0, 0, 0), (0, 0.01375, 0, 0), (0, 0, 0.008, 0), (0, 0, 0.008, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Xform "mf_tip" (
            prepend apiSchemas = ["PhysicsMassAPI", "MujocoBodyAPI", "MujocoBodyInertialAPI", "UrdfLinkInertialAPI"]
        )
        {
            float3 mujoco:body:inertial:diaginertia = (4.5582308e-7, 4.558136e-7, 4.4955877e-7)
            float mujoco:body:inertial:mass = 0.0068445215
            point3f mujoco:body:inertial:pos = (2.0724932e-11, -1.156129e-7, 0.025402764)
            quatf mujoco:body:inertial:quat = (1, 0, 0, 0)
            point3f mujoco:body:pos = (0, 0, 0)
            quatf mujoco:body:quat = (1, 0, 0, 0)
            point3f physics:centerOfMass = (2.0724932e-11, -1.156129e-7, 0.025402764)
            float3 physics:diagonalInertia = (4.5582308e-7, 4.558136e-7, 4.4955877e-7)
            float physics:mass = 0.0068445215
            quatf physics:principalAxes = (1, 0, 0, 0)
            float urdf:link:inertial:inertia:ixx = 4.5582308e-7
            float urdf:link:inertial:inertia:iyy = 4.558136e-7
            float urdf:link:inertial:inertia:izz = 4.4955877e-7
            float urdf:link:inertial:mass = 0.0068445215
            float3 urdf:link:inertial:origin:rpy = (0, 0, 0)
            point3f urdf:link:inertial:origin:xyz = (2.0724932e-11, -1.156129e-7, 0.025402764)
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Mesh "Geom_20" (
                prepend apiSchemas = ["MujocoGeomAPI", "MaterialBindingAPI", "UrdfLinkVisualAPI", "UrdfGeometryMeshAPI"]
                prepend references = @./allegro_right/meshes/usd/link_3.0_tip.usda@</link_3_0_tip>
            )
            {
                rel material:binding = </allegro_right/mf_distal/mf_tip/Geom_20/Materials/white>
                rel mujoco:geom:material = </mujoco/asset/materials/white>
                rel mujoco:geom:mesh = </mujoco/asset/meshes/link_3_0_tip>
                point3f mujoco:geom:pos = (2.0724932e-11, -1.156129e-7, 0.025402764)
                quatf mujoco:geom:quat = (1, 0, 0, 0)
                vector3f mujoco:geom:size = (1, 1, 1)
                uniform token mujoco:geom:type = "mesh"
                color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
                float[] primvars:displayOpacity = [1]
                asset urdf:geometry:mesh:filename = @./allegro_right/meshes/obj/link_3.0_tip.obj@
                float3 urdf:geometry:mesh:scale = (1, 1, 1)
                float3 urdf:visual:origin:rpy = (0, 0, 0)
                point3f urdf:visual:origin:xyz = (2.0724932e-11, -1.156129e-7, 0.025402764)
                matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (2.0724932956949826e-11, -1.1561290070827792e-7, 0.025402764748758085, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]

                def Scope "Materials"
                {
                    def Material "white" (
                        prepend references = @./allegro_right/materials/usd/white.usda@</white>
                    )
                    {
                    }
                }
            }

            def Cylinder "Geom_21" (
                prepend apiSchemas = ["PhysicsCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryCylinderAPI"]
            )
            {
                float3[] extent = [(-0.012, -0.012, -0.01), (0.012, 0.012, 0.01)]
                double height = 0.02
                point3f mujoco:geom:pos = (0, 0, 0.019)
                quatf mujoco:geom:quat = (1, 0, 0, 0)
                vector3f mujoco:geom:size = (0.012, 0.01, 0)
                uniform token mujoco:geom:type = "capsule"
                bool physics:collisionEnabled = 1
                color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
                float[] primvars:displayOpacity = [0]
                double radius = 0.012
                float3 urdf:collision:origin:rpy = (0, 0, 0)
                point3f urdf:collision:origin:xyz = (0, 0, 0.019)
                float urdf:geometry:cylinder:length = 0.02
                float urdf:geometry:cylinder:radius = 0.012
                token visibility = "invisible"
                matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0.019, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }
        }
    }

    def Xform "rf_base" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMassAPI", "MujocoBodyAPI", "MujocoBodyInertialAPI", "UrdfLinkInertialAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (7.6537674e-7, 6.8884293e-7, 3.550457e-7)
        float mujoco:body:inertial:mass = 0.0072320164
        point3f mujoco:body:inertial:pos = (-0.0007781272, -0.000010286682, 0.008282494)
        quatf mujoco:body:inertial:quat = (0.6841336, 0.6859369, -0.17537077, 0.17520528)
        point3f mujoco:body:pos = (0, -0.0435, -0.001542)
        quatf mujoco:body:quat = (0.99904823, 0.04361941, 0, 0)
        point3f physics:centerOfMass = (-0.0007781272, -0.000010286682, 0.008282494)
        float3 physics:diagonalInertia = (7.6537674e-7, 6.8884293e-7, 3.550457e-7)
        float physics:mass = 0.0072320164
        quatf physics:principalAxes = (0.6841336, 0.6859369, -0.17537077, 0.17520528)
        bool physics:rigidBodyEnabled = 1
        float urdf:link:inertial:inertia:ixx = 7.6537674e-7
        float urdf:link:inertial:inertia:iyy = 6.8884293e-7
        float urdf:link:inertial:inertia:izz = 3.550457e-7
        float urdf:link:inertial:mass = 0.0072320164
        float3 urdf:link:inertial:origin:rpy = (1.5736793, -0.5010122, -0.0009793029)
        point3f urdf:link:inertial:origin:xyz = (-0.0007781272, -0.000010286682, 0.008282494)
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 0.9961946942067061, 0.08715578715385047, 0), (0, -0.08715578715385047, 0.9961946942067061, 0), (0, -0.0435, -0.001542, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "Geom_22" (
            prepend apiSchemas = ["MujocoGeomAPI", "MaterialBindingAPI", "UrdfLinkVisualAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./allegro_right/meshes/usd/link_0.0.usda@</link_0_0>
        )
        {
            rel material:binding = </allegro_right/rf_base/Geom_22/Materials/black>
            rel mujoco:geom:material = </mujoco/asset/materials/black>
            rel mujoco:geom:mesh = </mujoco/asset/meshes/link_0_0>
            point3f mujoco:geom:pos = (-0.0007781272, -0.000010286682, 0.008282494)
            quatf mujoco:geom:quat = (0.6841326, 0.6859359, -0.17537458, 0.17520909)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [1]
            asset urdf:geometry:mesh:filename = @./allegro_right/meshes/obj/link_0.0.obj@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            float3 urdf:visual:origin:rpy = (1.5736794, -0.50102335, -0.0009793323)
            point3f urdf:visual:origin:xyz = (-0.0007781272, -0.000010286682, 0.008282494)
            matrix4d xformOp:transform = ( (0.8770910669601198, -0.0008589638930344978, 0.4803233519617687, 0), (-0.4803239488597908, -0.0024126714309984365, 0.8770878423329693, 0), (0.000405475641335834, -0.9999967205934213, -0.002528713488668899, 0), (-0.0007781272160704294, -0.000010286681267700354, 0.008282493338668923, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Scope "Materials"
            {
                def Material "black" (
                    prepend references = @./allegro_right/materials/usd/black.usda@</black>
                )
                {
                }
            }
        }

        def Cube "Geom_23" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (0, 0, 0.0082)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.0098, 0.01375, 0.0082)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0.0082)
            float3 urdf:geometry:box:size = (0.0196, 0.0275, 0.0164)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.0098, 0, 0, 0), (0, 0.01375, 0, 0), (0, 0, 0.0082, 0), (0, 0, 0.0082, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def PhysicsRevoluteJoint "rfj1" (
            prepend apiSchemas = ["MujocoJointAPI", "UrdfJointAPI"]
        )
        {
            vector3f mujoco:joint:axis = (0, 1, 0)
            point3f mujoco:joint:pos = (0, 0, 0)
            float2 mujoco:joint:range = (-0.196, 1.61)
            uniform token mujoco:joint:type = "hinge"
            uniform token physics:axis = "Z"
            rel physics:body0 = </allegro_right/rf_base>
            rel physics:body1 = </allegro_right/rf_proximal>
            bool physics:collisionEnabled = 0
            point3f physics:localPos0 = (0, 0, 0.0164)
            point3f physics:localPos1 = (0, 0, 0)
            quatf physics:localRot0 = (0.7071068, -0.7071068, 0, 0)
            quatf physics:localRot1 = (0.7071068, -0.7071068, 0, 0)
            float physics:lowerLimit = -11.229973
            float physics:upperLimit = 92.24621
            vector3f urdf:joint:axis = (0, 1, 0)
            prepend rel urdf:joint:child = </allegro_right/rf_proximal>
            float urdf:joint:limit:effort = 1000
            float urdf:joint:limit:lower = -0.196
            float urdf:joint:limit:upper = 1.61
            float urdf:joint:limit:velocity = 1000
            float3 urdf:joint:origin:rpy = (0, 0, 0)
            point3f urdf:joint:origin:xyz = (0, 0, 0.0164)
            prepend rel urdf:joint:parent = </allegro_right/rf_base>
            uniform token urdf:joint:type = "revolute"
        }
    }

    def Xform "rf_proximal" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMassAPI", "MujocoBodyAPI", "MujocoBodyInertialAPI", "UrdfLinkInertialAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (0.000011862359, 0.000011276808, 0.0000022658685)
        float mujoco:body:inertial:mass = 0.027276123
        point3f mujoco:body:inertial:pos = (2.7525333e-8, -0.00009059567, 0.02699977)
        quatf mujoco:body:inertial:quat = (1, -0.0000030626327, 1.7406441e-11, 0.0000056834892)
        point3f mujoco:body:pos = (0, 0, 0.0164)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        point3f physics:centerOfMass = (2.7525333e-8, -0.00009059567, 0.02699977)
        float3 physics:diagonalInertia = (0.000011862359, 0.000011276808, 0.0000022658685)
        float physics:mass = 0.027276123
        quatf physics:principalAxes = (1, -0.0000030626327, 1.7406441e-11, 0.0000056834892)
        bool physics:rigidBodyEnabled = 1
        float urdf:link:inertial:inertia:ixx = 0.000011862359
        float urdf:link:inertial:inertia:iyy = 0.000011276808
        float urdf:link:inertial:inertia:izz = 0.0000022658685
        float urdf:link:inertial:mass = 0.027276123
        float3 urdf:link:inertial:origin:rpy = (-0.0000061252654, 6.962586e-11, 0.0000113669785)
        point3f urdf:link:inertial:origin:xyz = (2.7525333e-8, -0.00009059567, 0.02699977)
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 0.9961946942067061, 0.08715578715385047, 0), (0, -0.08715578715385047, 0.9961946942067061, 0), (0, -0.04492935490932314, 0.014795592984989983, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "Geom_24" (
            prepend apiSchemas = ["MujocoGeomAPI", "MaterialBindingAPI", "UrdfLinkVisualAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./allegro_right/meshes/usd/link_1.0.usda@</link_1_0>
        )
        {
            rel material:binding = </allegro_right/rf_proximal/Geom_24/Materials/black>
            rel mujoco:geom:material = </mujoco/asset/materials/black>
            rel mujoco:geom:mesh = </mujoco/asset/meshes/link_1_0>
            point3f mujoco:geom:pos = (2.7525333e-8, -0.00009059567, 0.02699977)
            quatf mujoco:geom:quat = (1, -0.0000030626327, 1.7406441e-11, 0.0000056834892)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [1]
            asset urdf:geometry:mesh:filename = @./allegro_right/meshes/obj/link_1.0.obj@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            float3 urdf:visual:origin:rpy = (-0.0000061252654, 6.962586e-11, 0.0000113669785)
            point3f urdf:visual:origin:xyz = (2.7525333e-8, -0.00009059567, 0.02699977)
            matrix4d xformOp:transform = ( (0.9999999999353959, 0.000011366978476537383, -6.96257605910112e-11, 0), (-0.000011366978476750622, 0.9999999999166365, -0.000006125265454572796, 0), (0, 0.000006125265454968513, 0.9999999999812406, 0), (2.752533261725189e-8, -0.00009059566995957329, 0.02699976946079976, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Scope "Materials"
            {
                def Material "black" (
                    prepend references = @./allegro_right/materials/usd/black.usda@</black>
                )
                {
                }
            }
        }

        def Cube "Geom_25" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (0, 0, 0.027)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.0098, 0.01375, 0.027)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0.027)
            float3 urdf:geometry:box:size = (0.0196, 0.0275, 0.054)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.0098, 0, 0, 0), (0, 0.01375, 0, 0), (0, 0, 0.027, 0), (0, 0, 0.027, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def PhysicsRevoluteJoint "rfj2" (
            prepend apiSchemas = ["MujocoJointAPI", "UrdfJointAPI"]
        )
        {
            vector3f mujoco:joint:axis = (0, 1, 0)
            point3f mujoco:joint:pos = (0, 0, 0)
            float2 mujoco:joint:range = (-0.174, 1.709)
            uniform token mujoco:joint:type = "hinge"
            uniform token physics:axis = "Z"
            rel physics:body0 = </allegro_right/rf_proximal>
            rel physics:body1 = </allegro_right/rf_medial>
            bool physics:collisionEnabled = 0
            point3f physics:localPos0 = (0, 0, 0.054)
            point3f physics:localPos1 = (0, 0, 0)
            quatf physics:localRot0 = (0.7071068, -0.7071068, 0, 0)
            quatf physics:localRot1 = (0.7071068, -0.7071068, 0, 0)
            float physics:lowerLimit = -9.969465
            float physics:upperLimit = 97.91849
            vector3f urdf:joint:axis = (0, 1, 0)
            prepend rel urdf:joint:child = </allegro_right/rf_medial>
            float urdf:joint:limit:effort = 1000
            float urdf:joint:limit:lower = -0.174
            float urdf:joint:limit:upper = 1.709
            float urdf:joint:limit:velocity = 1000
            float3 urdf:joint:origin:rpy = (0, 0, 0)
            point3f urdf:joint:origin:xyz = (0, 0, 0.054)
            prepend rel urdf:joint:parent = </allegro_right/rf_proximal>
            uniform token urdf:joint:type = "revolute"
        }
    }

    def Xform "rf_medial" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMassAPI", "MujocoBodyAPI", "MujocoBodyInertialAPI", "UrdfLinkInertialAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (0.0000042873276, 0.0000036356423, 0.0000016736698)
        float mujoco:body:inertial:mass = 0.018463746
        point3f mujoco:body:inertial:pos = (-0.00019288158, -0.000077904275, 0.022586012)
        quatf mujoco:body:inertial:quat = (0.999903, -0.00028699808, 0.013923503, 0.0001700863)
        point3f mujoco:body:pos = (0, 0, 0.054)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        point3f physics:centerOfMass = (-0.00019288158, -0.000077904275, 0.022586012)
        float3 physics:diagonalInertia = (0.0000042873276, 0.0000036356423, 0.0000016736698)
        float physics:mass = 0.018463746
        quatf physics:principalAxes = (0.999903, -0.00028699808, 0.013923503, 0.0001700863)
        bool physics:rigidBodyEnabled = 1
        float urdf:link:inertial:inertia:ixx = 0.0000042873276
        float urdf:link:inertial:inertia:iyy = 0.0000036356423
        float urdf:link:inertial:inertia:izz = 0.0000016736698
        float urdf:link:inertial:mass = 0.018463746
        float3 urdf:link:inertial:origin:rpy = (-0.0005694249, 0.027848002, 0.00033227642)
        point3f urdf:link:inertial:origin:xyz = (-0.00019288158, -0.000077904275, 0.022586012)
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 0.9961946942067061, 0.08715578715385047, 0), (0, -0.08715578715385047, 0.9961946942067061, 0), (0, -0.04963576741563107, 0.06859010647215212, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "Geom_26" (
            prepend apiSchemas = ["MujocoGeomAPI", "MaterialBindingAPI", "UrdfLinkVisualAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./allegro_right/meshes/usd/link_2.0.usda@</link_2_0>
        )
        {
            rel material:binding = </allegro_right/rf_medial/Geom_26/Materials/black>
            rel mujoco:geom:material = </mujoco/asset/materials/black>
            rel mujoco:geom:mesh = </mujoco/asset/meshes/link_2_0>
            point3f mujoco:geom:pos = (-0.00019288158, -0.000077904275, 0.022586012)
            quatf mujoco:geom:quat = (0.999903, -0.00028699808, 0.013923479, 0.00017008632)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [1]
            asset urdf:geometry:mesh:filename = @./allegro_right/meshes/obj/link_2.0.obj@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            float3 urdf:visual:origin:rpy = (-0.00056942494, 0.027847955, 0.00033227645)
            point3f urdf:visual:origin:xyz = (-0.00019288158, -0.000077904275, 0.022586012)
            matrix4d xformOp:transform = ( (0.9996122155699828, 0.0003321476113283091, -0.0278443560032279, 0), (-0.0003481316592738647, 0.9999997774054904, -0.0005692041087569244, 0), (0.02784416074544205, 0.0005786768821228625, 0.999612108692891, 0), (-0.00019288158089426116, -0.00007790427771672218, 0.022586011844823915, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Scope "Materials"
            {
                def Material "black" (
                    prepend references = @./allegro_right/materials/usd/black.usda@</black>
                )
                {
                }
            }
        }

        def Cube "Geom_27" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (0, 0, 0.0192)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.0098, 0.01375, 0.0192)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0.0192)
            float3 urdf:geometry:box:size = (0.0196, 0.0275, 0.0384)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.0098, 0, 0, 0), (0, 0.01375, 0, 0), (0, 0, 0.0192, 0), (0, 0, 0.0192, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def PhysicsRevoluteJoint "rfj3" (
            prepend apiSchemas = ["MujocoJointAPI", "UrdfJointAPI"]
        )
        {
            vector3f mujoco:joint:axis = (0, 1, 0)
            point3f mujoco:joint:pos = (0, 0, 0)
            float2 mujoco:joint:range = (-0.227, 1.618)
            uniform token mujoco:joint:type = "hinge"
            uniform token physics:axis = "Z"
            rel physics:body0 = </allegro_right/rf_medial>
            rel physics:body1 = </allegro_right/rf_distal>
            bool physics:collisionEnabled = 0
            point3f physics:localPos0 = (0, 0, 0.0384)
            point3f physics:localPos1 = (0, 0, 0)
            quatf physics:localRot0 = (0.7071068, -0.7071068, 0, 0)
            quatf physics:localRot1 = (0.7071068, -0.7071068, 0, 0)
            float physics:lowerLimit = -13.006142
            float physics:upperLimit = 92.704575
            vector3f urdf:joint:axis = (0, 1, 0)
            prepend rel urdf:joint:child = </allegro_right/rf_distal>
            float urdf:joint:limit:effort = 1000
            float urdf:joint:limit:lower = -0.227
            float urdf:joint:limit:upper = 1.618
            float urdf:joint:limit:velocity = 1000
            float3 urdf:joint:origin:rpy = (0, 0, 0)
            point3f urdf:joint:origin:xyz = (0, 0, 0.0384)
            prepend rel urdf:joint:parent = </allegro_right/rf_medial>
            uniform token urdf:joint:type = "revolute"
        }
    }

    def Xform "rf_distal" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMassAPI", "MujocoBodyAPI", "MujocoBodyInertialAPI", "UrdfLinkInertialAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (7.9637954e-7, 7.281658e-7, 3.7775212e-7)
        float mujoco:body:inertial:mass = 0.0075123115
        point3f mujoco:body:inertial:pos = (-0.0005208061, -0.0000033249887, 0.0072512897)
        quatf mujoco:body:inertial:quat = (0.68775237, 0.68771815, 0.16445227, -0.16430427)
        point3f mujoco:body:pos = (0, 0, 0.0384)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        point3f physics:centerOfMass = (-0.0005208061, -0.0000033249887, 0.0072512897)
        float3 physics:diagonalInertia = (7.9637954e-7, 7.281658e-7, 3.7775212e-7)
        float physics:mass = 0.0075123115
        quatf physics:principalAxes = (0.68775237, 0.68771815, 0.16445227, -0.16430427)
        bool physics:rigidBodyEnabled = 1
        float urdf:link:inertial:inertia:ixx = 7.9637954e-7
        float urdf:link:inertial:inertia:iyy = 7.281658e-7
        float urdf:link:inertial:inertia:izz = 3.7775212e-7
        float urdf:link:inertial:mass = 0.0075123115
        float3 urdf:link:inertial:origin:rpy = (1.5707982, 0.46922472, 0.00021562444)
        point3f urdf:link:inertial:origin:xyz = (-0.0005208061, -0.0000033249887, 0.0072512897)
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 0.9961946942067061, 0.08715578715385047, 0), (0, -0.08715578715385047, 0.9961946942067061, 0), (0, -0.05298254964233893, 0.10684398272968963, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "Geom_28" (
            prepend apiSchemas = ["MujocoGeomAPI", "MaterialBindingAPI", "UrdfLinkVisualAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./allegro_right/meshes/usd/link_3.0.usda@</link_3_0>
        )
        {
            rel material:binding = </allegro_right/rf_distal/Geom_28/Materials/black>
            rel mujoco:geom:material = </mujoco/asset/materials/black>
            rel mujoco:geom:mesh = </mujoco/asset/meshes/link_3_0>
            point3f mujoco:geom:pos = (-0.0005208061, -0.0000033249887, 0.0072512897)
            quatf mujoco:geom:quat = (0.68775237, 0.68771815, 0.16445224, -0.16430424)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [1]
            asset urdf:geometry:mesh:filename = @./allegro_right/meshes/obj/link_3.0.obj@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            float3 urdf:visual:origin:rpy = (1.5707982, 0.46922463, 0.00021561774)
            point3f urdf:visual:origin:xyz = (-0.0005208061, -0.0000033249887, 0.0072512897)
            matrix4d xformOp:transform = ( (0.891919155666993, 0.00019231359515900492, -0.4521948504458663, 0), (0.4521948403168342, 0.0000957241065854264, 0.8919191763986961, 0), (0.00021481413146601236, -0.9999999769261881, -0.000001585051131014481, 0), (-0.0005208061238370608, -0.0000033249886218826706, 0.007251289762765761, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Scope "Materials"
            {
                def Material "black" (
                    prepend references = @./allegro_right/materials/usd/black.usda@</black>
                )
                {
                }
            }
        }

        def Cube "Geom_29" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (0, 0, 0.008)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.0098, 0.01375, 0.008)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0.008)
            float3 urdf:geometry:box:size = (0.0196, 0.0275, 0.016)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.0098, 0, 0, 0), (0, 0.01375, 0, 0), (0, 0, 0.008, 0), (0, 0, 0.008, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Xform "rf_tip" (
            prepend apiSchemas = ["PhysicsMassAPI", "MujocoBodyAPI", "MujocoBodyInertialAPI", "UrdfLinkInertialAPI"]
        )
        {
            float3 mujoco:body:inertial:diaginertia = (4.5582308e-7, 4.558136e-7, 4.4955877e-7)
            float mujoco:body:inertial:mass = 0.0068445215
            point3f mujoco:body:inertial:pos = (2.0724932e-11, -1.156129e-7, 0.025402764)
            quatf mujoco:body:inertial:quat = (1, 0, 0, 0)
            point3f mujoco:body:pos = (0, 0, 0)
            quatf mujoco:body:quat = (1, 0, 0, 0)
            point3f physics:centerOfMass = (2.0724932e-11, -1.156129e-7, 0.025402764)
            float3 physics:diagonalInertia = (4.5582308e-7, 4.558136e-7, 4.4955877e-7)
            float physics:mass = 0.0068445215
            quatf physics:principalAxes = (1, 0, 0, 0)
            float urdf:link:inertial:inertia:ixx = 4.5582308e-7
            float urdf:link:inertial:inertia:iyy = 4.558136e-7
            float urdf:link:inertial:inertia:izz = 4.4955877e-7
            float urdf:link:inertial:mass = 0.0068445215
            float3 urdf:link:inertial:origin:rpy = (0, 0, 0)
            point3f urdf:link:inertial:origin:xyz = (2.0724932e-11, -1.156129e-7, 0.025402764)
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Mesh "Geom_30" (
                prepend apiSchemas = ["MujocoGeomAPI", "MaterialBindingAPI", "UrdfLinkVisualAPI", "UrdfGeometryMeshAPI"]
                prepend references = @./allegro_right/meshes/usd/link_3.0_tip.usda@</link_3_0_tip>
            )
            {
                rel material:binding = </allegro_right/rf_distal/rf_tip/Geom_30/Materials/white>
                rel mujoco:geom:material = </mujoco/asset/materials/white>
                rel mujoco:geom:mesh = </mujoco/asset/meshes/link_3_0_tip>
                point3f mujoco:geom:pos = (2.0724932e-11, -1.156129e-7, 0.025402764)
                quatf mujoco:geom:quat = (1, 0, 0, 0)
                vector3f mujoco:geom:size = (1, 1, 1)
                uniform token mujoco:geom:type = "mesh"
                color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
                float[] primvars:displayOpacity = [1]
                asset urdf:geometry:mesh:filename = @./allegro_right/meshes/obj/link_3.0_tip.obj@
                float3 urdf:geometry:mesh:scale = (1, 1, 1)
                float3 urdf:visual:origin:rpy = (0, 0, 0)
                point3f urdf:visual:origin:xyz = (2.0724932e-11, -1.156129e-7, 0.025402764)
                matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (2.0724932956949826e-11, -1.1561290070827792e-7, 0.025402764748758085, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]

                def Scope "Materials"
                {
                    def Material "white" (
                        prepend references = @./allegro_right/materials/usd/white.usda@</white>
                    )
                    {
                    }
                }
            }

            def Cylinder "Geom_31" (
                prepend apiSchemas = ["PhysicsCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryCylinderAPI"]
            )
            {
                float3[] extent = [(-0.012, -0.012, -0.01), (0.012, 0.012, 0.01)]
                double height = 0.02
                point3f mujoco:geom:pos = (0, 0, 0.019)
                quatf mujoco:geom:quat = (1, 0, 0, 0)
                vector3f mujoco:geom:size = (0.012, 0.01, 0)
                uniform token mujoco:geom:type = "capsule"
                bool physics:collisionEnabled = 1
                color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
                float[] primvars:displayOpacity = [0]
                double radius = 0.012
                float3 urdf:collision:origin:rpy = (0, 0, 0)
                point3f urdf:collision:origin:xyz = (0, 0, 0.019)
                float urdf:geometry:cylinder:length = 0.02
                float urdf:geometry:cylinder:radius = 0.012
                token visibility = "invisible"
                matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0.019, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }
        }
    }

    def Xform "th_base" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMassAPI", "MujocoBodyAPI", "MujocoBodyInertialAPI", "UrdfLinkInertialAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (0.00001075321, 0.000009165587, 0.0000071090785)
        float mujoco:body:inertial:mass = 0.038258143
        point3f mujoco:body:inertial:pos = (-0.01791513, 0.00802441, 0.012314137)
        quatf mujoco:body:inertial:quat = (0.7009029, 0.05914143, -0.06316526, 0.70798844)
        point3f mujoco:body:pos = (-0.0182, 0.019333, -0.045987)
        quatf mujoco:body:quat = (0.4777141, -0.5213341, -0.5213341, -0.4777141)
        point3f physics:centerOfMass = (-0.01791513, 0.00802441, 0.012314137)
        float3 physics:diagonalInertia = (0.00001075321, 0.000009165587, 0.0000071090785)
        float physics:mass = 0.038258143
        quatf physics:principalAxes = (0.7009029, 0.05914143, -0.06316526, 0.70798844)
        bool physics:rigidBodyEnabled = 1
        float urdf:link:inertial:inertia:ixx = 0.00001075321
        float urdf:link:inertial:inertia:iyy = 0.000009165587
        float urdf:link:inertial:inertia:izz = 0.0000071090785
        float urdf:link:inertial:mass = 0.038258143
        float3 urdf:link:inertial:origin:rpy = (-0.0066350168, -0.17315225, 1.5814304)
        point3f urdf:link:inertial:origin:xyz = (-0.01791513, 0.00802441, 0.012314137)
        matrix4d xformOp:transform = ( (0, 0.08715698144986422, 0.996194589718569, 0), (1, 0, 0, 0), (0, 0.996194589718569, -0.08715698144986428, 0), (-0.0182, 0.019333, -0.045987, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "Geom_32" (
            prepend apiSchemas = ["MujocoGeomAPI", "MaterialBindingAPI", "UrdfLinkVisualAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./allegro_right/meshes/usd/link_12.0_right.usda@</link_12_0_right>
        )
        {
            rel material:binding = </allegro_right/th_base/Geom_32/Materials/black>
            rel mujoco:geom:material = </mujoco/asset/materials/black>
            rel mujoco:geom:mesh = </mujoco/asset/meshes/link_12_0_right>
            point3f mujoco:geom:pos = (-0.01791513, 0.00802441, 0.012314137)
            quatf mujoco:geom:quat = (0.70090276, 0.059141424, -0.06316528, 0.70798856)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [1]
            asset urdf:geometry:mesh:filename = @./allegro_right/meshes/obj/link_12.0_right.obj@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            float3 urdf:visual:origin:rpy = (-0.006635074, -0.17315227, 1.5814308)
            point3f urdf:visual:origin:xyz = (-0.01791513, 0.00802441, 0.012314137)
            matrix4d xformOp:transform = ( (-0.010475259650661206, 0.9849908634545271, 0.172288327655581, 0), (-0.9999336001239806, -0.00949097181215608, -0.0065358088372174244, 0), (-0.00480252832860191, -0.17234535202658197, 0.9850248805773825, 0), (-0.017915130289007576, 0.008024409953478575, 0.012314137314139252, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Scope "Materials"
            {
                def Material "black" (
                    prepend references = @./allegro_right/materials/usd/black.usda@</black>
                )
                {
                }
            }
        }

        def Cube "Geom_33" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (-0.0179, 0.009, 0.0145)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.0179, 0.017, 0.02275)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (-0.0179, 0.009, 0.0145)
            float3 urdf:geometry:box:size = (0.0358, 0.034, 0.0455)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.0179, 0, 0, 0), (0, 0.017, 0, 0), (0, 0, 0.02275, 0), (-0.0179, 0.009, 0.0145, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def PhysicsRevoluteJoint "thj1" (
            prepend apiSchemas = ["MujocoJointAPI", "UrdfJointAPI"]
        )
        {
            vector3f mujoco:joint:axis = (0, 0, 1)
            point3f mujoco:joint:pos = (0, 0, 0)
            float2 mujoco:joint:range = (-0.105, 1.163)
            uniform token mujoco:joint:type = "hinge"
            uniform token physics:axis = "Z"
            rel physics:body0 = </allegro_right/th_base>
            rel physics:body1 = </allegro_right/th_proximal>
            bool physics:collisionEnabled = 0
            point3f physics:localPos0 = (-0.027, 0.005, 0.0399)
            point3f physics:localPos1 = (0, 0, 0)
            quatf physics:localRot0 = (1, 0, 0, 0)
            quatf physics:localRot1 = (1, 0, 0, 0)
            float physics:lowerLimit = -6.016057
            float physics:upperLimit = 66.634995
            vector3f urdf:joint:axis = (0, 0, 1)
            prepend rel urdf:joint:child = </allegro_right/th_proximal>
            float urdf:joint:limit:effort = 1000
            float urdf:joint:limit:lower = -0.105000004
            float urdf:joint:limit:upper = 1.1630001
            float urdf:joint:limit:velocity = 1000
            float3 urdf:joint:origin:rpy = (0, 0, 0)
            point3f urdf:joint:origin:xyz = (-0.027, 0.005, 0.0399)
            prepend rel urdf:joint:parent = </allegro_right/th_base>
            uniform token urdf:joint:type = "revolute"
        }
    }

    def Xform "th_proximal" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMassAPI", "MujocoBodyAPI", "MujocoBodyInertialAPI", "UrdfLinkInertialAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (7.637486e-7, 6.8739985e-7, 3.539315e-7)
        float mujoco:body:inertial:mass = 0.0072193122
        point3f mujoco:body:inertial:pos = (-0.0007820269, -0.000010249381, 0.008104545)
        quatf mujoco:body:inertial:quat = (0.6839195, 0.68572056, -0.17621276, 0.17604133)
        point3f mujoco:body:pos = (-0.027, 0.005, 0.0399)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        point3f physics:centerOfMass = (-0.0007820269, -0.000010249381, 0.008104545)
        float3 physics:diagonalInertia = (7.637486e-7, 6.8739985e-7, 3.539315e-7)
        float physics:mass = 0.0072193122
        quatf physics:principalAxes = (0.6839195, 0.68572056, -0.17621276, 0.17604133)
        bool physics:rigidBodyEnabled = 1
        float urdf:link:inertial:inertia:ixx = 7.637486e-7
        float urdf:link:inertial:inertia:iyy = 6.8739985e-7
        float urdf:link:inertial:inertia:izz = 3.539315e-7
        float urdf:link:inertial:mass = 0.0072193122
        float3 urdf:link:inertial:origin:rpy = (1.5736816, -0.50346214, -0.0009923576)
        point3f urdf:link:inertial:origin:xyz = (-0.0007820269, -0.000010249381, 0.008104545)
        matrix4d xformOp:transform = ( (0, 0.08715698144986422, 0.996194589718569, 0), (1, 0, 0, 0), (0, 0.996194589718569, -0.08715698144986428, 0), (-0.0132, 0.056727925630624565, -0.07636181748225095, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "Geom_34" (
            prepend apiSchemas = ["MujocoGeomAPI", "MaterialBindingAPI", "UrdfLinkVisualAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./allegro_right/meshes/usd/link_13.0.usda@</link_13_0>
        )
        {
            rel material:binding = </allegro_right/th_proximal/Geom_34/Materials/black>
            rel mujoco:geom:material = </mujoco/asset/materials/black>
            rel mujoco:geom:mesh = </mujoco/asset/meshes/link_13_0>
            point3f mujoco:geom:pos = (-0.0007820269, -0.000010249381, 0.008104545)
            quatf mujoco:geom:quat = (0.6839185, 0.68571955, -0.1762166, 0.17604518)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [1]
            asset urdf:geometry:mesh:filename = @./allegro_right/meshes/obj/link_13.0.obj@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            float3 urdf:visual:origin:rpy = (1.5736816, -0.5034734, -0.0009923895)
            point3f urdf:visual:origin:xyz = (-0.0007820269, -0.000010249381, 0.008104545)
            matrix4d xformOp:transform = ( (0.8759116088904084, -0.0008692457619662586, 0.48247082587740125, 0), (-0.4824714433877456, -0.0024064407694244228, 0.8759083943873177, 0), (0.00039965780575729193, -0.9999967267219573, -0.0025272156634805754, 0), (-0.0007820269120817089, -0.000010249381005928983, 0.008104544956793963, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Scope "Materials"
            {
                def Material "black" (
                    prepend references = @./allegro_right/materials/usd/black.usda@</black>
                )
                {
                }
            }
        }

        def Cube "Geom_35" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (0, 0, 0.00885)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.0098, 0.01375, 0.00885)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0.00885)
            float3 urdf:geometry:box:size = (0.0196, 0.0275, 0.0177)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.0098, 0, 0, 0), (0, 0.01375, 0, 0), (0, 0, 0.00885, 0), (0, 0, 0.00885, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def PhysicsRevoluteJoint "thj2" (
            prepend apiSchemas = ["MujocoJointAPI", "UrdfJointAPI"]
        )
        {
            vector3f mujoco:joint:axis = (0, 1, 0)
            point3f mujoco:joint:pos = (0, 0, 0)
            float2 mujoco:joint:range = (-0.189, 1.644)
            uniform token mujoco:joint:type = "hinge"
            uniform token physics:axis = "Z"
            rel physics:body0 = </allegro_right/th_proximal>
            rel physics:body1 = </allegro_right/th_medial>
            bool physics:collisionEnabled = 0
            point3f physics:localPos0 = (0, 0, 0.0177)
            point3f physics:localPos1 = (0, 0, 0)
            quatf physics:localRot0 = (0.7071068, -0.7071068, 0, 0)
            quatf physics:localRot1 = (0.7071068, -0.7071068, 0, 0)
            float physics:lowerLimit = -10.828902
            float physics:upperLimit = 94.19426
            vector3f urdf:joint:axis = (0, 1, 0)
            prepend rel urdf:joint:child = </allegro_right/th_medial>
            float urdf:joint:limit:effort = 1000
            float urdf:joint:limit:lower = -0.189
            float urdf:joint:limit:upper = 1.6439999
            float urdf:joint:limit:velocity = 1000
            float3 urdf:joint:origin:rpy = (0, 0, 0)
            point3f urdf:joint:origin:xyz = (0, 0, 0.0177)
            prepend rel urdf:joint:parent = </allegro_right/th_proximal>
            uniform token urdf:joint:type = "revolute"
        }
    }

    def Xform "th_medial" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMassAPI", "MujocoBodyAPI", "MujocoBodyInertialAPI", "UrdfLinkInertialAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (0.000007527637, 0.000006583326, 0.0000021410644)
        float mujoco:body:inertial:mass = 0.022496473
        point3f mujoco:body:inertial:pos = (-0.00016433629, 0.00001714846, 0.021111917)
        quatf mujoco:body:inertial:quat = (0.9999598, 0.000030356043, -0.0089642415, 0.000113177746)
        point3f mujoco:body:pos = (0, 0, 0.0177)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        point3f physics:centerOfMass = (-0.00016433629, 0.00001714846, 0.021111917)
        float3 physics:diagonalInertia = (0.000007527637, 0.000006583326, 0.0000021410644)
        float physics:mass = 0.022496473
        quatf physics:principalAxes = (0.9999598, 0.000030356043, -0.0089642415, 0.000113177746)
        bool physics:rigidBodyEnabled = 1
        float urdf:link:inertial:inertia:ixx = 0.000007527637
        float urdf:link:inertial:inertia:iyy = 0.000006583326
        float urdf:link:inertial:inertia:izz = 0.0000021410644
        float urdf:link:inertial:mass = 0.022496473
        float3 urdf:link:inertial:origin:rpy = (0.000058689973, -0.017928729, 0.00022583845)
        point3f urdf:link:inertial:origin:xyz = (-0.00016433629, 0.00001714846, 0.021111917)
        matrix4d xformOp:transform = ( (0, 0.08715698144986422, 0.996194589718569, 0), (1, 0, 0, 0), (0, 0.996194589718569, -0.08715698144986428, 0), (-0.0132, 0.07436056986864323, -0.07790449605391354, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "Geom_36" (
            prepend apiSchemas = ["MujocoGeomAPI", "MaterialBindingAPI", "UrdfLinkVisualAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./allegro_right/meshes/usd/link_14.0.usda@</link_14_0>
        )
        {
            rel material:binding = </allegro_right/th_medial/Geom_36/Materials/black>
            rel mujoco:geom:material = </mujoco/asset/materials/black>
            rel mujoco:geom:mesh = </mujoco/asset/meshes/link_14_0>
            point3f mujoco:geom:pos = (-0.00016433629, 0.00001714846, 0.021111917)
            quatf mujoco:geom:quat = (0.9999598, 0.000030356043, -0.00896424, 0.000113177746)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [1]
            asset urdf:geometry:mesh:filename = @./allegro_right/meshes/obj/link_14.0.obj@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            float3 urdf:visual:origin:rpy = (0.000058689973, -0.017928727, 0.00022583845)
            point3f urdf:visual:origin:xyz = (-0.00016433629, 0.00001714846, 0.021111917)
            matrix4d xformOp:transform = ( (0.9998392591840347, 0.00022580215694160724, 0.01792776638922626, 0), (-0.00022689063237007928, 0.999999972538617, 0.00005868054174119845, 0), (-0.017927752646712106, -0.00006273875163607228, 0.9998392829594601, 0), (-0.00016433629251758847, 0.000017148460779135417, 0.021111917262054962, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Scope "Materials"
            {
                def Material "black" (
                    prepend references = @./allegro_right/materials/usd/black.usda@</black>
                )
                {
                }
            }
        }

        def Cube "Geom_37" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (0, 0, 0.0257)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.0098, 0.01375, 0.0257)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0.0257)
            float3 urdf:geometry:box:size = (0.0196, 0.0275, 0.0514)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.0098, 0, 0, 0), (0, 0.01375, 0, 0), (0, 0, 0.0257, 0), (0, 0, 0.0257, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def PhysicsRevoluteJoint "thj3" (
            prepend apiSchemas = ["MujocoJointAPI", "UrdfJointAPI"]
        )
        {
            vector3f mujoco:joint:axis = (0, 1, 0)
            point3f mujoco:joint:pos = (0, 0, 0)
            float2 mujoco:joint:range = (-0.162, 1.719)
            uniform token mujoco:joint:type = "hinge"
            uniform token physics:axis = "Z"
            rel physics:body0 = </allegro_right/th_medial>
            rel physics:body1 = </allegro_right/th_distal>
            bool physics:collisionEnabled = 0
            point3f physics:localPos0 = (-1.3877788e-17, 0, 0.0514)
            point3f physics:localPos1 = (0, 0, 0)
            quatf physics:localRot0 = (0.7071068, -0.7071068, 0, 0)
            quatf physics:localRot1 = (0.7071068, -0.7071068, 0, 0)
            float physics:lowerLimit = -9.281917
            float physics:upperLimit = 98.49145
            vector3f urdf:joint:axis = (0, 1, 0)
            prepend rel urdf:joint:child = </allegro_right/th_distal>
            float urdf:joint:limit:effort = 1000
            float urdf:joint:limit:lower = -0.162
            float urdf:joint:limit:upper = 1.7190001
            float urdf:joint:limit:velocity = 1000
            float3 urdf:joint:origin:rpy = (0, 0, 0)
            point3f urdf:joint:origin:xyz = (-1.3877788e-17, 0, 0.0514)
            prepend rel urdf:joint:parent = </allegro_right/th_medial>
            uniform token urdf:joint:type = "revolute"
        }
    }

    def Xform "th_distal" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMassAPI", "MujocoBodyAPI", "MujocoBodyInertialAPI", "UrdfLinkInertialAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (0.0000029137773, 0.0000025902032, 0.000001356517)
        float mujoco:body:inertial:mass = 0.016334496
        point3f mujoco:body:inertial:pos = (-6.764516e-12, 0.000003677195, 0.013075033)
        quatf mujoco:body:inertial:quat = (0.9999981, 0.001945448, 0, 0)
        point3f mujoco:body:pos = (0, 0, 0.0514)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        point3f physics:centerOfMass = (-6.764516e-12, 0.000003677195, 0.013075033)
        float3 physics:diagonalInertia = (0.0000029137773, 0.0000025902032, 0.000001356517)
        float physics:mass = 0.016334496
        quatf physics:principalAxes = (0.9999981, 0.001945448, 0, 0)
        bool physics:rigidBodyEnabled = 1
        float urdf:link:inertial:inertia:ixx = 0.0000029137773
        float urdf:link:inertial:inertia:iyy = 0.0000025902032
        float urdf:link:inertial:inertia:izz = 0.000001356517
        float urdf:link:inertial:mass = 0.016334496
        float3 urdf:link:inertial:origin:rpy = (0.0038908985, 0, 0)
        point3f urdf:link:inertial:origin:xyz = (-6.764516e-12, 0.000003677195, 0.013075033)
        matrix4d xformOp:transform = ( (0, 0.08715698144986422, 0.996194589718569, 0), (1, 0, 0, 0), (0, 0.996194589718569, -0.08715698144986428, 0), (-0.0132, 0.12556497178017767, -0.08238436490043657, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "Geom_38" (
            prepend apiSchemas = ["MujocoGeomAPI", "MaterialBindingAPI", "UrdfLinkVisualAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./allegro_right/meshes/usd/link_15.0.usda@</link_15_0>
        )
        {
            rel material:binding = </allegro_right/th_distal/Geom_38/Materials/black>
            rel mujoco:geom:material = </mujoco/asset/materials/black>
            rel mujoco:geom:mesh = </mujoco/asset/meshes/link_15_0>
            point3f mujoco:geom:pos = (-6.764516e-12, 0.000003677195, 0.013075033)
            quatf mujoco:geom:quat = (0.9999981, 0.001945448, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [1]
            asset urdf:geometry:mesh:filename = @./allegro_right/meshes/obj/link_15.0.obj@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            float3 urdf:visual:origin:rpy = (0.0038908983, 0, 0)
            point3f urdf:visual:origin:xyz = (-6.764516e-12, 0.000003677195, 0.013075033)
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 0.999992430464424, 0.003890888568715021, 0), (0, -0.003890888568715021, 0.999992430464424, 0), (-6.7645161886916096e-12, 0.0000036771951649222126, 0.01307503323644211, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Scope "Materials"
            {
                def Material "black" (
                    prepend references = @./allegro_right/materials/usd/black.usda@</black>
                )
                {
                }
            }
        }

        def Cube "Geom_39" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (0, 0, 0.0157)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.0098, 0.01375, 0.0157)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0.0157)
            float3 urdf:geometry:box:size = (0.0196, 0.0275, 0.0314)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.0098, 0, 0, 0), (0, 0.01375, 0, 0), (0, 0, 0.0157, 0), (0, 0, 0.0157, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Xform "th_tip" (
            prepend apiSchemas = ["PhysicsMassAPI", "MujocoBodyAPI", "MujocoBodyInertialAPI", "UrdfLinkInertialAPI"]
        )
        {
            float3 mujoco:body:inertial:diaginertia = (4.5582308e-7, 4.558136e-7, 4.4955877e-7)
            float mujoco:body:inertial:mass = 0.0068445215
            point3f mujoco:body:inertial:pos = (2.0724932e-11, -1.156129e-7, 0.041002765)
            quatf mujoco:body:inertial:quat = (1, 0, 0, 0)
            point3f mujoco:body:pos = (0, 0, 0)
            quatf mujoco:body:quat = (1, 0, 0, 0)
            point3f physics:centerOfMass = (2.0724932e-11, -1.156129e-7, 0.041002765)
            float3 physics:diagonalInertia = (4.5582308e-7, 4.558136e-7, 4.4955877e-7)
            float physics:mass = 0.0068445215
            quatf physics:principalAxes = (1, 0, 0, 0)
            float urdf:link:inertial:inertia:ixx = 4.5582308e-7
            float urdf:link:inertial:inertia:iyy = 4.558136e-7
            float urdf:link:inertial:inertia:izz = 4.4955877e-7
            float urdf:link:inertial:mass = 0.0068445215
            float3 urdf:link:inertial:origin:rpy = (0, 0, 0)
            point3f urdf:link:inertial:origin:xyz = (2.0724932e-11, -1.156129e-7, 0.041002765)
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Mesh "Geom_40" (
                prepend apiSchemas = ["MujocoGeomAPI", "MaterialBindingAPI", "UrdfLinkVisualAPI", "UrdfGeometryMeshAPI"]
                prepend references = @./allegro_right/meshes/usd/link_15.0_tip.usda@</link_15_0_tip>
            )
            {
                rel material:binding = </allegro_right/th_distal/th_tip/Geom_40/Materials/white>
                rel mujoco:geom:material = </mujoco/asset/materials/white>
                rel mujoco:geom:mesh = </mujoco/asset/meshes/link_15_0_tip>
                point3f mujoco:geom:pos = (2.0724932e-11, -1.156129e-7, 0.041002765)
                quatf mujoco:geom:quat = (1, 0, 0, 0)
                vector3f mujoco:geom:size = (1, 1, 1)
                uniform token mujoco:geom:type = "mesh"
                color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
                float[] primvars:displayOpacity = [1]
                asset urdf:geometry:mesh:filename = @./allegro_right/meshes/obj/link_15.0_tip.obj@
                float3 urdf:geometry:mesh:scale = (1, 1, 1)
                float3 urdf:visual:origin:rpy = (0, 0, 0)
                point3f urdf:visual:origin:xyz = (2.0724932e-11, -1.156129e-7, 0.041002765)
                matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (2.0724931602948438e-11, -1.1561290064181067e-7, 0.041002764748758094, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]

                def Scope "Materials"
                {
                    def Material "white" (
                        prepend references = @./allegro_right/materials/usd/white.usda@</white>
                    )
                    {
                    }
                }
            }

            def Cylinder "Geom_41" (
                prepend apiSchemas = ["PhysicsCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryCylinderAPI"]
            )
            {
                float3[] extent = [(-0.012, -0.012, -0.008), (0.012, 0.012, 0.008)]
                double height = 0.016
                point3f mujoco:geom:pos = (0, 0, 0.035)
                quatf mujoco:geom:quat = (1, 0, 0, 0)
                vector3f mujoco:geom:size = (0.012, 0.008, 0)
                uniform token mujoco:geom:type = "capsule"
                bool physics:collisionEnabled = 1
                color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
                float[] primvars:displayOpacity = [0]
                double radius = 0.012
                float3 urdf:collision:origin:rpy = (0, 0, 0)
                point3f urdf:collision:origin:xyz = (0, 0, 0.035)
                float urdf:geometry:cylinder:length = 0.016
                float urdf:geometry:cylinder:radius = 0.012
                token visibility = "invisible"
                matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0.035, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }
        }
    }
}

def Urdf "urdf"
{
    string urdf:name = "allegro_right"
}

