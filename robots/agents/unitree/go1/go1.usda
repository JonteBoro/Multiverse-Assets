#usda 1.0
(
    defaultPrim = "go1"
    metersPerUnit = 1
    upAxis = "Z"
)

def Mujoco "mujoco" (
    prepend apiSchemas = ["MujocoOptionAPI"]
)
{
    string mujoco:model = "go1"
    float mujoco:option:timestep = 0.002

    def MujocoAsset "asset"
    {
        def MujocoMesh "meshes"
        {
            def MujocoMesh "trunk"
            {
                asset mujoco:mesh:file = @go1/meshes/stl/trunk.stl@
            }

            def MujocoMesh "hip"
            {
                asset mujoco:mesh:file = @go1/meshes/stl/hip.stl@
            }

            def MujocoMesh "thigh_mirror"
            {
                asset mujoco:mesh:file = @go1/meshes/stl/thigh_mirror.stl@
            }

            def MujocoMesh "calf"
            {
                asset mujoco:mesh:file = @go1/meshes/stl/calf.stl@
            }

            def MujocoMesh "thigh"
            {
                asset mujoco:mesh:file = @go1/meshes/stl/thigh.stl@
            }
        }

        def MujocoMaterial "materials"
        {
            def MujocoMaterial "dark"
            {
                float mujoco:material:emission = 0
                color4f mujoco:material:rgba = (0.1, 0.1, 0.1, 1)
                float mujoco:material:specular = 0.5
            }
        }

        def MujocoTexture "textures"
        {
        }
    }

    def MujocoEquality "equality"
    {
    }
}

def Xform "go1" (
    prepend apiSchemas = ["MujocoBodyAPI"]
)
{
    point3f mujoco:body:pos = (0, 0, 0)
    quatf mujoco:body:quat = (1, 0, 0, 0)

    def Xform "trunk" (
        prepend apiSchemas = ["MujocoBodyAPI"]
    )
    {
        point3f mujoco:body:pos = (0, 0, 0)
        quatf mujoco:body:quat = (1, 0, 0, 0)

        def Mesh "Geom_0" (
            prepend apiSchemas = ["MujocoGeomAPI", "MaterialBindingAPI", "UrdfLinkVisualAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./go1/meshes/usd/trunk.usda@</trunk>
        )
        {
            rel material:binding = </go1/trunk/Geom_0/Materials/dark>
            rel mujoco:geom:material = </mujoco/asset/materials/dark>
            rel mujoco:geom:mesh = </mujoco/asset/meshes/trunk>
            point3f mujoco:geom:pos = (0.064566135, -1.789206e-7, 0.0008886185)
            quatf mujoco:geom:quat = (-0.000001276317, 0.7020553, 0.0000012946188, 0.71212244)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [1]
            asset urdf:geometry:mesh:filename = @./go1/meshes/obj/trunk.obj@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            float3 urdf:visual:origin:rpy = (0.0000036359445, -1.5565591, -3.1415927)
            point3f urdf:visual:origin:xyz = (0.064566135, -1.789206e-7, 0.0008886185)
            matrix4d xformOp:transform = ( (-0.01423675682515313, 1.8800319780782823e-17, 0.9998986522418669, 0), (0.000003635575906362386, -0.9999999999933904, 5.176405628812369e-8, 0), (0.9998986522352575, 0.0000036359444011764105, 0.01423675682505865, 0), (0.06456613186561057, -1.7892059846240292e-7, 0.0008886185220096125, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Scope "Materials"
            {
                def Material "dark" (
                    prepend references = @./go1/materials/usd/dark.usda@</dark>
                )
                {
                }
            }
        }

        def Cube "Geom_1" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.125, 0.04, 0.057)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            float3 urdf:geometry:box:size = (0.25, 0.08, 0.114)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.125, 0, 0, 0), (0, 0.04, 0, 0), (0, 0, 0.057, 0), (0, 0, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cylinder "Geom_2" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryCylinderAPI"]
        )
        {
            float3[] extent = [(-0.058, -0.058, -0.125), (0.058, 0.058, 0.125)]
            double height = 0.25
            point3f mujoco:geom:pos = (0, -0.04, 0)
            quatf mujoco:geom:quat = (0.70710677, 0, 0.70710677, 0)
            vector3f mujoco:geom:size = (0.058, 0.125, 0)
            uniform token mujoco:geom:type = "cylinder"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [0]
            double radius = 0.058
            float3 urdf:collision:origin:rpy = (-0, 1.5707964, 0)
            point3f urdf:collision:origin:xyz = (0, -0.04, 0)
            float urdf:geometry:cylinder:length = 0.25
            float urdf:geometry:cylinder:radius = 0.058
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (2.220446049250313e-16, 0, -0.9999999999999998, 0), (0, 1, 0, 0), (0.9999999999999998, 0, 2.220446049250313e-16, 0), (0, -0.04, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cylinder "Geom_3" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryCylinderAPI"]
        )
        {
            float3[] extent = [(-0.058, -0.058, -0.125), (0.058, 0.058, 0.125)]
            double height = 0.25
            point3f mujoco:geom:pos = (0, 0.04, 0)
            quatf mujoco:geom:quat = (0.70710677, 0, 0.70710677, 0)
            vector3f mujoco:geom:size = (0.058, 0.125, 0)
            uniform token mujoco:geom:type = "cylinder"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [0]
            double radius = 0.058
            float3 urdf:collision:origin:rpy = (-0, 1.5707964, 0)
            point3f urdf:collision:origin:xyz = (0, 0.04, 0)
            float urdf:geometry:cylinder:length = 0.25
            float urdf:geometry:cylinder:radius = 0.058
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (2.220446049250313e-16, 0, -0.9999999999999998, 0), (0, 1, 0, 0), (0.9999999999999998, 0, 2.220446049250313e-16, 0), (0, 0.04, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cube "Geom_4" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryBoxAPI"]
        )
        {
            float3[] extent = [(-1, -1, -1), (1, 1, 1)]
            point3f mujoco:geom:pos = (0.25, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.005, 0.06, 0.05)
            uniform token mujoco:geom:type = "box"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0.25, 0, 0)
            float3 urdf:geometry:box:size = (0.01, 0.12, 0.1)
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.005, 0, 0, 0), (0, 0.06, 0, 0), (0, 0, 0.05, 0), (0.25, 0, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cylinder "Geom_5" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryCylinderAPI"]
        )
        {
            float3[] extent = [(-0.009, -0.009, -0.035), (0.009, 0.009, 0.035)]
            double height = 0.07
            point3f mujoco:geom:pos = (0.25, 0.06, -0.01)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.009, 0.035, 0)
            uniform token mujoco:geom:type = "capsule"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [0]
            double radius = 0.009
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0.25, 0.06, -0.01)
            float urdf:geometry:cylinder:length = 0.07
            float urdf:geometry:cylinder:radius = 0.009
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0.25, 0.06, -0.01, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cylinder "Geom_6" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryCylinderAPI"]
        )
        {
            float3[] extent = [(-0.009, -0.009, -0.035), (0.009, 0.009, 0.035)]
            double height = 0.07
            point3f mujoco:geom:pos = (0.25, -0.06, -0.01)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.009, 0.035, 0)
            uniform token mujoco:geom:type = "capsule"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [0]
            double radius = 0.009
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0.25, -0.06, -0.01)
            float urdf:geometry:cylinder:length = 0.07
            float urdf:geometry:cylinder:radius = 0.009
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0.25, -0.06, -0.01, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cylinder "Geom_7" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryCylinderAPI"]
        )
        {
            float3[] extent = [(-0.01, -0.01, -0.06), (0.01, 0.01, 0.06)]
            double height = 0.12
            point3f mujoco:geom:pos = (0.25, 0, -0.05)
            quatf mujoco:geom:quat = (0.70710677, 0.70710677, 0, 0)
            vector3f mujoco:geom:size = (0.01, 0.06, 0)
            uniform token mujoco:geom:type = "capsule"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [0]
            double radius = 0.01
            float3 urdf:collision:origin:rpy = (1.5707964, 0, 0)
            point3f urdf:collision:origin:xyz = (0.25, 0, -0.05)
            float urdf:geometry:cylinder:length = 0.12
            float urdf:geometry:cylinder:radius = 0.01
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 2.220446049250313e-16, 0.9999999999999998, 0), (0, -0.9999999999999998, 2.220446049250313e-16, 0), (0.25, 0, -0.05, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cylinder "Geom_8" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryCylinderAPI"]
        )
        {
            float3[] extent = [(-0.021, -0.021, -0.052), (0.021, 0.021, 0.052)]
            double height = 0.104
            point3f mujoco:geom:pos = (0.255, 0, 0.0355)
            quatf mujoco:geom:quat = (0.70710677, 0.70710677, 0, 0)
            vector3f mujoco:geom:size = (0.021, 0.052, 0)
            uniform token mujoco:geom:type = "capsule"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [0]
            double radius = 0.021
            float3 urdf:collision:origin:rpy = (1.5707964, 0, 0)
            point3f urdf:collision:origin:xyz = (0.255, 0, 0.0355)
            float urdf:geometry:cylinder:length = 0.104
            float urdf:geometry:cylinder:radius = 0.021
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 2.220446049250313e-16, 0.9999999999999998, 0), (0, -0.9999999999999998, 2.220446049250313e-16, 0), (0.255, 0, 0.0355, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def PhysicsRevoluteJoint "FR_hip_joint" (
            prepend apiSchemas = ["MujocoJointAPI", "UrdfJointAPI"]
        )
        {
            vector3f mujoco:joint:axis = (1, 0, 0)
            point3f mujoco:joint:pos = (0, 0, 0)
            float2 mujoco:joint:range = (-0.863, 0.863)
            uniform token mujoco:joint:type = "hinge"
            uniform token physics:axis = "Z"
            rel physics:body0 = </go1/trunk>
            rel physics:body1 = </go1/FR_hip>
            bool physics:collisionEnabled = 0
            point3f physics:localPos0 = (0.1881, -0.04675, 0)
            point3f physics:localPos1 = (0, 0, 0)
            quatf physics:localRot0 = (0.7071068, 0, 0.7071068, 0)
            quatf physics:localRot1 = (0.7071068, 0, 0.7071068, 0)
            float physics:lowerLimit = -49.44626
            float physics:upperLimit = 49.44626
            vector3f urdf:joint:axis = (1, 0, 0)
            prepend rel urdf:joint:child = </go1/FR_hip>
            float urdf:joint:limit:effort = 1000
            float urdf:joint:limit:lower = -0.86300004
            float urdf:joint:limit:upper = 0.86300004
            float urdf:joint:limit:velocity = 1000
            float3 urdf:joint:origin:rpy = (0, 0, 0)
            point3f urdf:joint:origin:xyz = (0.1881, -0.04675, 0)
            prepend rel urdf:joint:parent = </go1/trunk>
            uniform token urdf:joint:type = "revolute"
        }

        def PhysicsRevoluteJoint "FL_hip_joint" (
            prepend apiSchemas = ["MujocoJointAPI", "UrdfJointAPI"]
        )
        {
            vector3f mujoco:joint:axis = (1, 0, 0)
            point3f mujoco:joint:pos = (0, 0, 0)
            float2 mujoco:joint:range = (-0.863, 0.863)
            uniform token mujoco:joint:type = "hinge"
            uniform token physics:axis = "Z"
            rel physics:body0 = </go1/trunk>
            rel physics:body1 = </go1/FL_hip>
            bool physics:collisionEnabled = 0
            point3f physics:localPos0 = (0.1881, 0.04675, 0)
            point3f physics:localPos1 = (0, 0, 0)
            quatf physics:localRot0 = (0.7071068, 0, 0.7071068, 0)
            quatf physics:localRot1 = (0.7071068, 0, 0.7071068, 0)
            float physics:lowerLimit = -49.44626
            float physics:upperLimit = 49.44626
            vector3f urdf:joint:axis = (1, 0, 0)
            prepend rel urdf:joint:child = </go1/FL_hip>
            float urdf:joint:limit:effort = 1000
            float urdf:joint:limit:lower = -0.86300004
            float urdf:joint:limit:upper = 0.86300004
            float urdf:joint:limit:velocity = 1000
            float3 urdf:joint:origin:rpy = (0, 0, 0)
            point3f urdf:joint:origin:xyz = (0.1881, 0.04675, 0)
            prepend rel urdf:joint:parent = </go1/trunk>
            uniform token urdf:joint:type = "revolute"
        }

        def PhysicsRevoluteJoint "RR_hip_joint" (
            prepend apiSchemas = ["MujocoJointAPI", "UrdfJointAPI"]
        )
        {
            vector3f mujoco:joint:axis = (1, 0, 0)
            point3f mujoco:joint:pos = (0, 0, 0)
            float2 mujoco:joint:range = (-0.863, 0.863)
            uniform token mujoco:joint:type = "hinge"
            uniform token physics:axis = "Z"
            rel physics:body0 = </go1/trunk>
            rel physics:body1 = </go1/RR_hip>
            bool physics:collisionEnabled = 0
            point3f physics:localPos0 = (-0.1881, -0.04675, 0)
            point3f physics:localPos1 = (0, 0, 0)
            quatf physics:localRot0 = (0.7071068, 0, 0.7071068, 0)
            quatf physics:localRot1 = (0.7071068, 0, 0.7071068, 0)
            float physics:lowerLimit = -49.44626
            float physics:upperLimit = 49.44626
            vector3f urdf:joint:axis = (1, 0, 0)
            prepend rel urdf:joint:child = </go1/RR_hip>
            float urdf:joint:limit:effort = 1000
            float urdf:joint:limit:lower = -0.86300004
            float urdf:joint:limit:upper = 0.86300004
            float urdf:joint:limit:velocity = 1000
            float3 urdf:joint:origin:rpy = (0, 0, 0)
            point3f urdf:joint:origin:xyz = (-0.1881, -0.04675, 0)
            prepend rel urdf:joint:parent = </go1/trunk>
            uniform token urdf:joint:type = "revolute"
        }

        def PhysicsRevoluteJoint "RL_hip_joint" (
            prepend apiSchemas = ["MujocoJointAPI", "UrdfJointAPI"]
        )
        {
            vector3f mujoco:joint:axis = (1, 0, 0)
            point3f mujoco:joint:pos = (0, 0, 0)
            float2 mujoco:joint:range = (-0.863, 0.863)
            uniform token mujoco:joint:type = "hinge"
            uniform token physics:axis = "Z"
            rel physics:body0 = </go1/trunk>
            rel physics:body1 = </go1/RL_hip>
            bool physics:collisionEnabled = 0
            point3f physics:localPos0 = (-0.1881, 0.04675, 0)
            point3f physics:localPos1 = (0, 0, 0)
            quatf physics:localRot0 = (0.7071068, 0, 0.7071068, 0)
            quatf physics:localRot1 = (0.7071068, 0, 0.7071068, 0)
            float physics:lowerLimit = -49.44626
            float physics:upperLimit = 49.44626
            vector3f urdf:joint:axis = (1, 0, 0)
            prepend rel urdf:joint:child = </go1/RL_hip>
            float urdf:joint:limit:effort = 1000
            float urdf:joint:limit:lower = -0.86300004
            float urdf:joint:limit:upper = 0.86300004
            float urdf:joint:limit:velocity = 1000
            float3 urdf:joint:origin:rpy = (0, 0, 0)
            point3f urdf:joint:origin:xyz = (-0.1881, 0.04675, 0)
            prepend rel urdf:joint:parent = </go1/trunk>
            uniform token urdf:joint:type = "revolute"
        }
    }

    def Xform "FR_hip" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMassAPI", "MujocoBodyAPI", "MujocoBodyInertialAPI", "UrdfLinkInertialAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (0.000734064, 0.000468438, 0.000398719)
        float mujoco:body:inertial:mass = 0.68
        point3f mujoco:body:inertial:pos = (-0.0049166, 0.00762615, -0.00008865)
        quatf mujoco:body:inertial:quat = (0.50734097, 0.514169, 0.49502698, 0.48289096)
        point3f mujoco:body:pos = (0.1881, -0.04675, 0)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        point3f physics:centerOfMass = (-0.0049166, 0.00762615, -0.00008865)
        float3 physics:diagonalInertia = (0.000734064, 0.000468438, 0.000398719)
        float physics:mass = 0.68
        quatf physics:principalAxes = (0.50734097, 0.514169, 0.49502698, 0.48289096)
        bool physics:rigidBodyEnabled = 1
        float urdf:link:inertial:inertia:ixx = 0.000734064
        float urdf:link:inertial:inertia:iyy = 0.000468438
        float urdf:link:inertial:inertia:izz = 0.000398719
        float urdf:link:inertial:mass = 0.68
        float3 urdf:link:inertial:origin:rpy = (1.5896406, 0.005719855, 1.5272527)
        point3f urdf:link:inertial:origin:xyz = (-0.0049166, 0.00762615, -0.00008865)
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0.1881, -0.04675, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "Geom_9" (
            prepend apiSchemas = ["MujocoGeomAPI", "MaterialBindingAPI", "UrdfLinkVisualAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./go1/meshes/usd/hip.usda@</hip>
        )
        {
            rel material:binding = </go1/FR_hip/Geom_9/Materials/dark>
            rel mujoco:geom:material = </mujoco/asset/materials/dark>
            rel mujoco:geom:mesh = </mujoco/asset/meshes/hip>
            point3f mujoco:geom:pos = (-0.012875064, -0.0017777804, -1.960474e-7)
            quatf mujoco:geom:quat = (0.70406854, 0.00003072087, 0.000035938418, 0.710132)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [1]
            asset urdf:geometry:mesh:filename = @./go1/meshes/obj/hip.obj@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            float3 urdf:visual:origin:rpy = (0.000094301235, 0.0000069744756, 1.5793713)
            point3f urdf:visual:origin:xyz = (-0.012875064, -0.0017777804, -1.960474e-7)
            matrix4d xformOp:transform = ( (-0.008574907014899491, 0.9999632347846807, -0.0000069744756912447204, 0), (-0.9999632303684431, -0.008574906319303244, 0.0000943012353187812, 0), (0.00009423796283788115, 0.00000778284356659194, 0.9999999955293168, 0), (-0.01287506452532647, -0.001777780333168141, -1.960473976279123e-7, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Scope "Materials"
            {
                def Material "dark" (
                    prepend references = @./go1/materials/usd/dark.usda@</dark>
                )
                {
                }
            }
        }

        def Cylinder "Geom_10" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryCylinderAPI"]
        )
        {
            float3[] extent = [(-0.046, -0.046, -0.02), (0.046, 0.046, 0.02)]
            double height = 0.04
            point3f mujoco:geom:pos = (0, -0.045, 0)
            quatf mujoco:geom:quat = (0.70710677, 0.70710677, 0, 0)
            vector3f mujoco:geom:size = (0.046, 0.02, 0)
            uniform token mujoco:geom:type = "cylinder"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [0]
            double radius = 0.046
            float3 urdf:collision:origin:rpy = (1.5707964, 0, 0)
            point3f urdf:collision:origin:xyz = (0, -0.045, 0)
            float urdf:geometry:cylinder:length = 0.04
            float urdf:geometry:cylinder:radius = 0.046
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 2.220446049250313e-16, 0.9999999999999998, 0), (0, -0.9999999999999998, 2.220446049250313e-16, 0), (0, -0.045, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cylinder "Geom_11" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryCylinderAPI"]
        )
        {
            float3[] extent = [(-0.031, -0.031, -0.02), (0.031, 0.031, 0.02)]
            double height = 0.04
            point3f mujoco:geom:pos = (0, -0.065, 0)
            quatf mujoco:geom:quat = (0.70710677, 0.70710677, 0, 0)
            vector3f mujoco:geom:size = (0.031, 0.02, 0)
            uniform token mujoco:geom:type = "cylinder"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [0]
            double radius = 0.031
            float3 urdf:collision:origin:rpy = (1.5707964, 0, 0)
            point3f urdf:collision:origin:xyz = (0, -0.065, 0)
            float urdf:geometry:cylinder:length = 0.04
            float urdf:geometry:cylinder:radius = 0.031
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 2.220446049250313e-16, 0.9999999999999998, 0), (0, -0.9999999999999998, 2.220446049250313e-16, 0), (0, -0.065, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def PhysicsRevoluteJoint "FR_thigh_joint" (
            prepend apiSchemas = ["MujocoJointAPI", "UrdfJointAPI"]
        )
        {
            vector3f mujoco:joint:axis = (0, 1, 0)
            point3f mujoco:joint:pos = (0, 0, 0)
            float2 mujoco:joint:range = (-0.686, 4.501)
            uniform token mujoco:joint:type = "hinge"
            uniform token physics:axis = "Z"
            rel physics:body0 = </go1/FR_hip>
            rel physics:body1 = </go1/FR_thigh>
            bool physics:collisionEnabled = 0
            point3f physics:localPos0 = (0, -0.08, 0)
            point3f physics:localPos1 = (0, 0, 0)
            quatf physics:localRot0 = (0.7071068, -0.7071068, 0, 0)
            quatf physics:localRot1 = (0.7071068, -0.7071068, 0, 0)
            float physics:lowerLimit = -39.304905
            float physics:upperLimit = 257.8883
            vector3f urdf:joint:axis = (0, 1, 0)
            prepend rel urdf:joint:child = </go1/FR_thigh>
            float urdf:joint:limit:effort = 1000
            float urdf:joint:limit:lower = -0.686
            float urdf:joint:limit:upper = 4.501
            float urdf:joint:limit:velocity = 1000
            float3 urdf:joint:origin:rpy = (0, 0, 0)
            point3f urdf:joint:origin:xyz = (0, -0.08, 0)
            prepend rel urdf:joint:parent = </go1/FR_hip>
            uniform token urdf:joint:type = "revolute"
        }
    }

    def Xform "FR_thigh" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMassAPI", "MujocoBodyAPI", "MujocoBodyInertialAPI", "UrdfLinkInertialAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (0.00478717, 0.00460903, 0.000709268)
        float mujoco:body:inertial:mass = 1.009
        point3f mujoco:body:inertial:pos = (-0.00304722, 0.019315, -0.0305004)
        quatf mujoco:body:inertial:quat = (0.6524298, -0.027231293, 0.07751258, 0.7533828)
        point3f mujoco:body:pos = (0, -0.08, 0)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        point3f physics:centerOfMass = (-0.00304722, 0.019315, -0.0305004)
        float3 physics:diagonalInertia = (0.00478717, 0.00460903, 0.000709268)
        float physics:mass = 1.009
        quatf physics:principalAxes = (0.6524298, -0.027231293, 0.07751258, 0.7533828)
        bool physics:rigidBodyEnabled = 1
        float urdf:link:inertial:inertia:ixx = 0.00478717
        float urdf:link:inertial:inertia:iyy = 0.00460903
        float urdf:link:inertial:inertia:izz = 0.000709268
        float urdf:link:inertial:mass = 1.009
        float3 urdf:link:inertial:origin:rpy = (0.0821867, 0.14265758, 1.720048)
        point3f urdf:link:inertial:origin:xyz = (-0.00304722, 0.019315, -0.0305004)
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0.1881, -0.12675, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "Geom_12" (
            prepend apiSchemas = ["MujocoGeomAPI", "MaterialBindingAPI", "UrdfLinkVisualAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./go1/meshes/usd/thigh_mirror.usda@</thigh_mirror>
        )
        {
            rel material:binding = </go1/FR_thigh/Geom_12/Materials/dark>
            rel mujoco:geom:material = </mujoco/asset/materials/dark>
            rel mujoco:geom:mesh = </mujoco/asset/meshes/thigh_mirror>
            point3f mujoco:geom:pos = (-0.004290462, 0.022090629, -0.04642722)
            quatf mujoco:geom:quat = (0.5726117, -0.030974248, 0.094206885, 0.81380683)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [1]
            asset urdf:geometry:mesh:filename = @./go1/meshes/obj/thigh_mirror.obj@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            float3 urdf:visual:origin:rpy = (0.11965037, 0.15897076, 1.9248303)
            point3f urdf:visual:origin:xyz = (-0.004290462, 0.022090629, -0.04642722)
            matrix4d xformOp:transform = ( (-0.3423129532293714, 0.9261545818539455, -0.15830202955846728, 0), (-0.9378265313124944, -0.32648188730517114, 0.11785997805883405, 0), (0.05747381332190728, 0.18880484043741372, 0.980331317978591, 0), (-0.0042904622262588945, 0.02209062950620072, -0.0464272204638417, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Scope "Materials"
            {
                def Material "dark" (
                    prepend references = @./go1/materials/usd/dark.usda@</dark>
                )
                {
                }
            }
        }

        def Cylinder "Geom_13" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryCylinderAPI"]
        )
        {
            float3[] extent = [(-0.015, -0.015, -0.08), (0.015, 0.015, 0.08)]
            double height = 0.16
            point3f mujoco:geom:pos = (-0.02, 0, -0.08)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.015, 0.08, 0)
            uniform token mujoco:geom:type = "capsule"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [0]
            double radius = 0.015
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (-0.02, 0, -0.08)
            float urdf:geometry:cylinder:length = 0.16
            float urdf:geometry:cylinder:radius = 0.015
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (-0.02, 0, -0.08, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cylinder "Geom_14" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryCylinderAPI"]
        )
        {
            float3[] extent = [(-0.015, -0.015, -0.050990194), (0.015, 0.015, 0.050990194)]
            double height = 0.10198039027185571
            point3f mujoco:geom:pos = (-0.01, 0, -0.05)
            quatf mujoco:geom:quat = (0.99513334, 0, 0.09853762, 0)
            vector3f mujoco:geom:size = (0.015, 0.050990194, 0)
            uniform token mujoco:geom:type = "capsule"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [0]
            double radius = 0.015
            float3 urdf:collision:origin:rpy = (0, 0.19739556, 0)
            point3f urdf:collision:origin:xyz = (-0.01, 0, -0.05)
            float urdf:geometry:cylinder:length = 0.10198039
            float urdf:geometry:cylinder:radius = 0.015
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.9805806756909201, 0, -0.19611613513818404, 0), (0, 1, 0, 0), (0.19611613513818404, 0, 0.9805806756909201, 0), (-0.01, 0, -0.05, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cylinder "Geom_15" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryCylinderAPI"]
        )
        {
            float3[] extent = [(-0.015, -0.015, -0.02236068), (0.015, 0.015, 0.02236068)]
            double height = 0.0447213595499958
            point3f mujoco:geom:pos = (-0.01, 0, -0.18)
            quatf mujoco:geom:quat = (0.973249, 0, -0.22975291, 0)
            vector3f mujoco:geom:size = (0.015, 0.02236068, 0)
            uniform token mujoco:geom:type = "capsule"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [0]
            double radius = 0.015
            float3 urdf:collision:origin:rpy = (0, -0.4636476, 0)
            point3f urdf:collision:origin:xyz = (-0.01, 0, -0.18)
            float urdf:geometry:cylinder:length = 0.04472136
            float urdf:geometry:cylinder:radius = 0.015
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.8944271909999159, 0, 0.4472135954999579, 0), (0, 1, 0, 0), (-0.4472135954999579, 0, 0.8944271909999159, 0), (-0.01, 0, -0.18, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def PhysicsRevoluteJoint "FR_calf_joint" (
            prepend apiSchemas = ["MujocoJointAPI", "UrdfJointAPI"]
        )
        {
            vector3f mujoco:joint:axis = (0, 1, 0)
            point3f mujoco:joint:pos = (0, 0, 0)
            float2 mujoco:joint:range = (-2.818, -0.888)
            uniform token mujoco:joint:type = "hinge"
            uniform token physics:axis = "Z"
            rel physics:body0 = </go1/FR_thigh>
            rel physics:body1 = </go1/FR_calf>
            bool physics:collisionEnabled = 0
            point3f physics:localPos0 = (0, 0, -0.213)
            point3f physics:localPos1 = (0, 0, 0)
            quatf physics:localRot0 = (0.7071068, -0.7071068, 0, 0)
            quatf physics:localRot1 = (0.7071068, -0.7071068, 0, 0)
            float physics:lowerLimit = -161.4595
            float physics:upperLimit = -50.87865
            vector3f urdf:joint:axis = (0, 1, 0)
            prepend rel urdf:joint:child = </go1/FR_calf>
            float urdf:joint:limit:effort = 1000
            float urdf:joint:limit:lower = -2.8179998
            float urdf:joint:limit:upper = -0.88799995
            float urdf:joint:limit:velocity = 1000
            float3 urdf:joint:origin:rpy = (0, 0, 0)
            point3f urdf:joint:origin:xyz = (0, 0, -0.213)
            prepend rel urdf:joint:parent = </go1/FR_thigh>
            uniform token urdf:joint:type = "revolute"
        }
    }

    def Xform "FR_calf" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMassAPI", "MujocoBodyAPI", "MujocoBodyInertialAPI", "UrdfLinkInertialAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (0.00149767, 0.00148468, 0.0000358427)
        float mujoco:body:inertial:mass = 0.195862
        point3f mujoco:body:inertial:pos = (0.00429862, 0.000976676, -0.146197)
        quatf mujoco:body:inertial:quat = (0.6912463, 0.0035746715, 0.005111182, 0.7225923)
        point3f mujoco:body:pos = (0, 0, -0.213)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        point3f physics:centerOfMass = (0.00429862, 0.000976676, -0.146197)
        float3 physics:diagonalInertia = (0.00149767, 0.00148468, 0.0000358427)
        float physics:mass = 0.195862
        quatf physics:principalAxes = (0.6912463, 0.0035746715, 0.005111182, 0.7225923)
        bool physics:rigidBodyEnabled = 1
        float urdf:link:inertial:inertia:ixx = 0.00149767
        float urdf:link:inertial:inertia:iyy = 0.00148468
        float urdf:link:inertial:inertia:izz = 0.0000358427
        float urdf:link:inertial:mass = 0.195862
        float3 urdf:link:inertial:origin:rpy = (0.012328894, 0.0019001124, 1.6151425)
        point3f urdf:link:inertial:origin:xyz = (0.00429862, 0.000976676, -0.146197)
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0.1881, -0.12675, -0.213, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "Geom_16" (
            prepend apiSchemas = ["MujocoGeomAPI", "MaterialBindingAPI", "UrdfLinkVisualAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./go1/meshes/usd/calf.usda@</calf>
        )
        {
            rel material:binding = </go1/FR_calf/Geom_16/Materials/dark>
            rel mujoco:geom:material = </mujoco/asset/materials/dark>
            rel mujoco:geom:mesh = </mujoco/asset/meshes/calf>
            point3f mujoco:geom:pos = (0.006786841, -9.169547e-7, -0.12472492)
            quatf mujoco:geom:quat = (0.70708835, -0.0043905526, -0.004400269, 0.7070979)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [1]
            asset urdf:geometry:mesh:filename = @./go1/meshes/obj/calf.obj@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            float3 urdf:visual:origin:rpy = (-0.012432179, -0.00001365677, 1.5708098)
            point3f urdf:visual:origin:xyz = (0.006786841, -9.169547e-7, -0.12472492)
            matrix4d xformOp:transform = ( (-0.000013539683468843933, 0.9999999998150848, 0.000013656769751578361, 0), (-0.9999227213624695, -0.000013368858103657288, -0.012431859247387562, 0), (-0.012431859062513304, -0.00001382403781415801, 0.9999227213585787, 0), (0.006786841024431935, -9.169547043186021e-7, -0.12472491633621631, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Scope "Materials"
            {
                def Material "dark" (
                    prepend references = @./go1/materials/usd/dark.usda@</dark>
                )
                {
                }
            }
        }

        def Cylinder "Geom_17" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryCylinderAPI"]
        )
        {
            float3[] extent = [(-0.01, -0.01, -0.06576473), (0.01, 0.01, 0.06576473)]
            double height = 0.13152946437965907
            point3f mujoco:geom:pos = (0.01, 0, -0.065)
            quatf mujoco:geom:quat = (0.9970887, 0, -0.07625058, 0)
            vector3f mujoco:geom:size = (0.01, 0.06576473, 0)
            uniform token mujoco:geom:type = "capsule"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [0]
            double radius = 0.01
            float3 urdf:collision:origin:rpy = (0, -0.15264933, 0)
            point3f urdf:collision:origin:xyz = (0.01, 0, -0.065)
            float urdf:geometry:cylinder:length = 0.13152947
            float urdf:geometry:cylinder:radius = 0.01
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.9883716976506172, 0, 0.1520571842539411, 0), (0, 1, 0, 0), (-0.1520571842539411, 0, 0.9883716976506172, 0), (0.01, 0, -0.065, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cylinder "Geom_18" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryCylinderAPI"]
        )
        {
            float3[] extent = [(-0.01, -0.01, -0.03640055), (0.01, 0.01, 0.03640055)]
            double height = 0.07280109889280519
            point3f mujoco:geom:pos = (0.01, 0, -0.165)
            quatf mujoco:geom:quat = (0.9903343, 0, 0.13870122, 0)
            vector3f mujoco:geom:size = (0.01, 0.03640055, 0)
            uniform token mujoco:geom:type = "capsule"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [0]
            double radius = 0.01
            float3 urdf:collision:origin:rpy = (0, 0.27829966, 0)
            point3f urdf:collision:origin:xyz = (0.01, 0, -0.165)
            float urdf:geometry:cylinder:length = 0.0728011
            float urdf:geometry:cylinder:radius = 0.01
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.9615239476408232, 0, -0.274721127897378, 0), (0, 1, 0, 0), (0.274721127897378, 0, 0.9615239476408232, 0), (0.01, 0, -0.165, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Sphere "FR" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometrySphereAPI"]
        )
        {
            float3[] extent = [(-0.023, -0.023, -0.023), (0.023, 0.023, 0.023)]
            point3f mujoco:geom:pos = (0, 0, -0.213)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.023, 0, 0)
            uniform token mujoco:geom:type = "sphere"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [0]
            double radius = 0.023
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, -0.213)
            float urdf:geometry:sphere:radius = 0.023
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, -0.213, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def Xform "FL_hip" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMassAPI", "MujocoBodyAPI", "MujocoBodyInertialAPI", "UrdfLinkInertialAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (0.000734064, 0.000468438, 0.000398719)
        float mujoco:body:inertial:mass = 0.68
        point3f mujoco:body:inertial:pos = (-0.0049166, -0.00762615, -0.00008865)
        quatf mujoco:body:inertial:quat = (0.48289096, 0.49502698, 0.514169, 0.50734097)
        point3f mujoco:body:pos = (0.1881, 0.04675, 0)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        point3f physics:centerOfMass = (-0.0049166, -0.00762615, -0.00008865)
        float3 physics:diagonalInertia = (0.000734064, 0.000468438, 0.000398719)
        float physics:mass = 0.68
        quatf physics:principalAxes = (0.48289096, 0.49502698, 0.514169, 0.50734097)
        bool physics:rigidBodyEnabled = 1
        float urdf:link:inertial:inertia:ixx = 0.000734064
        float urdf:link:inertial:inertia:iyy = 0.000468438
        float urdf:link:inertial:inertia:izz = 0.000398719
        float urdf:link:inertial:mass = 0.68
        float3 urdf:link:inertial:origin:rpy = (1.5896406, -0.005719855, 1.61434)
        point3f urdf:link:inertial:origin:xyz = (-0.0049166, -0.00762615, -0.00008865)
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0.1881, 0.04675, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "Geom_20" (
            prepend apiSchemas = ["MujocoGeomAPI", "MaterialBindingAPI", "UrdfLinkVisualAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./go1/meshes/usd/hip.usda@</hip>
        )
        {
            rel material:binding = </go1/FL_hip/Geom_20/Materials/dark>
            rel mujoco:geom:material = </mujoco/asset/materials/dark>
            rel mujoco:geom:mesh = </mujoco/asset/meshes/hip>
            point3f mujoco:geom:pos = (-0.012875064, -0.0017777804, -1.960474e-7)
            quatf mujoco:geom:quat = (0.70406854, 0.00003072087, 0.000035938418, 0.710132)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [1]
            asset urdf:geometry:mesh:filename = @./go1/meshes/obj/hip.obj@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            float3 urdf:visual:origin:rpy = (0.000094301235, 0.0000069744756, 1.5793713)
            point3f urdf:visual:origin:xyz = (-0.012875064, -0.0017777804, -1.960474e-7)
            matrix4d xformOp:transform = ( (-0.008574907014899491, 0.9999632347846807, -0.0000069744756912447204, 0), (-0.9999632303684431, -0.008574906319303244, 0.0000943012353187812, 0), (0.00009423796283788115, 0.00000778284356659194, 0.9999999955293168, 0), (-0.01287506452532647, -0.001777780333168141, -1.960473976279123e-7, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Scope "Materials"
            {
                def Material "dark" (
                    prepend references = @./go1/materials/usd/dark.usda@</dark>
                )
                {
                }
            }
        }

        def Cylinder "Geom_21" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryCylinderAPI"]
        )
        {
            float3[] extent = [(-0.046, -0.046, -0.02), (0.046, 0.046, 0.02)]
            double height = 0.04
            point3f mujoco:geom:pos = (0, 0.045, 0)
            quatf mujoco:geom:quat = (0.70710677, 0.70710677, 0, 0)
            vector3f mujoco:geom:size = (0.046, 0.02, 0)
            uniform token mujoco:geom:type = "cylinder"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [0]
            double radius = 0.046
            float3 urdf:collision:origin:rpy = (1.5707964, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0.045, 0)
            float urdf:geometry:cylinder:length = 0.04
            float urdf:geometry:cylinder:radius = 0.046
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 2.220446049250313e-16, 0.9999999999999998, 0), (0, -0.9999999999999998, 2.220446049250313e-16, 0), (0, 0.045, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cylinder "Geom_22" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryCylinderAPI"]
        )
        {
            float3[] extent = [(-0.031, -0.031, -0.02), (0.031, 0.031, 0.02)]
            double height = 0.04
            point3f mujoco:geom:pos = (0, 0.065, 0)
            quatf mujoco:geom:quat = (0.70710677, 0.70710677, 0, 0)
            vector3f mujoco:geom:size = (0.031, 0.02, 0)
            uniform token mujoco:geom:type = "cylinder"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [0]
            double radius = 0.031
            float3 urdf:collision:origin:rpy = (1.5707964, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0.065, 0)
            float urdf:geometry:cylinder:length = 0.04
            float urdf:geometry:cylinder:radius = 0.031
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 2.220446049250313e-16, 0.9999999999999998, 0), (0, -0.9999999999999998, 2.220446049250313e-16, 0), (0, 0.065, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def PhysicsRevoluteJoint "FL_thigh_joint" (
            prepend apiSchemas = ["MujocoJointAPI", "UrdfJointAPI"]
        )
        {
            vector3f mujoco:joint:axis = (0, 1, 0)
            point3f mujoco:joint:pos = (0, 0, 0)
            float2 mujoco:joint:range = (-0.686, 4.501)
            uniform token mujoco:joint:type = "hinge"
            uniform token physics:axis = "Z"
            rel physics:body0 = </go1/FL_hip>
            rel physics:body1 = </go1/FL_thigh>
            bool physics:collisionEnabled = 0
            point3f physics:localPos0 = (0, 0.08, 0)
            point3f physics:localPos1 = (0, 0, 0)
            quatf physics:localRot0 = (0.7071068, -0.7071068, 0, 0)
            quatf physics:localRot1 = (0.7071068, -0.7071068, 0, 0)
            float physics:lowerLimit = -39.304905
            float physics:upperLimit = 257.8883
            vector3f urdf:joint:axis = (0, 1, 0)
            prepend rel urdf:joint:child = </go1/FL_thigh>
            float urdf:joint:limit:effort = 1000
            float urdf:joint:limit:lower = -0.686
            float urdf:joint:limit:upper = 4.501
            float urdf:joint:limit:velocity = 1000
            float3 urdf:joint:origin:rpy = (0, 0, 0)
            point3f urdf:joint:origin:xyz = (0, 0.08, 0)
            prepend rel urdf:joint:parent = </go1/FL_hip>
            uniform token urdf:joint:type = "revolute"
        }
    }

    def Xform "FL_thigh" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMassAPI", "MujocoBodyAPI", "MujocoBodyInertialAPI", "UrdfLinkInertialAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (0.00478717, 0.00460903, 0.000709268)
        float mujoco:body:inertial:mass = 1.009
        point3f mujoco:body:inertial:pos = (-0.00304722, -0.019315, -0.0305004)
        quatf mujoco:body:inertial:quat = (0.7533828, 0.07751258, -0.027231293, 0.6524298)
        point3f mujoco:body:pos = (0, 0.08, 0)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        point3f physics:centerOfMass = (-0.00304722, -0.019315, -0.0305004)
        float3 physics:diagonalInertia = (0.00478717, 0.00460903, 0.000709268)
        float physics:mass = 1.009
        quatf physics:principalAxes = (0.7533828, 0.07751258, -0.027231293, 0.6524298)
        bool physics:rigidBodyEnabled = 1
        float urdf:link:inertial:inertia:ixx = 0.00478717
        float urdf:link:inertial:inertia:iyy = 0.00460903
        float urdf:link:inertial:inertia:izz = 0.000709268
        float urdf:link:inertial:mass = 1.009
        float3 urdf:link:inertial:origin:rpy = (0.0821867, -0.14265758, 1.4215447)
        point3f urdf:link:inertial:origin:xyz = (-0.00304722, -0.019315, -0.0305004)
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0.1881, 0.12675, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "Geom_23" (
            prepend apiSchemas = ["MujocoGeomAPI", "MaterialBindingAPI", "UrdfLinkVisualAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./go1/meshes/usd/thigh.usda@</thigh>
        )
        {
            rel material:binding = </go1/FL_thigh/Geom_23/Materials/dark>
            rel mujoco:geom:material = </mujoco/asset/materials/dark>
            rel mujoco:geom:mesh = </mujoco/asset/meshes/thigh>
            point3f mujoco:geom:pos = (-0.0035736847, -0.023611648, -0.041030377)
            quatf mujoco:geom:quat = (0.8039951, 0.08563201, -0.031584993, 0.58758956)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [1]
            asset urdf:geometry:mesh:filename = @./go1/meshes/obj/thigh.obj@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            float3 urdf:visual:origin:rpy = (0.10192706, -0.152006, 1.2544792)
            point3f urdf:visual:origin:xyz = (-0.0035736847, -0.023611648, -0.041030377)
            matrix4d xformOp:transform = ( (0.3074817575275449, 0.9394288450553147, 0.15142131245570886, 0), (-0.9502475911339056, 0.29481129751901936, 0.10057740501405824, 0), (0.04984460183391698, -0.17481345466865414, 0.983339092955644, 0), (-0.003573684748494212, -0.023611648403056146, -0.04103037735385813, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Scope "Materials"
            {
                def Material "dark" (
                    prepend references = @./go1/materials/usd/dark.usda@</dark>
                )
                {
                }
            }
        }

        def Cylinder "Geom_24" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryCylinderAPI"]
        )
        {
            float3[] extent = [(-0.015, -0.015, -0.08), (0.015, 0.015, 0.08)]
            double height = 0.16
            point3f mujoco:geom:pos = (-0.02, 0, -0.08)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.015, 0.08, 0)
            uniform token mujoco:geom:type = "capsule"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [0]
            double radius = 0.015
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (-0.02, 0, -0.08)
            float urdf:geometry:cylinder:length = 0.16
            float urdf:geometry:cylinder:radius = 0.015
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (-0.02, 0, -0.08, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cylinder "Geom_25" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryCylinderAPI"]
        )
        {
            float3[] extent = [(-0.015, -0.015, -0.050990194), (0.015, 0.015, 0.050990194)]
            double height = 0.10198039027185571
            point3f mujoco:geom:pos = (-0.01, 0, -0.05)
            quatf mujoco:geom:quat = (0.99513334, 0, 0.09853762, 0)
            vector3f mujoco:geom:size = (0.015, 0.050990194, 0)
            uniform token mujoco:geom:type = "capsule"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [0]
            double radius = 0.015
            float3 urdf:collision:origin:rpy = (0, 0.19739556, 0)
            point3f urdf:collision:origin:xyz = (-0.01, 0, -0.05)
            float urdf:geometry:cylinder:length = 0.10198039
            float urdf:geometry:cylinder:radius = 0.015
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.9805806756909201, 0, -0.19611613513818404, 0), (0, 1, 0, 0), (0.19611613513818404, 0, 0.9805806756909201, 0), (-0.01, 0, -0.05, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cylinder "Geom_26" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryCylinderAPI"]
        )
        {
            float3[] extent = [(-0.015, -0.015, -0.02236068), (0.015, 0.015, 0.02236068)]
            double height = 0.0447213595499958
            point3f mujoco:geom:pos = (-0.01, 0, -0.18)
            quatf mujoco:geom:quat = (0.973249, 0, -0.22975291, 0)
            vector3f mujoco:geom:size = (0.015, 0.02236068, 0)
            uniform token mujoco:geom:type = "capsule"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [0]
            double radius = 0.015
            float3 urdf:collision:origin:rpy = (0, -0.4636476, 0)
            point3f urdf:collision:origin:xyz = (-0.01, 0, -0.18)
            float urdf:geometry:cylinder:length = 0.04472136
            float urdf:geometry:cylinder:radius = 0.015
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.8944271909999159, 0, 0.4472135954999579, 0), (0, 1, 0, 0), (-0.4472135954999579, 0, 0.8944271909999159, 0), (-0.01, 0, -0.18, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def PhysicsRevoluteJoint "FL_calf_joint" (
            prepend apiSchemas = ["MujocoJointAPI", "UrdfJointAPI"]
        )
        {
            vector3f mujoco:joint:axis = (0, 1, 0)
            point3f mujoco:joint:pos = (0, 0, 0)
            float2 mujoco:joint:range = (-2.818, -0.888)
            uniform token mujoco:joint:type = "hinge"
            uniform token physics:axis = "Z"
            rel physics:body0 = </go1/FL_thigh>
            rel physics:body1 = </go1/FL_calf>
            bool physics:collisionEnabled = 0
            point3f physics:localPos0 = (0, 0, -0.213)
            point3f physics:localPos1 = (0, 0, 0)
            quatf physics:localRot0 = (0.7071068, -0.7071068, 0, 0)
            quatf physics:localRot1 = (0.7071068, -0.7071068, 0, 0)
            float physics:lowerLimit = -161.4595
            float physics:upperLimit = -50.87865
            vector3f urdf:joint:axis = (0, 1, 0)
            prepend rel urdf:joint:child = </go1/FL_calf>
            float urdf:joint:limit:effort = 1000
            float urdf:joint:limit:lower = -2.8179998
            float urdf:joint:limit:upper = -0.88799995
            float urdf:joint:limit:velocity = 1000
            float3 urdf:joint:origin:rpy = (0, 0, 0)
            point3f urdf:joint:origin:xyz = (0, 0, -0.213)
            prepend rel urdf:joint:parent = </go1/FL_thigh>
            uniform token urdf:joint:type = "revolute"
        }
    }

    def Xform "FL_calf" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMassAPI", "MujocoBodyAPI", "MujocoBodyInertialAPI", "UrdfLinkInertialAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (0.00149767, 0.00148468, 0.0000358427)
        float mujoco:body:inertial:mass = 0.195862
        point3f mujoco:body:inertial:pos = (0.00429862, 0.000976676, -0.146197)
        quatf mujoco:body:inertial:quat = (0.6912463, 0.0035746715, 0.005111182, 0.7225923)
        point3f mujoco:body:pos = (0, 0, -0.213)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        point3f physics:centerOfMass = (0.00429862, 0.000976676, -0.146197)
        float3 physics:diagonalInertia = (0.00149767, 0.00148468, 0.0000358427)
        float physics:mass = 0.195862
        quatf physics:principalAxes = (0.6912463, 0.0035746715, 0.005111182, 0.7225923)
        bool physics:rigidBodyEnabled = 1
        float urdf:link:inertial:inertia:ixx = 0.00149767
        float urdf:link:inertial:inertia:iyy = 0.00148468
        float urdf:link:inertial:inertia:izz = 0.0000358427
        float urdf:link:inertial:mass = 0.195862
        float3 urdf:link:inertial:origin:rpy = (0.012328894, 0.0019001124, 1.6151425)
        point3f urdf:link:inertial:origin:xyz = (0.00429862, 0.000976676, -0.146197)
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0.1881, 0.12675, -0.213, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "Geom_27" (
            prepend apiSchemas = ["MujocoGeomAPI", "MaterialBindingAPI", "UrdfLinkVisualAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./go1/meshes/usd/calf.usda@</calf>
        )
        {
            rel material:binding = </go1/FL_calf/Geom_27/Materials/dark>
            rel mujoco:geom:material = </mujoco/asset/materials/dark>
            rel mujoco:geom:mesh = </mujoco/asset/meshes/calf>
            point3f mujoco:geom:pos = (0.006786841, -9.169547e-7, -0.12472492)
            quatf mujoco:geom:quat = (0.70708835, -0.0043905526, -0.004400269, 0.7070979)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [1]
            asset urdf:geometry:mesh:filename = @./go1/meshes/obj/calf.obj@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            float3 urdf:visual:origin:rpy = (-0.012432179, -0.00001365677, 1.5708098)
            point3f urdf:visual:origin:xyz = (0.006786841, -9.169547e-7, -0.12472492)
            matrix4d xformOp:transform = ( (-0.000013539683468843933, 0.9999999998150848, 0.000013656769751578361, 0), (-0.9999227213624695, -0.000013368858103657288, -0.012431859247387562, 0), (-0.012431859062513304, -0.00001382403781415801, 0.9999227213585787, 0), (0.006786841024431935, -9.169547043186021e-7, -0.12472491633621631, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Scope "Materials"
            {
                def Material "dark" (
                    prepend references = @./go1/materials/usd/dark.usda@</dark>
                )
                {
                }
            }
        }

        def Cylinder "Geom_28" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryCylinderAPI"]
        )
        {
            float3[] extent = [(-0.01, -0.01, -0.06576473), (0.01, 0.01, 0.06576473)]
            double height = 0.13152946437965907
            point3f mujoco:geom:pos = (0.01, 0, -0.065)
            quatf mujoco:geom:quat = (0.9970887, 0, -0.07625058, 0)
            vector3f mujoco:geom:size = (0.01, 0.06576473, 0)
            uniform token mujoco:geom:type = "capsule"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [0]
            double radius = 0.01
            float3 urdf:collision:origin:rpy = (0, -0.15264933, 0)
            point3f urdf:collision:origin:xyz = (0.01, 0, -0.065)
            float urdf:geometry:cylinder:length = 0.13152947
            float urdf:geometry:cylinder:radius = 0.01
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.9883716976506172, 0, 0.1520571842539411, 0), (0, 1, 0, 0), (-0.1520571842539411, 0, 0.9883716976506172, 0), (0.01, 0, -0.065, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cylinder "Geom_29" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryCylinderAPI"]
        )
        {
            float3[] extent = [(-0.01, -0.01, -0.03640055), (0.01, 0.01, 0.03640055)]
            double height = 0.07280109889280519
            point3f mujoco:geom:pos = (0.01, 0, -0.165)
            quatf mujoco:geom:quat = (0.9903343, 0, 0.13870122, 0)
            vector3f mujoco:geom:size = (0.01, 0.03640055, 0)
            uniform token mujoco:geom:type = "capsule"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [0]
            double radius = 0.01
            float3 urdf:collision:origin:rpy = (0, 0.27829966, 0)
            point3f urdf:collision:origin:xyz = (0.01, 0, -0.165)
            float urdf:geometry:cylinder:length = 0.0728011
            float urdf:geometry:cylinder:radius = 0.01
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.9615239476408232, 0, -0.274721127897378, 0), (0, 1, 0, 0), (0.274721127897378, 0, 0.9615239476408232, 0), (0.01, 0, -0.165, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Sphere "FL" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometrySphereAPI"]
        )
        {
            float3[] extent = [(-0.023, -0.023, -0.023), (0.023, 0.023, 0.023)]
            point3f mujoco:geom:pos = (0, 0, -0.213)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.023, 0, 0)
            uniform token mujoco:geom:type = "sphere"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [0]
            double radius = 0.023
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, -0.213)
            float urdf:geometry:sphere:radius = 0.023
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, -0.213, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def Xform "RR_hip" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMassAPI", "MujocoBodyAPI", "MujocoBodyInertialAPI", "UrdfLinkInertialAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (0.000734064, 0.000468438, 0.000398719)
        float mujoco:body:inertial:mass = 0.68
        point3f mujoco:body:inertial:pos = (0.0049166, 0.00762615, -0.00008865)
        quatf mujoco:body:inertial:quat = (0.49502698, 0.48289096, 0.50734097, 0.514169)
        point3f mujoco:body:pos = (-0.1881, -0.04675, 0)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        point3f physics:centerOfMass = (0.0049166, 0.00762615, -0.00008865)
        float3 physics:diagonalInertia = (0.000734064, 0.000468438, 0.000398719)
        float physics:mass = 0.68
        quatf physics:principalAxes = (0.49502698, 0.48289096, 0.50734097, 0.514169)
        bool physics:rigidBodyEnabled = 1
        float urdf:link:inertial:inertia:ixx = 0.000734064
        float urdf:link:inertial:inertia:iyy = 0.000468438
        float urdf:link:inertial:inertia:izz = 0.000398719
        float urdf:link:inertial:mass = 0.68
        float3 urdf:link:inertial:origin:rpy = (1.551952, 0.005719855, 1.61434)
        point3f urdf:link:inertial:origin:xyz = (0.0049166, 0.00762615, -0.00008865)
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (-0.1881, -0.04675, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "Geom_31" (
            prepend apiSchemas = ["MujocoGeomAPI", "MaterialBindingAPI", "UrdfLinkVisualAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./go1/meshes/usd/hip.usda@</hip>
        )
        {
            rel material:binding = </go1/RR_hip/Geom_31/Materials/dark>
            rel mujoco:geom:material = </mujoco/asset/materials/dark>
            rel mujoco:geom:mesh = </mujoco/asset/meshes/hip>
            point3f mujoco:geom:pos = (0.012875064, 0.0017777804, -1.960474e-7)
            quatf mujoco:geom:quat = (0.710132, 0.000035938418, -0.00003072087, -0.70406854)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [1]
            asset urdf:geometry:mesh:filename = @./go1/meshes/obj/hip.obj@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            float3 urdf:visual:origin:rpy = (0.000094301235, 0.0000069744756, -1.5622213)
            point3f urdf:visual:origin:xyz = (0.012875064, 0.0017777804, -1.960474e-7)
            matrix4d xformOp:transform = ( (0.008574907014899269, -0.9999632347846807, -0.0000069744756912447204, 0), (0.9999632303684431, 0.008574906319303244, 0.0000943012353187812, 0), (-0.00009423796283788115, -0.00000778284356659194, 0.9999999955293168, 0), (0.01287506452532647, 0.001777780333168141, -1.960473976279123e-7, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Scope "Materials"
            {
                def Material "dark" (
                    prepend references = @./go1/materials/usd/dark.usda@</dark>
                )
                {
                }
            }
        }

        def Cylinder "Geom_32" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryCylinderAPI"]
        )
        {
            float3[] extent = [(-0.046, -0.046, -0.02), (0.046, 0.046, 0.02)]
            double height = 0.04
            point3f mujoco:geom:pos = (0, -0.045, 0)
            quatf mujoco:geom:quat = (0.70710677, 0.70710677, 0, 0)
            vector3f mujoco:geom:size = (0.046, 0.02, 0)
            uniform token mujoco:geom:type = "cylinder"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [0]
            double radius = 0.046
            float3 urdf:collision:origin:rpy = (1.5707964, 0, 0)
            point3f urdf:collision:origin:xyz = (0, -0.045, 0)
            float urdf:geometry:cylinder:length = 0.04
            float urdf:geometry:cylinder:radius = 0.046
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 2.220446049250313e-16, 0.9999999999999998, 0), (0, -0.9999999999999998, 2.220446049250313e-16, 0), (0, -0.045, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cylinder "Geom_33" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryCylinderAPI"]
        )
        {
            float3[] extent = [(-0.031, -0.031, -0.02), (0.031, 0.031, 0.02)]
            double height = 0.04
            point3f mujoco:geom:pos = (0, -0.065, 0)
            quatf mujoco:geom:quat = (0.70710677, 0.70710677, 0, 0)
            vector3f mujoco:geom:size = (0.031, 0.02, 0)
            uniform token mujoco:geom:type = "cylinder"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [0]
            double radius = 0.031
            float3 urdf:collision:origin:rpy = (1.5707964, 0, 0)
            point3f urdf:collision:origin:xyz = (0, -0.065, 0)
            float urdf:geometry:cylinder:length = 0.04
            float urdf:geometry:cylinder:radius = 0.031
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 2.220446049250313e-16, 0.9999999999999998, 0), (0, -0.9999999999999998, 2.220446049250313e-16, 0), (0, -0.065, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cylinder "Geom_34" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryCylinderAPI"]
        )
        {
            float3[] extent = [(-0.046, -0.046, -0.02), (0.046, 0.046, 0.02)]
            double height = 0.04
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (0.70710677, 0.70710677, 0, 0)
            vector3f mujoco:geom:size = (0.046, 0.02, 0)
            uniform token mujoco:geom:type = "cylinder"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [0]
            double radius = 0.046
            float3 urdf:collision:origin:rpy = (1.5707964, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            float urdf:geometry:cylinder:length = 0.04
            float urdf:geometry:cylinder:radius = 0.046
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 2.220446049250313e-16, 0.9999999999999998, 0), (0, -0.9999999999999998, 2.220446049250313e-16, 0), (0, 0, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def PhysicsRevoluteJoint "RR_thigh_joint" (
            prepend apiSchemas = ["MujocoJointAPI", "UrdfJointAPI"]
        )
        {
            vector3f mujoco:joint:axis = (0, 1, 0)
            point3f mujoco:joint:pos = (0, 0, 0)
            float2 mujoco:joint:range = (-0.686, 4.501)
            uniform token mujoco:joint:type = "hinge"
            uniform token physics:axis = "Z"
            rel physics:body0 = </go1/RR_hip>
            rel physics:body1 = </go1/RR_thigh>
            bool physics:collisionEnabled = 0
            point3f physics:localPos0 = (0, -0.08, 0)
            point3f physics:localPos1 = (0, 0, 0)
            quatf physics:localRot0 = (0.7071068, -0.7071068, 0, 0)
            quatf physics:localRot1 = (0.7071068, -0.7071068, 0, 0)
            float physics:lowerLimit = -39.304905
            float physics:upperLimit = 257.8883
            vector3f urdf:joint:axis = (0, 1, 0)
            prepend rel urdf:joint:child = </go1/RR_thigh>
            float urdf:joint:limit:effort = 1000
            float urdf:joint:limit:lower = -0.686
            float urdf:joint:limit:upper = 4.501
            float urdf:joint:limit:velocity = 1000
            float3 urdf:joint:origin:rpy = (0, 0, 0)
            point3f urdf:joint:origin:xyz = (0, -0.08, 0)
            prepend rel urdf:joint:parent = </go1/RR_hip>
            uniform token urdf:joint:type = "revolute"
        }
    }

    def Xform "RR_thigh" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMassAPI", "MujocoBodyAPI", "MujocoBodyInertialAPI", "UrdfLinkInertialAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (0.00478717, 0.00460903, 0.000709268)
        float mujoco:body:inertial:mass = 1.009
        point3f mujoco:body:inertial:pos = (-0.00304722, 0.019315, -0.0305004)
        quatf mujoco:body:inertial:quat = (0.6524298, -0.027231293, 0.07751258, 0.7533828)
        point3f mujoco:body:pos = (0, -0.08, 0)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        point3f physics:centerOfMass = (-0.00304722, 0.019315, -0.0305004)
        float3 physics:diagonalInertia = (0.00478717, 0.00460903, 0.000709268)
        float physics:mass = 1.009
        quatf physics:principalAxes = (0.6524298, -0.027231293, 0.07751258, 0.7533828)
        bool physics:rigidBodyEnabled = 1
        float urdf:link:inertial:inertia:ixx = 0.00478717
        float urdf:link:inertial:inertia:iyy = 0.00460903
        float urdf:link:inertial:inertia:izz = 0.000709268
        float urdf:link:inertial:mass = 1.009
        float3 urdf:link:inertial:origin:rpy = (0.0821867, 0.14265758, 1.720048)
        point3f urdf:link:inertial:origin:xyz = (-0.00304722, 0.019315, -0.0305004)
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (-0.1881, -0.12675, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "Geom_35" (
            prepend apiSchemas = ["MujocoGeomAPI", "MaterialBindingAPI", "UrdfLinkVisualAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./go1/meshes/usd/thigh_mirror.usda@</thigh_mirror>
        )
        {
            rel material:binding = </go1/RR_thigh/Geom_35/Materials/dark>
            rel mujoco:geom:material = </mujoco/asset/materials/dark>
            rel mujoco:geom:mesh = </mujoco/asset/meshes/thigh_mirror>
            point3f mujoco:geom:pos = (-0.004290462, 0.022090629, -0.04642722)
            quatf mujoco:geom:quat = (0.5726117, -0.030974248, 0.094206885, 0.81380683)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [1]
            asset urdf:geometry:mesh:filename = @./go1/meshes/obj/thigh_mirror.obj@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            float3 urdf:visual:origin:rpy = (0.11965037, 0.15897076, 1.9248303)
            point3f urdf:visual:origin:xyz = (-0.004290462, 0.022090629, -0.04642722)
            matrix4d xformOp:transform = ( (-0.3423129532293714, 0.9261545818539455, -0.15830202955846728, 0), (-0.9378265313124944, -0.32648188730517114, 0.11785997805883405, 0), (0.05747381332190728, 0.18880484043741372, 0.980331317978591, 0), (-0.0042904622262588945, 0.02209062950620072, -0.0464272204638417, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Scope "Materials"
            {
                def Material "dark" (
                    prepend references = @./go1/materials/usd/dark.usda@</dark>
                )
                {
                }
            }
        }

        def Cylinder "Geom_36" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryCylinderAPI"]
        )
        {
            float3[] extent = [(-0.015, -0.015, -0.08), (0.015, 0.015, 0.08)]
            double height = 0.16
            point3f mujoco:geom:pos = (-0.02, 0, -0.08)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.015, 0.08, 0)
            uniform token mujoco:geom:type = "capsule"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [0]
            double radius = 0.015
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (-0.02, 0, -0.08)
            float urdf:geometry:cylinder:length = 0.16
            float urdf:geometry:cylinder:radius = 0.015
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (-0.02, 0, -0.08, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cylinder "Geom_37" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryCylinderAPI"]
        )
        {
            float3[] extent = [(-0.015, -0.015, -0.050990194), (0.015, 0.015, 0.050990194)]
            double height = 0.10198039027185571
            point3f mujoco:geom:pos = (-0.01, 0, -0.05)
            quatf mujoco:geom:quat = (0.99513334, 0, 0.09853762, 0)
            vector3f mujoco:geom:size = (0.015, 0.050990194, 0)
            uniform token mujoco:geom:type = "capsule"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [0]
            double radius = 0.015
            float3 urdf:collision:origin:rpy = (0, 0.19739556, 0)
            point3f urdf:collision:origin:xyz = (-0.01, 0, -0.05)
            float urdf:geometry:cylinder:length = 0.10198039
            float urdf:geometry:cylinder:radius = 0.015
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.9805806756909201, 0, -0.19611613513818404, 0), (0, 1, 0, 0), (0.19611613513818404, 0, 0.9805806756909201, 0), (-0.01, 0, -0.05, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cylinder "Geom_38" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryCylinderAPI"]
        )
        {
            float3[] extent = [(-0.015, -0.015, -0.02236068), (0.015, 0.015, 0.02236068)]
            double height = 0.0447213595499958
            point3f mujoco:geom:pos = (-0.01, 0, -0.18)
            quatf mujoco:geom:quat = (0.973249, 0, -0.22975291, 0)
            vector3f mujoco:geom:size = (0.015, 0.02236068, 0)
            uniform token mujoco:geom:type = "capsule"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [0]
            double radius = 0.015
            float3 urdf:collision:origin:rpy = (0, -0.4636476, 0)
            point3f urdf:collision:origin:xyz = (-0.01, 0, -0.18)
            float urdf:geometry:cylinder:length = 0.04472136
            float urdf:geometry:cylinder:radius = 0.015
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.8944271909999159, 0, 0.4472135954999579, 0), (0, 1, 0, 0), (-0.4472135954999579, 0, 0.8944271909999159, 0), (-0.01, 0, -0.18, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def PhysicsRevoluteJoint "RR_calf_joint" (
            prepend apiSchemas = ["MujocoJointAPI", "UrdfJointAPI"]
        )
        {
            vector3f mujoco:joint:axis = (0, 1, 0)
            point3f mujoco:joint:pos = (0, 0, 0)
            float2 mujoco:joint:range = (-2.818, -0.888)
            uniform token mujoco:joint:type = "hinge"
            uniform token physics:axis = "Z"
            rel physics:body0 = </go1/RR_thigh>
            rel physics:body1 = </go1/RR_calf>
            bool physics:collisionEnabled = 0
            point3f physics:localPos0 = (0, 0, -0.213)
            point3f physics:localPos1 = (0, 0, 0)
            quatf physics:localRot0 = (0.7071068, -0.7071068, 0, 0)
            quatf physics:localRot1 = (0.7071068, -0.7071068, 0, 0)
            float physics:lowerLimit = -161.4595
            float physics:upperLimit = -50.87865
            vector3f urdf:joint:axis = (0, 1, 0)
            prepend rel urdf:joint:child = </go1/RR_calf>
            float urdf:joint:limit:effort = 1000
            float urdf:joint:limit:lower = -2.8179998
            float urdf:joint:limit:upper = -0.88799995
            float urdf:joint:limit:velocity = 1000
            float3 urdf:joint:origin:rpy = (0, 0, 0)
            point3f urdf:joint:origin:xyz = (0, 0, -0.213)
            prepend rel urdf:joint:parent = </go1/RR_thigh>
            uniform token urdf:joint:type = "revolute"
        }
    }

    def Xform "RR_calf" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMassAPI", "MujocoBodyAPI", "MujocoBodyInertialAPI", "UrdfLinkInertialAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (0.00149767, 0.00148468, 0.0000358427)
        float mujoco:body:inertial:mass = 0.195862
        point3f mujoco:body:inertial:pos = (0.00429862, 0.000976676, -0.146197)
        quatf mujoco:body:inertial:quat = (0.6912463, 0.0035746715, 0.005111182, 0.7225923)
        point3f mujoco:body:pos = (0, 0, -0.213)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        point3f physics:centerOfMass = (0.00429862, 0.000976676, -0.146197)
        float3 physics:diagonalInertia = (0.00149767, 0.00148468, 0.0000358427)
        float physics:mass = 0.195862
        quatf physics:principalAxes = (0.6912463, 0.0035746715, 0.005111182, 0.7225923)
        bool physics:rigidBodyEnabled = 1
        float urdf:link:inertial:inertia:ixx = 0.00149767
        float urdf:link:inertial:inertia:iyy = 0.00148468
        float urdf:link:inertial:inertia:izz = 0.0000358427
        float urdf:link:inertial:mass = 0.195862
        float3 urdf:link:inertial:origin:rpy = (0.012328894, 0.0019001124, 1.6151425)
        point3f urdf:link:inertial:origin:xyz = (0.00429862, 0.000976676, -0.146197)
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (-0.1881, -0.12675, -0.213, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "Geom_39" (
            prepend apiSchemas = ["MujocoGeomAPI", "MaterialBindingAPI", "UrdfLinkVisualAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./go1/meshes/usd/calf.usda@</calf>
        )
        {
            rel material:binding = </go1/RR_calf/Geom_39/Materials/dark>
            rel mujoco:geom:material = </mujoco/asset/materials/dark>
            rel mujoco:geom:mesh = </mujoco/asset/meshes/calf>
            point3f mujoco:geom:pos = (0.006786841, -9.169547e-7, -0.12472492)
            quatf mujoco:geom:quat = (0.70708835, -0.0043905526, -0.004400269, 0.7070979)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [1]
            asset urdf:geometry:mesh:filename = @./go1/meshes/obj/calf.obj@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            float3 urdf:visual:origin:rpy = (-0.012432179, -0.00001365677, 1.5708098)
            point3f urdf:visual:origin:xyz = (0.006786841, -9.169547e-7, -0.12472492)
            matrix4d xformOp:transform = ( (-0.000013539683468843933, 0.9999999998150848, 0.000013656769751578361, 0), (-0.9999227213624695, -0.000013368858103657288, -0.012431859247387562, 0), (-0.012431859062513304, -0.00001382403781415801, 0.9999227213585787, 0), (0.006786841024431935, -9.169547043186021e-7, -0.12472491633621631, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Scope "Materials"
            {
                def Material "dark" (
                    prepend references = @./go1/materials/usd/dark.usda@</dark>
                )
                {
                }
            }
        }

        def Cylinder "Geom_40" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryCylinderAPI"]
        )
        {
            float3[] extent = [(-0.01, -0.01, -0.06576473), (0.01, 0.01, 0.06576473)]
            double height = 0.13152946437965907
            point3f mujoco:geom:pos = (0.01, 0, -0.065)
            quatf mujoco:geom:quat = (0.9970887, 0, -0.07625058, 0)
            vector3f mujoco:geom:size = (0.01, 0.06576473, 0)
            uniform token mujoco:geom:type = "capsule"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [0]
            double radius = 0.01
            float3 urdf:collision:origin:rpy = (0, -0.15264933, 0)
            point3f urdf:collision:origin:xyz = (0.01, 0, -0.065)
            float urdf:geometry:cylinder:length = 0.13152947
            float urdf:geometry:cylinder:radius = 0.01
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.9883716976506172, 0, 0.1520571842539411, 0), (0, 1, 0, 0), (-0.1520571842539411, 0, 0.9883716976506172, 0), (0.01, 0, -0.065, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cylinder "Geom_41" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryCylinderAPI"]
        )
        {
            float3[] extent = [(-0.01, -0.01, -0.03640055), (0.01, 0.01, 0.03640055)]
            double height = 0.07280109889280519
            point3f mujoco:geom:pos = (0.01, 0, -0.165)
            quatf mujoco:geom:quat = (0.9903343, 0, 0.13870122, 0)
            vector3f mujoco:geom:size = (0.01, 0.03640055, 0)
            uniform token mujoco:geom:type = "capsule"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [0]
            double radius = 0.01
            float3 urdf:collision:origin:rpy = (0, 0.27829966, 0)
            point3f urdf:collision:origin:xyz = (0.01, 0, -0.165)
            float urdf:geometry:cylinder:length = 0.0728011
            float urdf:geometry:cylinder:radius = 0.01
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.9615239476408232, 0, -0.274721127897378, 0), (0, 1, 0, 0), (0.274721127897378, 0, 0.9615239476408232, 0), (0.01, 0, -0.165, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Sphere "RR" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometrySphereAPI"]
        )
        {
            float3[] extent = [(-0.023, -0.023, -0.023), (0.023, 0.023, 0.023)]
            point3f mujoco:geom:pos = (0, 0, -0.213)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.023, 0, 0)
            uniform token mujoco:geom:type = "sphere"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [0]
            double radius = 0.023
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, -0.213)
            float urdf:geometry:sphere:radius = 0.023
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, -0.213, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def Xform "RL_hip" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMassAPI", "MujocoBodyAPI", "MujocoBodyInertialAPI", "UrdfLinkInertialAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (0.000734064, 0.000468438, 0.000398719)
        float mujoco:body:inertial:mass = 0.68
        point3f mujoco:body:inertial:pos = (0.0049166, -0.00762615, -0.00008865)
        quatf mujoco:body:inertial:quat = (0.514169, 0.50734097, 0.48289096, 0.49502698)
        point3f mujoco:body:pos = (-0.1881, 0.04675, 0)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        point3f physics:centerOfMass = (0.0049166, -0.00762615, -0.00008865)
        float3 physics:diagonalInertia = (0.000734064, 0.000468438, 0.000398719)
        float physics:mass = 0.68
        quatf physics:principalAxes = (0.514169, 0.50734097, 0.48289096, 0.49502698)
        bool physics:rigidBodyEnabled = 1
        float urdf:link:inertial:inertia:ixx = 0.000734064
        float urdf:link:inertial:inertia:iyy = 0.000468438
        float urdf:link:inertial:inertia:izz = 0.000398719
        float urdf:link:inertial:mass = 0.68
        float3 urdf:link:inertial:origin:rpy = (1.551952, -0.005719855, 1.5272527)
        point3f urdf:link:inertial:origin:xyz = (0.0049166, -0.00762615, -0.00008865)
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (-0.1881, 0.04675, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "Geom_43" (
            prepend apiSchemas = ["MujocoGeomAPI", "MaterialBindingAPI", "UrdfLinkVisualAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./go1/meshes/usd/hip.usda@</hip>
        )
        {
            rel material:binding = </go1/RL_hip/Geom_43/Materials/dark>
            rel mujoco:geom:material = </mujoco/asset/materials/dark>
            rel mujoco:geom:mesh = </mujoco/asset/meshes/hip>
            point3f mujoco:geom:pos = (0.012875064, -0.0017777804, 1.960474e-7)
            quatf mujoco:geom:quat = (-0.000035938418, 0.710132, 0.70406854, -0.00003072087)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [1]
            asset urdf:geometry:mesh:filename = @./go1/meshes/obj/hip.obj@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            float3 urdf:visual:origin:rpy = (-3.1414983, -0.0000069744756, 1.5622213)
            point3f urdf:visual:origin:xyz = (0.012875064, -0.0017777804, 1.960474e-7)
            matrix4d xformOp:transform = ( (0.008574907014899269, 0.9999632347846807, 0.0000069744756912447204, 0), (0.9999632303684431, -0.008574906319303244, -0.0000943012353187812, 0), (-0.00009423796283788115, 0.00000778284356659194, -0.9999999955293171, 0), (0.01287506452532647, -0.001777780333168141, 1.960473976279123e-7, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Scope "Materials"
            {
                def Material "dark" (
                    prepend references = @./go1/materials/usd/dark.usda@</dark>
                )
                {
                }
            }
        }

        def Cylinder "Geom_44" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryCylinderAPI"]
        )
        {
            float3[] extent = [(-0.046, -0.046, -0.02), (0.046, 0.046, 0.02)]
            double height = 0.04
            point3f mujoco:geom:pos = (0, 0.045, 0)
            quatf mujoco:geom:quat = (0.70710677, 0.70710677, 0, 0)
            vector3f mujoco:geom:size = (0.046, 0.02, 0)
            uniform token mujoco:geom:type = "cylinder"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [0]
            double radius = 0.046
            float3 urdf:collision:origin:rpy = (1.5707964, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0.045, 0)
            float urdf:geometry:cylinder:length = 0.04
            float urdf:geometry:cylinder:radius = 0.046
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 2.220446049250313e-16, 0.9999999999999998, 0), (0, -0.9999999999999998, 2.220446049250313e-16, 0), (0, 0.045, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cylinder "Geom_45" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryCylinderAPI"]
        )
        {
            float3[] extent = [(-0.031, -0.031, -0.02), (0.031, 0.031, 0.02)]
            double height = 0.04
            point3f mujoco:geom:pos = (0, 0.065, 0)
            quatf mujoco:geom:quat = (0.70710677, 0.70710677, 0, 0)
            vector3f mujoco:geom:size = (0.031, 0.02, 0)
            uniform token mujoco:geom:type = "cylinder"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [0]
            double radius = 0.031
            float3 urdf:collision:origin:rpy = (1.5707964, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0.065, 0)
            float urdf:geometry:cylinder:length = 0.04
            float urdf:geometry:cylinder:radius = 0.031
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 2.220446049250313e-16, 0.9999999999999998, 0), (0, -0.9999999999999998, 2.220446049250313e-16, 0), (0, 0.065, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cylinder "Geom_46" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryCylinderAPI"]
        )
        {
            float3[] extent = [(-0.046, -0.046, -0.02), (0.046, 0.046, 0.02)]
            double height = 0.04
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (0.70710677, 0.70710677, 0, 0)
            vector3f mujoco:geom:size = (0.046, 0.02, 0)
            uniform token mujoco:geom:type = "cylinder"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [0]
            double radius = 0.046
            float3 urdf:collision:origin:rpy = (1.5707964, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            float urdf:geometry:cylinder:length = 0.04
            float urdf:geometry:cylinder:radius = 0.046
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 2.220446049250313e-16, 0.9999999999999998, 0), (0, -0.9999999999999998, 2.220446049250313e-16, 0), (0, 0, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def PhysicsRevoluteJoint "RL_thigh_joint" (
            prepend apiSchemas = ["MujocoJointAPI", "UrdfJointAPI"]
        )
        {
            vector3f mujoco:joint:axis = (0, 1, 0)
            point3f mujoco:joint:pos = (0, 0, 0)
            float2 mujoco:joint:range = (-0.686, 4.501)
            uniform token mujoco:joint:type = "hinge"
            uniform token physics:axis = "Z"
            rel physics:body0 = </go1/RL_hip>
            rel physics:body1 = </go1/RL_thigh>
            bool physics:collisionEnabled = 0
            point3f physics:localPos0 = (0, 0.08, 0)
            point3f physics:localPos1 = (0, 0, 0)
            quatf physics:localRot0 = (0.7071068, -0.7071068, 0, 0)
            quatf physics:localRot1 = (0.7071068, -0.7071068, 0, 0)
            float physics:lowerLimit = -39.304905
            float physics:upperLimit = 257.8883
            vector3f urdf:joint:axis = (0, 1, 0)
            prepend rel urdf:joint:child = </go1/RL_thigh>
            float urdf:joint:limit:effort = 1000
            float urdf:joint:limit:lower = -0.686
            float urdf:joint:limit:upper = 4.501
            float urdf:joint:limit:velocity = 1000
            float3 urdf:joint:origin:rpy = (0, 0, 0)
            point3f urdf:joint:origin:xyz = (0, 0.08, 0)
            prepend rel urdf:joint:parent = </go1/RL_hip>
            uniform token urdf:joint:type = "revolute"
        }
    }

    def Xform "RL_thigh" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMassAPI", "MujocoBodyAPI", "MujocoBodyInertialAPI", "UrdfLinkInertialAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (0.00478717, 0.00460903, 0.000709268)
        float mujoco:body:inertial:mass = 1.009
        point3f mujoco:body:inertial:pos = (-0.00304722, -0.019315, -0.0305004)
        quatf mujoco:body:inertial:quat = (0.7533828, 0.07751258, -0.027231293, 0.6524298)
        point3f mujoco:body:pos = (0, 0.08, 0)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        point3f physics:centerOfMass = (-0.00304722, -0.019315, -0.0305004)
        float3 physics:diagonalInertia = (0.00478717, 0.00460903, 0.000709268)
        float physics:mass = 1.009
        quatf physics:principalAxes = (0.7533828, 0.07751258, -0.027231293, 0.6524298)
        bool physics:rigidBodyEnabled = 1
        float urdf:link:inertial:inertia:ixx = 0.00478717
        float urdf:link:inertial:inertia:iyy = 0.00460903
        float urdf:link:inertial:inertia:izz = 0.000709268
        float urdf:link:inertial:mass = 1.009
        float3 urdf:link:inertial:origin:rpy = (0.0821867, -0.14265758, 1.4215447)
        point3f urdf:link:inertial:origin:xyz = (-0.00304722, -0.019315, -0.0305004)
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (-0.1881, 0.12675, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "Geom_47" (
            prepend apiSchemas = ["MujocoGeomAPI", "MaterialBindingAPI", "UrdfLinkVisualAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./go1/meshes/usd/thigh.usda@</thigh>
        )
        {
            rel material:binding = </go1/RL_thigh/Geom_47/Materials/dark>
            rel mujoco:geom:material = </mujoco/asset/materials/dark>
            rel mujoco:geom:mesh = </mujoco/asset/meshes/thigh>
            point3f mujoco:geom:pos = (-0.0035736847, -0.023611648, -0.041030377)
            quatf mujoco:geom:quat = (0.8039951, 0.08563201, -0.031584993, 0.58758956)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [1]
            asset urdf:geometry:mesh:filename = @./go1/meshes/obj/thigh.obj@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            float3 urdf:visual:origin:rpy = (0.10192706, -0.152006, 1.2544792)
            point3f urdf:visual:origin:xyz = (-0.0035736847, -0.023611648, -0.041030377)
            matrix4d xformOp:transform = ( (0.3074817575275449, 0.9394288450553147, 0.15142131245570886, 0), (-0.9502475911339056, 0.29481129751901936, 0.10057740501405824, 0), (0.04984460183391698, -0.17481345466865414, 0.983339092955644, 0), (-0.003573684748494212, -0.023611648403056146, -0.04103037735385813, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Scope "Materials"
            {
                def Material "dark" (
                    prepend references = @./go1/materials/usd/dark.usda@</dark>
                )
                {
                }
            }
        }

        def Cylinder "Geom_48" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryCylinderAPI"]
        )
        {
            float3[] extent = [(-0.015, -0.015, -0.08), (0.015, 0.015, 0.08)]
            double height = 0.16
            point3f mujoco:geom:pos = (-0.02, 0, -0.08)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.015, 0.08, 0)
            uniform token mujoco:geom:type = "capsule"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [0]
            double radius = 0.015
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (-0.02, 0, -0.08)
            float urdf:geometry:cylinder:length = 0.16
            float urdf:geometry:cylinder:radius = 0.015
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (-0.02, 0, -0.08, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cylinder "Geom_49" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryCylinderAPI"]
        )
        {
            float3[] extent = [(-0.015, -0.015, -0.050990194), (0.015, 0.015, 0.050990194)]
            double height = 0.10198039027185571
            point3f mujoco:geom:pos = (-0.01, 0, -0.05)
            quatf mujoco:geom:quat = (0.99513334, 0, 0.09853762, 0)
            vector3f mujoco:geom:size = (0.015, 0.050990194, 0)
            uniform token mujoco:geom:type = "capsule"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [0]
            double radius = 0.015
            float3 urdf:collision:origin:rpy = (0, 0.19739556, 0)
            point3f urdf:collision:origin:xyz = (-0.01, 0, -0.05)
            float urdf:geometry:cylinder:length = 0.10198039
            float urdf:geometry:cylinder:radius = 0.015
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.9805806756909201, 0, -0.19611613513818404, 0), (0, 1, 0, 0), (0.19611613513818404, 0, 0.9805806756909201, 0), (-0.01, 0, -0.05, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cylinder "Geom_50" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryCylinderAPI"]
        )
        {
            float3[] extent = [(-0.015, -0.015, -0.02236068), (0.015, 0.015, 0.02236068)]
            double height = 0.0447213595499958
            point3f mujoco:geom:pos = (-0.01, 0, -0.18)
            quatf mujoco:geom:quat = (0.973249, 0, -0.22975291, 0)
            vector3f mujoco:geom:size = (0.015, 0.02236068, 0)
            uniform token mujoco:geom:type = "capsule"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [0]
            double radius = 0.015
            float3 urdf:collision:origin:rpy = (0, -0.4636476, 0)
            point3f urdf:collision:origin:xyz = (-0.01, 0, -0.18)
            float urdf:geometry:cylinder:length = 0.04472136
            float urdf:geometry:cylinder:radius = 0.015
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.8944271909999159, 0, 0.4472135954999579, 0), (0, 1, 0, 0), (-0.4472135954999579, 0, 0.8944271909999159, 0), (-0.01, 0, -0.18, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def PhysicsRevoluteJoint "RL_calf_joint" (
            prepend apiSchemas = ["MujocoJointAPI", "UrdfJointAPI"]
        )
        {
            vector3f mujoco:joint:axis = (0, 1, 0)
            point3f mujoco:joint:pos = (0, 0, 0)
            float2 mujoco:joint:range = (-2.818, -0.888)
            uniform token mujoco:joint:type = "hinge"
            uniform token physics:axis = "Z"
            rel physics:body0 = </go1/RL_thigh>
            rel physics:body1 = </go1/RL_calf>
            bool physics:collisionEnabled = 0
            point3f physics:localPos0 = (0, 0, -0.213)
            point3f physics:localPos1 = (0, 0, 0)
            quatf physics:localRot0 = (0.7071068, -0.7071068, 0, 0)
            quatf physics:localRot1 = (0.7071068, -0.7071068, 0, 0)
            float physics:lowerLimit = -161.4595
            float physics:upperLimit = -50.87865
            vector3f urdf:joint:axis = (0, 1, 0)
            prepend rel urdf:joint:child = </go1/RL_calf>
            float urdf:joint:limit:effort = 1000
            float urdf:joint:limit:lower = -2.8179998
            float urdf:joint:limit:upper = -0.88799995
            float urdf:joint:limit:velocity = 1000
            float3 urdf:joint:origin:rpy = (0, 0, 0)
            point3f urdf:joint:origin:xyz = (0, 0, -0.213)
            prepend rel urdf:joint:parent = </go1/RL_thigh>
            uniform token urdf:joint:type = "revolute"
        }
    }

    def Xform "RL_calf" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMassAPI", "MujocoBodyAPI", "MujocoBodyInertialAPI", "UrdfLinkInertialAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (0.00149767, 0.00148468, 0.0000358427)
        float mujoco:body:inertial:mass = 0.195862
        point3f mujoco:body:inertial:pos = (0.00429862, 0.000976676, -0.146197)
        quatf mujoco:body:inertial:quat = (0.6912463, 0.0035746715, 0.005111182, 0.7225923)
        point3f mujoco:body:pos = (0, 0, -0.213)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        point3f physics:centerOfMass = (0.00429862, 0.000976676, -0.146197)
        float3 physics:diagonalInertia = (0.00149767, 0.00148468, 0.0000358427)
        float physics:mass = 0.195862
        quatf physics:principalAxes = (0.6912463, 0.0035746715, 0.005111182, 0.7225923)
        bool physics:rigidBodyEnabled = 1
        float urdf:link:inertial:inertia:ixx = 0.00149767
        float urdf:link:inertial:inertia:iyy = 0.00148468
        float urdf:link:inertial:inertia:izz = 0.0000358427
        float urdf:link:inertial:mass = 0.195862
        float3 urdf:link:inertial:origin:rpy = (0.012328894, 0.0019001124, 1.6151425)
        point3f urdf:link:inertial:origin:xyz = (0.00429862, 0.000976676, -0.146197)
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (-0.1881, 0.12675, -0.213, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "Geom_51" (
            prepend apiSchemas = ["MujocoGeomAPI", "MaterialBindingAPI", "UrdfLinkVisualAPI", "UrdfGeometryMeshAPI"]
            prepend references = @./go1/meshes/usd/calf.usda@</calf>
        )
        {
            rel material:binding = </go1/RL_calf/Geom_51/Materials/dark>
            rel mujoco:geom:material = </mujoco/asset/materials/dark>
            rel mujoco:geom:mesh = </mujoco/asset/meshes/calf>
            point3f mujoco:geom:pos = (0.006786841, -9.169547e-7, -0.12472492)
            quatf mujoco:geom:quat = (0.70708835, -0.0043905526, -0.004400269, 0.7070979)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [1]
            asset urdf:geometry:mesh:filename = @./go1/meshes/obj/calf.obj@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            float3 urdf:visual:origin:rpy = (-0.012432179, -0.00001365677, 1.5708098)
            point3f urdf:visual:origin:xyz = (0.006786841, -9.169547e-7, -0.12472492)
            matrix4d xformOp:transform = ( (-0.000013539683468843933, 0.9999999998150848, 0.000013656769751578361, 0), (-0.9999227213624695, -0.000013368858103657288, -0.012431859247387562, 0), (-0.012431859062513304, -0.00001382403781415801, 0.9999227213585787, 0), (0.006786841024431935, -9.169547043186021e-7, -0.12472491633621631, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]

            def Scope "Materials"
            {
                def Material "dark" (
                    prepend references = @./go1/materials/usd/dark.usda@</dark>
                )
                {
                }
            }
        }

        def Cylinder "Geom_52" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryCylinderAPI"]
        )
        {
            float3[] extent = [(-0.01, -0.01, -0.06576473), (0.01, 0.01, 0.06576473)]
            double height = 0.13152946437965907
            point3f mujoco:geom:pos = (0.01, 0, -0.065)
            quatf mujoco:geom:quat = (0.9970887, 0, -0.07625058, 0)
            vector3f mujoco:geom:size = (0.01, 0.06576473, 0)
            uniform token mujoco:geom:type = "capsule"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [0]
            double radius = 0.01
            float3 urdf:collision:origin:rpy = (0, -0.15264933, 0)
            point3f urdf:collision:origin:xyz = (0.01, 0, -0.065)
            float urdf:geometry:cylinder:length = 0.13152947
            float urdf:geometry:cylinder:radius = 0.01
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.9883716976506172, 0, 0.1520571842539411, 0), (0, 1, 0, 0), (-0.1520571842539411, 0, 0.9883716976506172, 0), (0.01, 0, -0.065, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Cylinder "Geom_53" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryCylinderAPI"]
        )
        {
            float3[] extent = [(-0.01, -0.01, -0.03640055), (0.01, 0.01, 0.03640055)]
            double height = 0.07280109889280519
            point3f mujoco:geom:pos = (0.01, 0, -0.165)
            quatf mujoco:geom:quat = (0.9903343, 0, 0.13870122, 0)
            vector3f mujoco:geom:size = (0.01, 0.03640055, 0)
            uniform token mujoco:geom:type = "capsule"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [0]
            double radius = 0.01
            float3 urdf:collision:origin:rpy = (0, 0.27829966, 0)
            point3f urdf:collision:origin:xyz = (0.01, 0, -0.165)
            float urdf:geometry:cylinder:length = 0.0728011
            float urdf:geometry:cylinder:radius = 0.01
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (0.9615239476408232, 0, -0.274721127897378, 0), (0, 1, 0, 0), (0.274721127897378, 0, 0.9615239476408232, 0), (0.01, 0, -0.165, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Sphere "RL" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometrySphereAPI"]
        )
        {
            float3[] extent = [(-0.023, -0.023, -0.023), (0.023, 0.023, 0.023)]
            point3f mujoco:geom:pos = (0, 0, -0.213)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (0.023, 0, 0)
            uniform token mujoco:geom:type = "sphere"
            bool physics:collisionEnabled = 1
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            float[] primvars:displayOpacity = [0]
            double radius = 0.023
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, -0.213)
            float urdf:geometry:sphere:radius = 0.023
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, -0.213, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }
}

def Urdf "urdf"
{
    string urdf:name = "go1"
}

