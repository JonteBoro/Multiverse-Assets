#usda 1.0
(
    defaultPrim = "green_avocado"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "green_avocado" (
    prepend apiSchemas = ["MujocoBodyAPI"]
)
{
    point3f mujoco:body:pos = (0, 0, 0)
    quatf mujoco:body:quat = (1, 0, 0, 0)

    def Xform "green_avocado_flesh" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (0.00015632177, 0.00024222788, 0.00024602396)
        float mujoco:body:inertial:mass = 0.28678185
        point3f mujoco:body:inertial:pos = (-0.0052910172, -0.0000031961395, -0.0023375363)
        quatf mujoco:body:inertial:quat = (-0.6185844, 0.76329535, -0.11316135, -0.14808124)
        point3f mujoco:body:pos = (0, 0, 0)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        point3f physics:centerOfMass = (-0.0052910172, -0.0000031961395, -0.0023375363)
        float3 physics:diagonalInertia = (0.00015632177, 0.00024222788, 0.00024602396)
        float physics:mass = 0.28678185
        quatf physics:principalAxes = (-0.6185844, 0.76329535, -0.11316135, -0.14808124)
        bool physics:rigidBodyEnabled = 1
        float urdf:link:inertial:inertia:ixx = 0.00015632177
        float urdf:link:inertial:inertia:iyy = 0.00024222788
        float urdf:link:inertial:inertia:izz = 0.00024602396
        float urdf:link:inertial:mass = 0.28678185
        float3 urdf:link:inertial:origin:rpy = (-1.7773471, 0.37477067, 0.011230115)
        point3f urdf:link:inertial:origin:xyz = (-0.0052910172, -0.0000031961395, -0.0023375363)

        def Mesh "GreenAvocadoFlesh" (
            prepend apiSchemas = ["MaterialBindingAPI", "UrdfLinkVisualAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./green_avocado/meshes/usd/GreenAvocadoFlesh.usda@</GreenAvocadoFlesh>
        )
        {
            rel material:binding = </green_avocado/green_avocado_flesh/GreenAvocadoFlesh/Materials/M_GreenAvocadoFlesh>
            rel mujoco:geom:material = </mujoco/asset/materials/M_GreenAvocadoFlesh>
            rel mujoco:geom:mesh = </mujoco/asset/meshes/GreenAvocadoFlesh>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            asset urdf:geometry:mesh:filename = @./green_avocado/meshes/obj/GreenAvocadoFlesh.obj@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            float3 urdf:visual:origin:rpy = (0, 0, 0)
            point3f urdf:visual:origin:xyz = (0, 0, 0)

            def Scope "Materials"
            {
                def Material "M_GreenAvocadoFlesh" (
                    prepend references = @./green_avocado/materials/usd/M_GreenAvocadoFlesh.usda@</M_GreenAvocadoFlesh>
                )
                {
                }
            }
        }

        def Mesh "GreenAvocadoFlesh_001" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./green_avocado/meshes/usd/GreenAvocadoFlesh_001.usda@</GreenAvocadoFlesh_001>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/GreenAvocadoFlesh_001>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./green_avocado/meshes/stl/GreenAvocadoFlesh_001.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }
    }

    def Xform "green_avocado_peel" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (0.00035311736, 0.00054789573, 0.0005560007)
        float mujoco:body:inertial:mass = 0.61742103
        point3f mujoco:body:inertial:pos = (-0.005436279, 0.000007965296, -0.0022860982)
        quatf mujoco:body:inertial:quat = (-0.614837, 0.76626056, -0.112652816, -0.14876004)
        point3f mujoco:body:pos = (0, 0, 0)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        point3f physics:centerOfMass = (-0.005436279, 0.000007965296, -0.0022860982)
        float3 physics:diagonalInertia = (0.00035311736, 0.00054789573, 0.0005560007)
        float physics:mass = 0.61742103
        quatf physics:principalAxes = (-0.614837, 0.76626056, -0.112652816, -0.14876004)
        bool physics:rigidBodyEnabled = 1
        float urdf:link:inertial:inertia:ixx = 0.00035311736
        float urdf:link:inertial:inertia:iyy = 0.00054789573
        float urdf:link:inertial:inertia:izz = 0.0005560007
        float urdf:link:inertial:mass = 0.61742103
        float3 urdf:link:inertial:origin:rpy = (-1.7871056, 0.3752489, 0.01105283)
        point3f urdf:link:inertial:origin:xyz = (-0.005436279, 0.000007965296, -0.0022860982)

        def Mesh "GreenAvocadoPeel" (
            prepend apiSchemas = ["MaterialBindingAPI", "UrdfLinkVisualAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./green_avocado/meshes/usd/GreenAvocadoPeel.usda@</GreenAvocadoPeel>
        )
        {
            rel material:binding = </green_avocado/green_avocado_peel/GreenAvocadoPeel/Materials/M_GreenAvocadoPeel>
            rel mujoco:geom:material = </mujoco/asset/materials/M_GreenAvocadoPeel>
            rel mujoco:geom:mesh = </mujoco/asset/meshes/GreenAvocadoPeel>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            asset urdf:geometry:mesh:filename = @./green_avocado/meshes/obj/GreenAvocadoPeel.obj@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            float3 urdf:visual:origin:rpy = (0, 0, 0)
            point3f urdf:visual:origin:xyz = (0, 0, 0)

            def Scope "Materials"
            {
                def Material "M_GreenAvocadoPeel" (
                    prepend references = @./green_avocado/materials/usd/M_GreenAvocadoPeel.usda@</M_GreenAvocadoPeel>
                )
                {
                }
            }
        }

        def Mesh "GreenAvocadoPeel_001" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./green_avocado/meshes/usd/GreenAvocadoPeel_001.usda@</GreenAvocadoPeel_001>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/GreenAvocadoPeel_001>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./green_avocado/meshes/stl/GreenAvocadoPeel_001.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }
    }

    def Xform "green_avocado_seed" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (0.0000030250148, 0.0000059943636, 0.000006129014)
        float mujoco:body:inertial:mass = 0.02466349
        point3f mujoco:body:inertial:pos = (-0.010412808, -0.00015772173, -0.0002522872)
        quatf mujoco:body:inertial:quat = (0.097592026, 0.994826, 0.006190702, -0.027543426)
        point3f mujoco:body:pos = (0, 0, 0)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        point3f physics:centerOfMass = (-0.010412808, -0.00015772173, -0.0002522872)
        float3 physics:diagonalInertia = (0.0000030250148, 0.0000059943636, 0.000006129014)
        float physics:mass = 0.02466349
        quatf physics:principalAxes = (0.097592026, 0.994826, 0.006190702, -0.027543426)
        bool physics:rigidBodyEnabled = 1
        float urdf:link:inertial:inertia:ixx = 0.0000030250148
        float urdf:link:inertial:inertia:iyy = 0.0000059943636
        float urdf:link:inertial:inertia:izz = 0.000006129014
        float urdf:link:inertial:mass = 0.02466349
        float3 urdf:link:inertial:origin:rpy = (2.9462142, 0.056039486, 0.006952275)
        point3f urdf:link:inertial:origin:xyz = (-0.010412808, -0.00015772173, -0.0002522872)

        def Mesh "GreenAvocadoSeed" (
            prepend apiSchemas = ["MaterialBindingAPI", "UrdfLinkVisualAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./green_avocado/meshes/usd/GreenAvocadoSeed.usda@</GreenAvocadoSeed>
        )
        {
            rel material:binding = </green_avocado/green_avocado_seed/GreenAvocadoSeed/Materials/M_GreenAvocadoSeed>
            rel mujoco:geom:material = </mujoco/asset/materials/M_GreenAvocadoSeed>
            rel mujoco:geom:mesh = </mujoco/asset/meshes/GreenAvocadoSeed>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            asset urdf:geometry:mesh:filename = @./green_avocado/meshes/obj/GreenAvocadoSeed.obj@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            float3 urdf:visual:origin:rpy = (0, 0, 0)
            point3f urdf:visual:origin:xyz = (0, 0, 0)

            def Scope "Materials"
            {
                def Material "M_GreenAvocadoSeed" (
                    prepend references = @./green_avocado/materials/usd/M_GreenAvocadoSeed.usda@</M_GreenAvocadoSeed>
                )
                {
                }
            }
        }

        def Mesh "GreenAvocadoSeed_001" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./green_avocado/meshes/usd/GreenAvocadoSeed_001.usda@</GreenAvocadoSeed_001>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/GreenAvocadoSeed_001>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./green_avocado/meshes/stl/GreenAvocadoSeed_001.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }
    }
}

def Urdf "urdf"
{
    string urdf:name = "green_avocado"
}

def Mujoco "mujoco"
{
    string mujoco:model = "green_avocado"

    def MujocoAsset "asset"
    {
        def MujocoMesh "meshes"
        {
            def MujocoMesh "GreenAvocadoFlesh"
            {
                asset mujoco:mesh:file = @green_avocado/meshes/obj/GreenAvocadoFlesh.obj@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "GreenAvocadoFlesh_001"
            {
                asset mujoco:mesh:file = @green_avocado/meshes/stl/GreenAvocadoFlesh_001.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "GreenAvocadoPeel"
            {
                asset mujoco:mesh:file = @green_avocado/meshes/obj/GreenAvocadoPeel.obj@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "GreenAvocadoPeel_001"
            {
                asset mujoco:mesh:file = @green_avocado/meshes/stl/GreenAvocadoPeel_001.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "GreenAvocadoSeed"
            {
                asset mujoco:mesh:file = @green_avocado/meshes/obj/GreenAvocadoSeed.obj@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "GreenAvocadoSeed_001"
            {
                asset mujoco:mesh:file = @green_avocado/meshes/stl/GreenAvocadoSeed_001.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }
        }

        def MujocoMaterial "materials"
        {
            def MujocoMaterial "M_GreenAvocadoFlesh"
            {
                rel mujoco:material:texture = </mujoco/asset/textures/T_GreenAvocadoFlesh>
            }

            def MujocoMaterial "M_GreenAvocadoPeel"
            {
                rel mujoco:material:texture = </mujoco/asset/textures/T_GreenAvocadoPeel>
            }

            def MujocoMaterial "M_GreenAvocadoSeed"
            {
                rel mujoco:material:texture = </mujoco/asset/textures/T_GreenAvocadoSeed>
            }
        }

        def MujocoTexture "textures"
        {
            def MujocoTexture "T_GreenAvocadoFlesh"
            {
                asset mujoco:texture:file = @T_GreenAvocadoFlesh.png@
                string mujoco:texture:type = "2d"
            }

            def MujocoTexture "T_GreenAvocadoPeel"
            {
                asset mujoco:texture:file = @T_GreenAvocadoPeel.png@
                string mujoco:texture:type = "2d"
            }

            def MujocoTexture "T_GreenAvocadoSeed"
            {
                asset mujoco:texture:file = @T_GreenAvocadoSeed.png@
                string mujoco:texture:type = "2d"
            }
        }
    }

    def MujocoEquality "equality"
    {
    }
}

