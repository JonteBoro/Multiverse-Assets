#usda 1.0
(
    defaultPrim = "target"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "target" (
    prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMassAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI", "UrdfLinkInertialAPI"]
)
{
    float3 mujoco:body:inertial:diaginertia = (0.007171272, 0.007171277, 0.014216189)
    float mujoco:body:inertial:mass = 0.5470947
    point3f mujoco:body:inertial:pos = (-3.6250018e-8, -6.144252e-7, -3.0068552e-8)
    quatf mujoco:body:inertial:quat = (0.65267766, -0.65267766, -0.27205124, -0.27205124)
    point3f mujoco:body:pos = (0, 0, 0)
    quatf mujoco:body:quat = (1, 0, 0, 0)
    point3f physics:centerOfMass = (-3.6250018e-8, -6.144252e-7, -3.0068552e-8)
    float3 physics:diagonalInertia = (0.007171272, 0.007171277, 0.014216189)
    float physics:mass = 0.5470947
    quatf physics:principalAxes = (0.65267766, -0.65267766, -0.27205124, -0.27205124)
    bool physics:rigidBodyEnabled = 1
    float urdf:link:inertial:inertia:ixx = 0.007171272
    float urdf:link:inertial:inertia:iyy = 0.007171277
    float urdf:link:inertial:inertia:izz = 0.014216189
    float urdf:link:inertial:mass = 0.5470947
    float3 urdf:link:inertial:origin:rpy = (-1.5707964, -0.7898491, 0)
    point3f urdf:link:inertial:origin:xyz = (-3.6250018e-8, -6.144252e-7, -3.0068552e-8)

    def Mesh "Target" (
        prepend apiSchemas = ["MaterialBindingAPI", "MujocoGeomAPI", "UrdfLinkVisualAPI", "UrdfGeometryMeshAPI"]
        prepend references = @./target/meshes/usd/Target.usda@</Target>
    )
    {
        rel material:binding = </target/Target/Materials/M_Target>
        rel mujoco:geom:material = </mujoco/asset/materials/M_Target>
        rel mujoco:geom:mesh = </mujoco/asset/meshes/Target>
        point3f mujoco:geom:pos = (0, 0, 0)
        quatf mujoco:geom:quat = (1, 0, 0, 0)
        vector3f mujoco:geom:size = (1, 1, 1)
        uniform token mujoco:geom:type = "mesh"
        asset urdf:geometry:mesh:filename = @./target/meshes/obj/Target.obj@
        float3 urdf:geometry:mesh:scale = (1, 1, 1)
        float3 urdf:visual:origin:rpy = (0, 0, 0)
        point3f urdf:visual:origin:xyz = (0, 0, 0)

        def Scope "Materials"
        {
            def Material "M_Target" (
                prepend references = @./target/materials/usd/M_Target.usda@</M_Target>
            )
            {
            }
        }
    }

    def Mesh "Target_001" (
        prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "MujocoGeomAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI"]
        prepend references = @./target/meshes/usd/Target_001.usda@</Target_001>
    )
    {
        rel mujoco:geom:mesh = </mujoco/asset/meshes/Target_001>
        point3f mujoco:geom:pos = (0, 0, 0)
        quatf mujoco:geom:quat = (1, 0, 0, 0)
        vector3f mujoco:geom:size = (1, 1, 1)
        uniform token mujoco:geom:type = "mesh"
        uniform token physics:approximation = "convexHull"
        bool physics:collisionEnabled = 1
        float[] primvars:displayOpacity = [0]
        float3 urdf:collision:origin:rpy = (0, 0, 0)
        point3f urdf:collision:origin:xyz = (0, 0, 0)
        asset urdf:geometry:mesh:filename = @./target/meshes/stl/Target_001.stl@
        float3 urdf:geometry:mesh:scale = (1, 1, 1)
        token visibility = "invisible"
    }
}

def Mujoco "mujoco"
{
    string mujoco:model = "target"

    def MujocoAsset "asset"
    {
        def MujocoMesh "meshes"
        {
            def MujocoMesh "Target"
            {
                asset mujoco:mesh:file = @target/meshes/obj/Target.obj@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "Target_001"
            {
                asset mujoco:mesh:file = @target/meshes/stl/Target_001.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }
        }

        def MujocoMaterial "materials"
        {
            def MujocoMaterial "M_Target"
            {
                rel mujoco:material:texture = </mujoco/asset/textures/T_Target>
            }
        }

        def MujocoTexture "textures"
        {
            def MujocoTexture "T_Target"
            {
                asset mujoco:texture:file = @T_Target.png@
                string mujoco:texture:type = "2d"
            }
        }
    }

    def MujocoEquality "equality"
    {
    }
}

def Urdf "urdf"
{
    string urdf:name = "target"
}

