#usda 1.0
(
    defaultPrim = "bread_1"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "bread_1" (
    prepend apiSchemas = ["MujocoBodyAPI"]
)
{
    point3f mujoco:body:pos = (0, 0, 0)
    quatf mujoco:body:quat = (1, 0, 0, 0)

    def Xform "bread1" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (0.0021757064, 0.0043991706, 0.005231454)
        float mujoco:body:inertial:mass = 0.8408675
        point3f mujoco:body:inertial:pos = (-0.00008599998, -0.0007341865, 0.0015975992)
        quatf mujoco:body:inertial:quat = (-0.7009055, 0.7131763, 0.006410055, 0.0083637005)
        point3f mujoco:body:pos = (0, 0, 0)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        point3f physics:centerOfMass = (-0.00008599998, -0.0007341865, 0.0015975992)
        float3 physics:diagonalInertia = (0.0021757064, 0.0043991706, 0.005231454)
        float physics:mass = 0.8408675
        quatf physics:principalAxes = (-0.7009055, 0.7131763, 0.006410055, 0.0083637005)
        bool physics:rigidBodyEnabled = 1
        float urdf:link:inertial:inertia:ixx = 0.0021757064
        float urdf:link:inertial:inertia:iyy = 0.0043991706
        float urdf:link:inertial:inertia:izz = 0.005231454
        float urdf:link:inertial:mass = 0.8408675
        float3 urdf:link:inertial:origin:rpy = (-1.588124, -0.020916797, -0.0025818965)
        point3f urdf:link:inertial:origin:xyz = (-0.00008599998, -0.0007341865, 0.0015975992)

        def Mesh "Bread1" (
            prepend apiSchemas = ["MaterialBindingAPI", "UrdfLinkVisualAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./bread_1/meshes/usd/Bread1.usda@</Bread1>
        )
        {
            rel material:binding = </bread_1/bread1/Bread1/Materials/M_Bread1>
            rel mujoco:geom:material = </mujoco/asset/materials/M_Bread1>
            rel mujoco:geom:mesh = </mujoco/asset/meshes/Bread1>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            asset urdf:geometry:mesh:filename = @./bread_1/meshes/obj/Bread1.obj@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            float3 urdf:visual:origin:rpy = (0, 0, 0)
            point3f urdf:visual:origin:xyz = (0, 0, 0)

            def Scope "Materials"
            {
                def Material "M_Bread1" (
                    prepend references = @./bread_1/materials/usd/M_Bread1.usda@</M_Bread1>
                )
                {
                }
            }
        }

        def Mesh "Bread1_001" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./bread_1/meshes/usd/Bread1_001.usda@</Bread1_001>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/Bread1_001>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./bread_1/meshes/stl/Bread1_001.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "Bread1_002" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./bread_1/meshes/usd/Bread1_002.usda@</Bread1_002>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/Bread1_002>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./bread_1/meshes/stl/Bread1_002.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "Bread1_003" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./bread_1/meshes/usd/Bread1_003.usda@</Bread1_003>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/Bread1_003>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./bread_1/meshes/stl/Bread1_003.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "Bread1_004" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./bread_1/meshes/usd/Bread1_004.usda@</Bread1_004>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/Bread1_004>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./bread_1/meshes/stl/Bread1_004.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "Bread1_005" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./bread_1/meshes/usd/Bread1_005.usda@</Bread1_005>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/Bread1_005>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./bread_1/meshes/stl/Bread1_005.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "Bread1_006" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./bread_1/meshes/usd/Bread1_006.usda@</Bread1_006>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/Bread1_006>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./bread_1/meshes/stl/Bread1_006.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }
    }
}

def Urdf "urdf"
{
    string urdf:name = "bread_1"
}

def Mujoco "mujoco"
{
    string mujoco:model = "bread_1"

    def MujocoAsset "asset"
    {
        def MujocoMesh "meshes"
        {
            def MujocoMesh "Bread1"
            {
                asset mujoco:mesh:file = @bread_1/meshes/obj/Bread1.obj@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "Bread1_001"
            {
                asset mujoco:mesh:file = @bread_1/meshes/stl/Bread1_001.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "Bread1_002"
            {
                asset mujoco:mesh:file = @bread_1/meshes/stl/Bread1_002.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "Bread1_003"
            {
                asset mujoco:mesh:file = @bread_1/meshes/stl/Bread1_003.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "Bread1_004"
            {
                asset mujoco:mesh:file = @bread_1/meshes/stl/Bread1_004.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "Bread1_005"
            {
                asset mujoco:mesh:file = @bread_1/meshes/stl/Bread1_005.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "Bread1_006"
            {
                asset mujoco:mesh:file = @bread_1/meshes/stl/Bread1_006.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }
        }

        def MujocoMaterial "materials"
        {
            def MujocoMaterial "M_Bread1"
            {
                rel mujoco:material:texture = </mujoco/asset/textures/T_Bread1>
            }
        }

        def MujocoTexture "textures"
        {
            def MujocoTexture "T_Bread1"
            {
                asset mujoco:texture:file = @T_Bread1.png@
                string mujoco:texture:type = "2d"
            }
        }
    }

    def MujocoEquality "equality"
    {
    }
}

