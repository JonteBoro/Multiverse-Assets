#usda 1.0
(
    defaultPrim = "cheese"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "cheese" (
    prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
)
{
    float3 mujoco:body:inertial:diaginertia = (0.00021558408, 0.00046009436, 0.00049860845)
    float mujoco:body:inertial:mass = 0.36914495
    point3f mujoco:body:inertial:pos = (-7.395008e-7, 0.017372359, 0.00000813102)
    quatf mujoco:body:inertial:quat = (0.0015359084, 0.70766205, 0.7065489, 0.00083500624)
    point3f mujoco:body:pos = (0, 0, 0)
    quatf mujoco:body:quat = (1, 0, 0, 0)
    point3f physics:centerOfMass = (-7.395008e-7, 0.017372359, 0.00000813102)
    float3 physics:diagonalInertia = (0.00021558408, 0.00046009436, 0.00049860845)
    float physics:mass = 0.36914495
    quatf physics:principalAxes = (0.0015359084, 0.70766205, 0.7065489, 0.00083500624)
    bool physics:rigidBodyEnabled = 1
    float urdf:link:inertial:inertia:ixx = 0.00021558408
    float urdf:link:inertial:inertia:iyy = 0.00046009436
    float urdf:link:inertial:inertia:izz = 0.00049860845
    float urdf:link:inertial:mass = 0.36914495
    float3 urdf:link:inertial:origin:rpy = (3.138239, 0.0009885846, 1.5692204)
    point3f urdf:link:inertial:origin:xyz = (-7.395008e-7, 0.017372359, 0.00000813102)

    def Mesh "Cheese" (
        prepend apiSchemas = ["MaterialBindingAPI", "UrdfLinkVisualAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
        prepend references = @./cheese/meshes/usd/Cheese.usda@</Cheese>
    )
    {
        rel material:binding = </cheese/Cheese/Materials/M_Cheese>
        rel mujoco:geom:material = </mujoco/asset/materials/M_Cheese>
        rel mujoco:geom:mesh = </mujoco/asset/meshes/Cheese>
        point3f mujoco:geom:pos = (0, 0, 0)
        quatf mujoco:geom:quat = (1, 0, 0, 0)
        vector3f mujoco:geom:size = (1, 1, 1)
        uniform token mujoco:geom:type = "mesh"
        asset urdf:geometry:mesh:filename = @./cheese/meshes/obj/Cheese.obj@
        float3 urdf:geometry:mesh:scale = (1, 1, 1)
        float3 urdf:visual:origin:rpy = (0, 0, 0)
        point3f urdf:visual:origin:xyz = (0, 0, 0)

        def Scope "Materials"
        {
            def Material "M_Cheese" (
                prepend references = @./cheese/materials/usd/M_Cheese.usda@</M_Cheese>
            )
            {
            }
        }
    }

    def Mesh "Cheese_001" (
        prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
        prepend references = @./cheese/meshes/usd/Cheese_001.usda@</Cheese_001>
    )
    {
        rel mujoco:geom:mesh = </mujoco/asset/meshes/Cheese_001>
        point3f mujoco:geom:pos = (0, 0, 0)
        quatf mujoco:geom:quat = (1, 0, 0, 0)
        vector3f mujoco:geom:size = (1, 1, 1)
        uniform token mujoco:geom:type = "mesh"
        uniform token physics:approximation = "convexHull"
        bool physics:collisionEnabled = 1
        float[] primvars:displayOpacity = [0]
        float3 urdf:collision:origin:rpy = (0, 0, 0)
        point3f urdf:collision:origin:xyz = (0, 0, 0)
        asset urdf:geometry:mesh:filename = @./cheese/meshes/stl/Cheese_001.stl@
        float3 urdf:geometry:mesh:scale = (1, 1, 1)
        token visibility = "invisible"
    }

    def Mesh "Cheese_002" (
        prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
        prepend references = @./cheese/meshes/usd/Cheese_002.usda@</Cheese_002>
    )
    {
        rel mujoco:geom:mesh = </mujoco/asset/meshes/Cheese_002>
        point3f mujoco:geom:pos = (0, 0, 0)
        quatf mujoco:geom:quat = (1, 0, 0, 0)
        vector3f mujoco:geom:size = (1, 1, 1)
        uniform token mujoco:geom:type = "mesh"
        uniform token physics:approximation = "convexHull"
        bool physics:collisionEnabled = 1
        float[] primvars:displayOpacity = [0]
        float3 urdf:collision:origin:rpy = (0, 0, 0)
        point3f urdf:collision:origin:xyz = (0, 0, 0)
        asset urdf:geometry:mesh:filename = @./cheese/meshes/stl/Cheese_002.stl@
        float3 urdf:geometry:mesh:scale = (1, 1, 1)
        token visibility = "invisible"
    }

    def Mesh "Cheese_003" (
        prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
        prepend references = @./cheese/meshes/usd/Cheese_003.usda@</Cheese_003>
    )
    {
        rel mujoco:geom:mesh = </mujoco/asset/meshes/Cheese_003>
        point3f mujoco:geom:pos = (0, 0, 0)
        quatf mujoco:geom:quat = (1, 0, 0, 0)
        vector3f mujoco:geom:size = (1, 1, 1)
        uniform token mujoco:geom:type = "mesh"
        uniform token physics:approximation = "convexHull"
        bool physics:collisionEnabled = 1
        float[] primvars:displayOpacity = [0]
        float3 urdf:collision:origin:rpy = (0, 0, 0)
        point3f urdf:collision:origin:xyz = (0, 0, 0)
        asset urdf:geometry:mesh:filename = @./cheese/meshes/stl/Cheese_003.stl@
        float3 urdf:geometry:mesh:scale = (1, 1, 1)
        token visibility = "invisible"
    }

    def Mesh "Cheese_004" (
        prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
        prepend references = @./cheese/meshes/usd/Cheese_004.usda@</Cheese_004>
    )
    {
        rel mujoco:geom:mesh = </mujoco/asset/meshes/Cheese_004>
        point3f mujoco:geom:pos = (0, 0, 0)
        quatf mujoco:geom:quat = (1, 0, 0, 0)
        vector3f mujoco:geom:size = (1, 1, 1)
        uniform token mujoco:geom:type = "mesh"
        uniform token physics:approximation = "convexHull"
        bool physics:collisionEnabled = 1
        float[] primvars:displayOpacity = [0]
        float3 urdf:collision:origin:rpy = (0, 0, 0)
        point3f urdf:collision:origin:xyz = (0, 0, 0)
        asset urdf:geometry:mesh:filename = @./cheese/meshes/stl/Cheese_004.stl@
        float3 urdf:geometry:mesh:scale = (1, 1, 1)
        token visibility = "invisible"
    }

    def Mesh "Cheese_005" (
        prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
        prepend references = @./cheese/meshes/usd/Cheese_005.usda@</Cheese_005>
    )
    {
        rel mujoco:geom:mesh = </mujoco/asset/meshes/Cheese_005>
        point3f mujoco:geom:pos = (0, 0, 0)
        quatf mujoco:geom:quat = (1, 0, 0, 0)
        vector3f mujoco:geom:size = (1, 1, 1)
        uniform token mujoco:geom:type = "mesh"
        uniform token physics:approximation = "convexHull"
        bool physics:collisionEnabled = 1
        float[] primvars:displayOpacity = [0]
        float3 urdf:collision:origin:rpy = (0, 0, 0)
        point3f urdf:collision:origin:xyz = (0, 0, 0)
        asset urdf:geometry:mesh:filename = @./cheese/meshes/stl/Cheese_005.stl@
        float3 urdf:geometry:mesh:scale = (1, 1, 1)
        token visibility = "invisible"
    }

    def Mesh "Cheese_006" (
        prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
        prepend references = @./cheese/meshes/usd/Cheese_006.usda@</Cheese_006>
    )
    {
        rel mujoco:geom:mesh = </mujoco/asset/meshes/Cheese_006>
        point3f mujoco:geom:pos = (0, 0, 0)
        quatf mujoco:geom:quat = (1, 0, 0, 0)
        vector3f mujoco:geom:size = (1, 1, 1)
        uniform token mujoco:geom:type = "mesh"
        uniform token physics:approximation = "convexHull"
        bool physics:collisionEnabled = 1
        float[] primvars:displayOpacity = [0]
        float3 urdf:collision:origin:rpy = (0, 0, 0)
        point3f urdf:collision:origin:xyz = (0, 0, 0)
        asset urdf:geometry:mesh:filename = @./cheese/meshes/stl/Cheese_006.stl@
        float3 urdf:geometry:mesh:scale = (1, 1, 1)
        token visibility = "invisible"
    }

    def Mesh "Cheese_007" (
        prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
        prepend references = @./cheese/meshes/usd/Cheese_007.usda@</Cheese_007>
    )
    {
        rel mujoco:geom:mesh = </mujoco/asset/meshes/Cheese_007>
        point3f mujoco:geom:pos = (0, 0, 0)
        quatf mujoco:geom:quat = (1, 0, 0, 0)
        vector3f mujoco:geom:size = (1, 1, 1)
        uniform token mujoco:geom:type = "mesh"
        uniform token physics:approximation = "convexHull"
        bool physics:collisionEnabled = 1
        float[] primvars:displayOpacity = [0]
        float3 urdf:collision:origin:rpy = (0, 0, 0)
        point3f urdf:collision:origin:xyz = (0, 0, 0)
        asset urdf:geometry:mesh:filename = @./cheese/meshes/stl/Cheese_007.stl@
        float3 urdf:geometry:mesh:scale = (1, 1, 1)
        token visibility = "invisible"
    }

    def Mesh "Cheese_008" (
        prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
        prepend references = @./cheese/meshes/usd/Cheese_008.usda@</Cheese_008>
    )
    {
        rel mujoco:geom:mesh = </mujoco/asset/meshes/Cheese_008>
        point3f mujoco:geom:pos = (0, 0, 0)
        quatf mujoco:geom:quat = (1, 0, 0, 0)
        vector3f mujoco:geom:size = (1, 1, 1)
        uniform token mujoco:geom:type = "mesh"
        uniform token physics:approximation = "convexHull"
        bool physics:collisionEnabled = 1
        float[] primvars:displayOpacity = [0]
        float3 urdf:collision:origin:rpy = (0, 0, 0)
        point3f urdf:collision:origin:xyz = (0, 0, 0)
        asset urdf:geometry:mesh:filename = @./cheese/meshes/stl/Cheese_008.stl@
        float3 urdf:geometry:mesh:scale = (1, 1, 1)
        token visibility = "invisible"
    }

    def Mesh "Cheese_009" (
        prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
        prepend references = @./cheese/meshes/usd/Cheese_009.usda@</Cheese_009>
    )
    {
        rel mujoco:geom:mesh = </mujoco/asset/meshes/Cheese_009>
        point3f mujoco:geom:pos = (0, 0, 0)
        quatf mujoco:geom:quat = (1, 0, 0, 0)
        vector3f mujoco:geom:size = (1, 1, 1)
        uniform token mujoco:geom:type = "mesh"
        uniform token physics:approximation = "convexHull"
        bool physics:collisionEnabled = 1
        float[] primvars:displayOpacity = [0]
        float3 urdf:collision:origin:rpy = (0, 0, 0)
        point3f urdf:collision:origin:xyz = (0, 0, 0)
        asset urdf:geometry:mesh:filename = @./cheese/meshes/stl/Cheese_009.stl@
        float3 urdf:geometry:mesh:scale = (1, 1, 1)
        token visibility = "invisible"
    }

    def Mesh "Cheese_010" (
        prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
        prepend references = @./cheese/meshes/usd/Cheese_010.usda@</Cheese_010>
    )
    {
        rel mujoco:geom:mesh = </mujoco/asset/meshes/Cheese_010>
        point3f mujoco:geom:pos = (0, 0, 0)
        quatf mujoco:geom:quat = (1, 0, 0, 0)
        vector3f mujoco:geom:size = (1, 1, 1)
        uniform token mujoco:geom:type = "mesh"
        uniform token physics:approximation = "convexHull"
        bool physics:collisionEnabled = 1
        float[] primvars:displayOpacity = [0]
        float3 urdf:collision:origin:rpy = (0, 0, 0)
        point3f urdf:collision:origin:xyz = (0, 0, 0)
        asset urdf:geometry:mesh:filename = @./cheese/meshes/stl/Cheese_010.stl@
        float3 urdf:geometry:mesh:scale = (1, 1, 1)
        token visibility = "invisible"
    }

    def Mesh "Cheese_011" (
        prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
        prepend references = @./cheese/meshes/usd/Cheese_011.usda@</Cheese_011>
    )
    {
        rel mujoco:geom:mesh = </mujoco/asset/meshes/Cheese_011>
        point3f mujoco:geom:pos = (0, 0, 0)
        quatf mujoco:geom:quat = (1, 0, 0, 0)
        vector3f mujoco:geom:size = (1, 1, 1)
        uniform token mujoco:geom:type = "mesh"
        uniform token physics:approximation = "convexHull"
        bool physics:collisionEnabled = 1
        float[] primvars:displayOpacity = [0]
        float3 urdf:collision:origin:rpy = (0, 0, 0)
        point3f urdf:collision:origin:xyz = (0, 0, 0)
        asset urdf:geometry:mesh:filename = @./cheese/meshes/stl/Cheese_011.stl@
        float3 urdf:geometry:mesh:scale = (1, 1, 1)
        token visibility = "invisible"
    }

    def Mesh "Cheese_012" (
        prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
        prepend references = @./cheese/meshes/usd/Cheese_012.usda@</Cheese_012>
    )
    {
        rel mujoco:geom:mesh = </mujoco/asset/meshes/Cheese_012>
        point3f mujoco:geom:pos = (0, 0, 0)
        quatf mujoco:geom:quat = (1, 0, 0, 0)
        vector3f mujoco:geom:size = (1, 1, 1)
        uniform token mujoco:geom:type = "mesh"
        uniform token physics:approximation = "convexHull"
        bool physics:collisionEnabled = 1
        float[] primvars:displayOpacity = [0]
        float3 urdf:collision:origin:rpy = (0, 0, 0)
        point3f urdf:collision:origin:xyz = (0, 0, 0)
        asset urdf:geometry:mesh:filename = @./cheese/meshes/stl/Cheese_012.stl@
        float3 urdf:geometry:mesh:scale = (1, 1, 1)
        token visibility = "invisible"
    }

    def Mesh "Cheese_013" (
        prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
        prepend references = @./cheese/meshes/usd/Cheese_013.usda@</Cheese_013>
    )
    {
        rel mujoco:geom:mesh = </mujoco/asset/meshes/Cheese_013>
        point3f mujoco:geom:pos = (0, 0, 0)
        quatf mujoco:geom:quat = (1, 0, 0, 0)
        vector3f mujoco:geom:size = (1, 1, 1)
        uniform token mujoco:geom:type = "mesh"
        uniform token physics:approximation = "convexHull"
        bool physics:collisionEnabled = 1
        float[] primvars:displayOpacity = [0]
        float3 urdf:collision:origin:rpy = (0, 0, 0)
        point3f urdf:collision:origin:xyz = (0, 0, 0)
        asset urdf:geometry:mesh:filename = @./cheese/meshes/stl/Cheese_013.stl@
        float3 urdf:geometry:mesh:scale = (1, 1, 1)
        token visibility = "invisible"
    }

    def Mesh "Cheese_014" (
        prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
        prepend references = @./cheese/meshes/usd/Cheese_014.usda@</Cheese_014>
    )
    {
        rel mujoco:geom:mesh = </mujoco/asset/meshes/Cheese_014>
        point3f mujoco:geom:pos = (0, 0, 0)
        quatf mujoco:geom:quat = (1, 0, 0, 0)
        vector3f mujoco:geom:size = (1, 1, 1)
        uniform token mujoco:geom:type = "mesh"
        uniform token physics:approximation = "convexHull"
        bool physics:collisionEnabled = 1
        float[] primvars:displayOpacity = [0]
        float3 urdf:collision:origin:rpy = (0, 0, 0)
        point3f urdf:collision:origin:xyz = (0, 0, 0)
        asset urdf:geometry:mesh:filename = @./cheese/meshes/stl/Cheese_014.stl@
        float3 urdf:geometry:mesh:scale = (1, 1, 1)
        token visibility = "invisible"
    }

    def Mesh "Cheese_015" (
        prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
        prepend references = @./cheese/meshes/usd/Cheese_015.usda@</Cheese_015>
    )
    {
        rel mujoco:geom:mesh = </mujoco/asset/meshes/Cheese_015>
        point3f mujoco:geom:pos = (0, 0, 0)
        quatf mujoco:geom:quat = (1, 0, 0, 0)
        vector3f mujoco:geom:size = (1, 1, 1)
        uniform token mujoco:geom:type = "mesh"
        uniform token physics:approximation = "convexHull"
        bool physics:collisionEnabled = 1
        float[] primvars:displayOpacity = [0]
        float3 urdf:collision:origin:rpy = (0, 0, 0)
        point3f urdf:collision:origin:xyz = (0, 0, 0)
        asset urdf:geometry:mesh:filename = @./cheese/meshes/stl/Cheese_015.stl@
        float3 urdf:geometry:mesh:scale = (1, 1, 1)
        token visibility = "invisible"
    }

    def Mesh "Cheese_016" (
        prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
        prepend references = @./cheese/meshes/usd/Cheese_016.usda@</Cheese_016>
    )
    {
        rel mujoco:geom:mesh = </mujoco/asset/meshes/Cheese_016>
        point3f mujoco:geom:pos = (0, 0, 0)
        quatf mujoco:geom:quat = (1, 0, 0, 0)
        vector3f mujoco:geom:size = (1, 1, 1)
        uniform token mujoco:geom:type = "mesh"
        uniform token physics:approximation = "convexHull"
        bool physics:collisionEnabled = 1
        float[] primvars:displayOpacity = [0]
        float3 urdf:collision:origin:rpy = (0, 0, 0)
        point3f urdf:collision:origin:xyz = (0, 0, 0)
        asset urdf:geometry:mesh:filename = @./cheese/meshes/stl/Cheese_016.stl@
        float3 urdf:geometry:mesh:scale = (1, 1, 1)
        token visibility = "invisible"
    }

    def Mesh "Cheese_017" (
        prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
        prepend references = @./cheese/meshes/usd/Cheese_017.usda@</Cheese_017>
    )
    {
        rel mujoco:geom:mesh = </mujoco/asset/meshes/Cheese_017>
        point3f mujoco:geom:pos = (0, 0, 0)
        quatf mujoco:geom:quat = (1, 0, 0, 0)
        vector3f mujoco:geom:size = (1, 1, 1)
        uniform token mujoco:geom:type = "mesh"
        uniform token physics:approximation = "convexHull"
        bool physics:collisionEnabled = 1
        float[] primvars:displayOpacity = [0]
        float3 urdf:collision:origin:rpy = (0, 0, 0)
        point3f urdf:collision:origin:xyz = (0, 0, 0)
        asset urdf:geometry:mesh:filename = @./cheese/meshes/stl/Cheese_017.stl@
        float3 urdf:geometry:mesh:scale = (1, 1, 1)
        token visibility = "invisible"
    }

    def Mesh "Cheese_018" (
        prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
        prepend references = @./cheese/meshes/usd/Cheese_018.usda@</Cheese_018>
    )
    {
        rel mujoco:geom:mesh = </mujoco/asset/meshes/Cheese_018>
        point3f mujoco:geom:pos = (0, 0, 0)
        quatf mujoco:geom:quat = (1, 0, 0, 0)
        vector3f mujoco:geom:size = (1, 1, 1)
        uniform token mujoco:geom:type = "mesh"
        uniform token physics:approximation = "convexHull"
        bool physics:collisionEnabled = 1
        float[] primvars:displayOpacity = [0]
        float3 urdf:collision:origin:rpy = (0, 0, 0)
        point3f urdf:collision:origin:xyz = (0, 0, 0)
        asset urdf:geometry:mesh:filename = @./cheese/meshes/stl/Cheese_018.stl@
        float3 urdf:geometry:mesh:scale = (1, 1, 1)
        token visibility = "invisible"
    }

    def Mesh "Cheese_019" (
        prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
        prepend references = @./cheese/meshes/usd/Cheese_019.usda@</Cheese_019>
    )
    {
        rel mujoco:geom:mesh = </mujoco/asset/meshes/Cheese_019>
        point3f mujoco:geom:pos = (0, 0, 0)
        quatf mujoco:geom:quat = (1, 0, 0, 0)
        vector3f mujoco:geom:size = (1, 1, 1)
        uniform token mujoco:geom:type = "mesh"
        uniform token physics:approximation = "convexHull"
        bool physics:collisionEnabled = 1
        float[] primvars:displayOpacity = [0]
        float3 urdf:collision:origin:rpy = (0, 0, 0)
        point3f urdf:collision:origin:xyz = (0, 0, 0)
        asset urdf:geometry:mesh:filename = @./cheese/meshes/stl/Cheese_019.stl@
        float3 urdf:geometry:mesh:scale = (1, 1, 1)
        token visibility = "invisible"
    }

    def Mesh "Cheese_020" (
        prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
        prepend references = @./cheese/meshes/usd/Cheese_020.usda@</Cheese_020>
    )
    {
        rel mujoco:geom:mesh = </mujoco/asset/meshes/Cheese_020>
        point3f mujoco:geom:pos = (0, 0, 0)
        quatf mujoco:geom:quat = (1, 0, 0, 0)
        vector3f mujoco:geom:size = (1, 1, 1)
        uniform token mujoco:geom:type = "mesh"
        uniform token physics:approximation = "convexHull"
        bool physics:collisionEnabled = 1
        float[] primvars:displayOpacity = [0]
        float3 urdf:collision:origin:rpy = (0, 0, 0)
        point3f urdf:collision:origin:xyz = (0, 0, 0)
        asset urdf:geometry:mesh:filename = @./cheese/meshes/stl/Cheese_020.stl@
        float3 urdf:geometry:mesh:scale = (1, 1, 1)
        token visibility = "invisible"
    }

    def Mesh "Cheese_021" (
        prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
        prepend references = @./cheese/meshes/usd/Cheese_021.usda@</Cheese_021>
    )
    {
        rel mujoco:geom:mesh = </mujoco/asset/meshes/Cheese_021>
        point3f mujoco:geom:pos = (0, 0, 0)
        quatf mujoco:geom:quat = (1, 0, 0, 0)
        vector3f mujoco:geom:size = (1, 1, 1)
        uniform token mujoco:geom:type = "mesh"
        uniform token physics:approximation = "convexHull"
        bool physics:collisionEnabled = 1
        float[] primvars:displayOpacity = [0]
        float3 urdf:collision:origin:rpy = (0, 0, 0)
        point3f urdf:collision:origin:xyz = (0, 0, 0)
        asset urdf:geometry:mesh:filename = @./cheese/meshes/stl/Cheese_021.stl@
        float3 urdf:geometry:mesh:scale = (1, 1, 1)
        token visibility = "invisible"
    }

    def Mesh "Cheese_022" (
        prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
        prepend references = @./cheese/meshes/usd/Cheese_022.usda@</Cheese_022>
    )
    {
        rel mujoco:geom:mesh = </mujoco/asset/meshes/Cheese_022>
        point3f mujoco:geom:pos = (0, 0, 0)
        quatf mujoco:geom:quat = (1, 0, 0, 0)
        vector3f mujoco:geom:size = (1, 1, 1)
        uniform token mujoco:geom:type = "mesh"
        uniform token physics:approximation = "convexHull"
        bool physics:collisionEnabled = 1
        float[] primvars:displayOpacity = [0]
        float3 urdf:collision:origin:rpy = (0, 0, 0)
        point3f urdf:collision:origin:xyz = (0, 0, 0)
        asset urdf:geometry:mesh:filename = @./cheese/meshes/stl/Cheese_022.stl@
        float3 urdf:geometry:mesh:scale = (1, 1, 1)
        token visibility = "invisible"
    }

    def Mesh "Cheese_023" (
        prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
        prepend references = @./cheese/meshes/usd/Cheese_023.usda@</Cheese_023>
    )
    {
        rel mujoco:geom:mesh = </mujoco/asset/meshes/Cheese_023>
        point3f mujoco:geom:pos = (0, 0, 0)
        quatf mujoco:geom:quat = (1, 0, 0, 0)
        vector3f mujoco:geom:size = (1, 1, 1)
        uniform token mujoco:geom:type = "mesh"
        uniform token physics:approximation = "convexHull"
        bool physics:collisionEnabled = 1
        float[] primvars:displayOpacity = [0]
        float3 urdf:collision:origin:rpy = (0, 0, 0)
        point3f urdf:collision:origin:xyz = (0, 0, 0)
        asset urdf:geometry:mesh:filename = @./cheese/meshes/stl/Cheese_023.stl@
        float3 urdf:geometry:mesh:scale = (1, 1, 1)
        token visibility = "invisible"
    }

    def Mesh "Cheese_024" (
        prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
        prepend references = @./cheese/meshes/usd/Cheese_024.usda@</Cheese_024>
    )
    {
        rel mujoco:geom:mesh = </mujoco/asset/meshes/Cheese_024>
        point3f mujoco:geom:pos = (0, 0, 0)
        quatf mujoco:geom:quat = (1, 0, 0, 0)
        vector3f mujoco:geom:size = (1, 1, 1)
        uniform token mujoco:geom:type = "mesh"
        uniform token physics:approximation = "convexHull"
        bool physics:collisionEnabled = 1
        float[] primvars:displayOpacity = [0]
        float3 urdf:collision:origin:rpy = (0, 0, 0)
        point3f urdf:collision:origin:xyz = (0, 0, 0)
        asset urdf:geometry:mesh:filename = @./cheese/meshes/stl/Cheese_024.stl@
        float3 urdf:geometry:mesh:scale = (1, 1, 1)
        token visibility = "invisible"
    }

    def Mesh "Cheese_025" (
        prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
        prepend references = @./cheese/meshes/usd/Cheese_025.usda@</Cheese_025>
    )
    {
        rel mujoco:geom:mesh = </mujoco/asset/meshes/Cheese_025>
        point3f mujoco:geom:pos = (0, 0, 0)
        quatf mujoco:geom:quat = (1, 0, 0, 0)
        vector3f mujoco:geom:size = (1, 1, 1)
        uniform token mujoco:geom:type = "mesh"
        uniform token physics:approximation = "convexHull"
        bool physics:collisionEnabled = 1
        float[] primvars:displayOpacity = [0]
        float3 urdf:collision:origin:rpy = (0, 0, 0)
        point3f urdf:collision:origin:xyz = (0, 0, 0)
        asset urdf:geometry:mesh:filename = @./cheese/meshes/stl/Cheese_025.stl@
        float3 urdf:geometry:mesh:scale = (1, 1, 1)
        token visibility = "invisible"
    }

    def Mesh "Cheese_026" (
        prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
        prepend references = @./cheese/meshes/usd/Cheese_026.usda@</Cheese_026>
    )
    {
        rel mujoco:geom:mesh = </mujoco/asset/meshes/Cheese_026>
        point3f mujoco:geom:pos = (0, 0, 0)
        quatf mujoco:geom:quat = (1, 0, 0, 0)
        vector3f mujoco:geom:size = (1, 1, 1)
        uniform token mujoco:geom:type = "mesh"
        uniform token physics:approximation = "convexHull"
        bool physics:collisionEnabled = 1
        float[] primvars:displayOpacity = [0]
        float3 urdf:collision:origin:rpy = (0, 0, 0)
        point3f urdf:collision:origin:xyz = (0, 0, 0)
        asset urdf:geometry:mesh:filename = @./cheese/meshes/stl/Cheese_026.stl@
        float3 urdf:geometry:mesh:scale = (1, 1, 1)
        token visibility = "invisible"
    }

    def Mesh "Cheese_027" (
        prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
        prepend references = @./cheese/meshes/usd/Cheese_027.usda@</Cheese_027>
    )
    {
        rel mujoco:geom:mesh = </mujoco/asset/meshes/Cheese_027>
        point3f mujoco:geom:pos = (0, 0, 0)
        quatf mujoco:geom:quat = (1, 0, 0, 0)
        vector3f mujoco:geom:size = (1, 1, 1)
        uniform token mujoco:geom:type = "mesh"
        uniform token physics:approximation = "convexHull"
        bool physics:collisionEnabled = 1
        float[] primvars:displayOpacity = [0]
        float3 urdf:collision:origin:rpy = (0, 0, 0)
        point3f urdf:collision:origin:xyz = (0, 0, 0)
        asset urdf:geometry:mesh:filename = @./cheese/meshes/stl/Cheese_027.stl@
        float3 urdf:geometry:mesh:scale = (1, 1, 1)
        token visibility = "invisible"
    }

    def Mesh "Cheese_028" (
        prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
        prepend references = @./cheese/meshes/usd/Cheese_028.usda@</Cheese_028>
    )
    {
        rel mujoco:geom:mesh = </mujoco/asset/meshes/Cheese_028>
        point3f mujoco:geom:pos = (0, 0, 0)
        quatf mujoco:geom:quat = (1, 0, 0, 0)
        vector3f mujoco:geom:size = (1, 1, 1)
        uniform token mujoco:geom:type = "mesh"
        uniform token physics:approximation = "convexHull"
        bool physics:collisionEnabled = 1
        float[] primvars:displayOpacity = [0]
        float3 urdf:collision:origin:rpy = (0, 0, 0)
        point3f urdf:collision:origin:xyz = (0, 0, 0)
        asset urdf:geometry:mesh:filename = @./cheese/meshes/stl/Cheese_028.stl@
        float3 urdf:geometry:mesh:scale = (1, 1, 1)
        token visibility = "invisible"
    }

    def Mesh "Cheese_029" (
        prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
        prepend references = @./cheese/meshes/usd/Cheese_029.usda@</Cheese_029>
    )
    {
        rel mujoco:geom:mesh = </mujoco/asset/meshes/Cheese_029>
        point3f mujoco:geom:pos = (0, 0, 0)
        quatf mujoco:geom:quat = (1, 0, 0, 0)
        vector3f mujoco:geom:size = (1, 1, 1)
        uniform token mujoco:geom:type = "mesh"
        uniform token physics:approximation = "convexHull"
        bool physics:collisionEnabled = 1
        float[] primvars:displayOpacity = [0]
        float3 urdf:collision:origin:rpy = (0, 0, 0)
        point3f urdf:collision:origin:xyz = (0, 0, 0)
        asset urdf:geometry:mesh:filename = @./cheese/meshes/stl/Cheese_029.stl@
        float3 urdf:geometry:mesh:scale = (1, 1, 1)
        token visibility = "invisible"
    }

    def Mesh "Cheese_030" (
        prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
        prepend references = @./cheese/meshes/usd/Cheese_030.usda@</Cheese_030>
    )
    {
        rel mujoco:geom:mesh = </mujoco/asset/meshes/Cheese_030>
        point3f mujoco:geom:pos = (0, 0, 0)
        quatf mujoco:geom:quat = (1, 0, 0, 0)
        vector3f mujoco:geom:size = (1, 1, 1)
        uniform token mujoco:geom:type = "mesh"
        uniform token physics:approximation = "convexHull"
        bool physics:collisionEnabled = 1
        float[] primvars:displayOpacity = [0]
        float3 urdf:collision:origin:rpy = (0, 0, 0)
        point3f urdf:collision:origin:xyz = (0, 0, 0)
        asset urdf:geometry:mesh:filename = @./cheese/meshes/stl/Cheese_030.stl@
        float3 urdf:geometry:mesh:scale = (1, 1, 1)
        token visibility = "invisible"
    }

    def Mesh "Cheese_031" (
        prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
        prepend references = @./cheese/meshes/usd/Cheese_031.usda@</Cheese_031>
    )
    {
        rel mujoco:geom:mesh = </mujoco/asset/meshes/Cheese_031>
        point3f mujoco:geom:pos = (0, 0, 0)
        quatf mujoco:geom:quat = (1, 0, 0, 0)
        vector3f mujoco:geom:size = (1, 1, 1)
        uniform token mujoco:geom:type = "mesh"
        uniform token physics:approximation = "convexHull"
        bool physics:collisionEnabled = 1
        float[] primvars:displayOpacity = [0]
        float3 urdf:collision:origin:rpy = (0, 0, 0)
        point3f urdf:collision:origin:xyz = (0, 0, 0)
        asset urdf:geometry:mesh:filename = @./cheese/meshes/stl/Cheese_031.stl@
        float3 urdf:geometry:mesh:scale = (1, 1, 1)
        token visibility = "invisible"
    }

    def Mesh "Cheese_032" (
        prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
        prepend references = @./cheese/meshes/usd/Cheese_032.usda@</Cheese_032>
    )
    {
        rel mujoco:geom:mesh = </mujoco/asset/meshes/Cheese_032>
        point3f mujoco:geom:pos = (0, 0, 0)
        quatf mujoco:geom:quat = (1, 0, 0, 0)
        vector3f mujoco:geom:size = (1, 1, 1)
        uniform token mujoco:geom:type = "mesh"
        uniform token physics:approximation = "convexHull"
        bool physics:collisionEnabled = 1
        float[] primvars:displayOpacity = [0]
        float3 urdf:collision:origin:rpy = (0, 0, 0)
        point3f urdf:collision:origin:xyz = (0, 0, 0)
        asset urdf:geometry:mesh:filename = @./cheese/meshes/stl/Cheese_032.stl@
        float3 urdf:geometry:mesh:scale = (1, 1, 1)
        token visibility = "invisible"
    }

    def Mesh "Cheese_033" (
        prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
        prepend references = @./cheese/meshes/usd/Cheese_033.usda@</Cheese_033>
    )
    {
        rel mujoco:geom:mesh = </mujoco/asset/meshes/Cheese_033>
        point3f mujoco:geom:pos = (0, 0, 0)
        quatf mujoco:geom:quat = (1, 0, 0, 0)
        vector3f mujoco:geom:size = (1, 1, 1)
        uniform token mujoco:geom:type = "mesh"
        uniform token physics:approximation = "convexHull"
        bool physics:collisionEnabled = 1
        float[] primvars:displayOpacity = [0]
        float3 urdf:collision:origin:rpy = (0, 0, 0)
        point3f urdf:collision:origin:xyz = (0, 0, 0)
        asset urdf:geometry:mesh:filename = @./cheese/meshes/stl/Cheese_033.stl@
        float3 urdf:geometry:mesh:scale = (1, 1, 1)
        token visibility = "invisible"
    }

    def Mesh "Cheese_034" (
        prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
        prepend references = @./cheese/meshes/usd/Cheese_034.usda@</Cheese_034>
    )
    {
        rel mujoco:geom:mesh = </mujoco/asset/meshes/Cheese_034>
        point3f mujoco:geom:pos = (0, 0, 0)
        quatf mujoco:geom:quat = (1, 0, 0, 0)
        vector3f mujoco:geom:size = (1, 1, 1)
        uniform token mujoco:geom:type = "mesh"
        uniform token physics:approximation = "convexHull"
        bool physics:collisionEnabled = 1
        float[] primvars:displayOpacity = [0]
        float3 urdf:collision:origin:rpy = (0, 0, 0)
        point3f urdf:collision:origin:xyz = (0, 0, 0)
        asset urdf:geometry:mesh:filename = @./cheese/meshes/stl/Cheese_034.stl@
        float3 urdf:geometry:mesh:scale = (1, 1, 1)
        token visibility = "invisible"
    }

    def Mesh "Cheese_035" (
        prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
        prepend references = @./cheese/meshes/usd/Cheese_035.usda@</Cheese_035>
    )
    {
        rel mujoco:geom:mesh = </mujoco/asset/meshes/Cheese_035>
        point3f mujoco:geom:pos = (0, 0, 0)
        quatf mujoco:geom:quat = (1, 0, 0, 0)
        vector3f mujoco:geom:size = (1, 1, 1)
        uniform token mujoco:geom:type = "mesh"
        uniform token physics:approximation = "convexHull"
        bool physics:collisionEnabled = 1
        float[] primvars:displayOpacity = [0]
        float3 urdf:collision:origin:rpy = (0, 0, 0)
        point3f urdf:collision:origin:xyz = (0, 0, 0)
        asset urdf:geometry:mesh:filename = @./cheese/meshes/stl/Cheese_035.stl@
        float3 urdf:geometry:mesh:scale = (1, 1, 1)
        token visibility = "invisible"
    }

    def Mesh "Cheese_036" (
        prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
        prepend references = @./cheese/meshes/usd/Cheese_036.usda@</Cheese_036>
    )
    {
        rel mujoco:geom:mesh = </mujoco/asset/meshes/Cheese_036>
        point3f mujoco:geom:pos = (0, 0, 0)
        quatf mujoco:geom:quat = (1, 0, 0, 0)
        vector3f mujoco:geom:size = (1, 1, 1)
        uniform token mujoco:geom:type = "mesh"
        uniform token physics:approximation = "convexHull"
        bool physics:collisionEnabled = 1
        float[] primvars:displayOpacity = [0]
        float3 urdf:collision:origin:rpy = (0, 0, 0)
        point3f urdf:collision:origin:xyz = (0, 0, 0)
        asset urdf:geometry:mesh:filename = @./cheese/meshes/stl/Cheese_036.stl@
        float3 urdf:geometry:mesh:scale = (1, 1, 1)
        token visibility = "invisible"
    }

    def Mesh "Cheese_037" (
        prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
        prepend references = @./cheese/meshes/usd/Cheese_037.usda@</Cheese_037>
    )
    {
        rel mujoco:geom:mesh = </mujoco/asset/meshes/Cheese_037>
        point3f mujoco:geom:pos = (0, 0, 0)
        quatf mujoco:geom:quat = (1, 0, 0, 0)
        vector3f mujoco:geom:size = (1, 1, 1)
        uniform token mujoco:geom:type = "mesh"
        uniform token physics:approximation = "convexHull"
        bool physics:collisionEnabled = 1
        float[] primvars:displayOpacity = [0]
        float3 urdf:collision:origin:rpy = (0, 0, 0)
        point3f urdf:collision:origin:xyz = (0, 0, 0)
        asset urdf:geometry:mesh:filename = @./cheese/meshes/stl/Cheese_037.stl@
        float3 urdf:geometry:mesh:scale = (1, 1, 1)
        token visibility = "invisible"
    }

    def Mesh "Cheese_038" (
        prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
        prepend references = @./cheese/meshes/usd/Cheese_038.usda@</Cheese_038>
    )
    {
        rel mujoco:geom:mesh = </mujoco/asset/meshes/Cheese_038>
        point3f mujoco:geom:pos = (0, 0, 0)
        quatf mujoco:geom:quat = (1, 0, 0, 0)
        vector3f mujoco:geom:size = (1, 1, 1)
        uniform token mujoco:geom:type = "mesh"
        uniform token physics:approximation = "convexHull"
        bool physics:collisionEnabled = 1
        float[] primvars:displayOpacity = [0]
        float3 urdf:collision:origin:rpy = (0, 0, 0)
        point3f urdf:collision:origin:xyz = (0, 0, 0)
        asset urdf:geometry:mesh:filename = @./cheese/meshes/stl/Cheese_038.stl@
        float3 urdf:geometry:mesh:scale = (1, 1, 1)
        token visibility = "invisible"
    }

    def Mesh "Cheese_039" (
        prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
        prepend references = @./cheese/meshes/usd/Cheese_039.usda@</Cheese_039>
    )
    {
        rel mujoco:geom:mesh = </mujoco/asset/meshes/Cheese_039>
        point3f mujoco:geom:pos = (0, 0, 0)
        quatf mujoco:geom:quat = (1, 0, 0, 0)
        vector3f mujoco:geom:size = (1, 1, 1)
        uniform token mujoco:geom:type = "mesh"
        uniform token physics:approximation = "convexHull"
        bool physics:collisionEnabled = 1
        float[] primvars:displayOpacity = [0]
        float3 urdf:collision:origin:rpy = (0, 0, 0)
        point3f urdf:collision:origin:xyz = (0, 0, 0)
        asset urdf:geometry:mesh:filename = @./cheese/meshes/stl/Cheese_039.stl@
        float3 urdf:geometry:mesh:scale = (1, 1, 1)
        token visibility = "invisible"
    }

    def Mesh "Cheese_040" (
        prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
        prepend references = @./cheese/meshes/usd/Cheese_040.usda@</Cheese_040>
    )
    {
        rel mujoco:geom:mesh = </mujoco/asset/meshes/Cheese_040>
        point3f mujoco:geom:pos = (0, 0, 0)
        quatf mujoco:geom:quat = (1, 0, 0, 0)
        vector3f mujoco:geom:size = (1, 1, 1)
        uniform token mujoco:geom:type = "mesh"
        uniform token physics:approximation = "convexHull"
        bool physics:collisionEnabled = 1
        float[] primvars:displayOpacity = [0]
        float3 urdf:collision:origin:rpy = (0, 0, 0)
        point3f urdf:collision:origin:xyz = (0, 0, 0)
        asset urdf:geometry:mesh:filename = @./cheese/meshes/stl/Cheese_040.stl@
        float3 urdf:geometry:mesh:scale = (1, 1, 1)
        token visibility = "invisible"
    }

    def Mesh "Cheese_041" (
        prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
        prepend references = @./cheese/meshes/usd/Cheese_041.usda@</Cheese_041>
    )
    {
        rel mujoco:geom:mesh = </mujoco/asset/meshes/Cheese_041>
        point3f mujoco:geom:pos = (0, 0, 0)
        quatf mujoco:geom:quat = (1, 0, 0, 0)
        vector3f mujoco:geom:size = (1, 1, 1)
        uniform token mujoco:geom:type = "mesh"
        uniform token physics:approximation = "convexHull"
        bool physics:collisionEnabled = 1
        float[] primvars:displayOpacity = [0]
        float3 urdf:collision:origin:rpy = (0, 0, 0)
        point3f urdf:collision:origin:xyz = (0, 0, 0)
        asset urdf:geometry:mesh:filename = @./cheese/meshes/stl/Cheese_041.stl@
        float3 urdf:geometry:mesh:scale = (1, 1, 1)
        token visibility = "invisible"
    }

    def Mesh "Cheese_042" (
        prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
        prepend references = @./cheese/meshes/usd/Cheese_042.usda@</Cheese_042>
    )
    {
        rel mujoco:geom:mesh = </mujoco/asset/meshes/Cheese_042>
        point3f mujoco:geom:pos = (0, 0, 0)
        quatf mujoco:geom:quat = (1, 0, 0, 0)
        vector3f mujoco:geom:size = (1, 1, 1)
        uniform token mujoco:geom:type = "mesh"
        uniform token physics:approximation = "convexHull"
        bool physics:collisionEnabled = 1
        float[] primvars:displayOpacity = [0]
        float3 urdf:collision:origin:rpy = (0, 0, 0)
        point3f urdf:collision:origin:xyz = (0, 0, 0)
        asset urdf:geometry:mesh:filename = @./cheese/meshes/stl/Cheese_042.stl@
        float3 urdf:geometry:mesh:scale = (1, 1, 1)
        token visibility = "invisible"
    }

    def Mesh "Cheese_043" (
        prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
        prepend references = @./cheese/meshes/usd/Cheese_043.usda@</Cheese_043>
    )
    {
        rel mujoco:geom:mesh = </mujoco/asset/meshes/Cheese_043>
        point3f mujoco:geom:pos = (0, 0, 0)
        quatf mujoco:geom:quat = (1, 0, 0, 0)
        vector3f mujoco:geom:size = (1, 1, 1)
        uniform token mujoco:geom:type = "mesh"
        uniform token physics:approximation = "convexHull"
        bool physics:collisionEnabled = 1
        float[] primvars:displayOpacity = [0]
        float3 urdf:collision:origin:rpy = (0, 0, 0)
        point3f urdf:collision:origin:xyz = (0, 0, 0)
        asset urdf:geometry:mesh:filename = @./cheese/meshes/stl/Cheese_043.stl@
        float3 urdf:geometry:mesh:scale = (1, 1, 1)
        token visibility = "invisible"
    }

    def Mesh "Cheese_044" (
        prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
        prepend references = @./cheese/meshes/usd/Cheese_044.usda@</Cheese_044>
    )
    {
        rel mujoco:geom:mesh = </mujoco/asset/meshes/Cheese_044>
        point3f mujoco:geom:pos = (0, 0, 0)
        quatf mujoco:geom:quat = (1, 0, 0, 0)
        vector3f mujoco:geom:size = (1, 1, 1)
        uniform token mujoco:geom:type = "mesh"
        uniform token physics:approximation = "convexHull"
        bool physics:collisionEnabled = 1
        float[] primvars:displayOpacity = [0]
        float3 urdf:collision:origin:rpy = (0, 0, 0)
        point3f urdf:collision:origin:xyz = (0, 0, 0)
        asset urdf:geometry:mesh:filename = @./cheese/meshes/stl/Cheese_044.stl@
        float3 urdf:geometry:mesh:scale = (1, 1, 1)
        token visibility = "invisible"
    }

    def Mesh "Cheese_045" (
        prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
        prepend references = @./cheese/meshes/usd/Cheese_045.usda@</Cheese_045>
    )
    {
        rel mujoco:geom:mesh = </mujoco/asset/meshes/Cheese_045>
        point3f mujoco:geom:pos = (0, 0, 0)
        quatf mujoco:geom:quat = (1, 0, 0, 0)
        vector3f mujoco:geom:size = (1, 1, 1)
        uniform token mujoco:geom:type = "mesh"
        uniform token physics:approximation = "convexHull"
        bool physics:collisionEnabled = 1
        float[] primvars:displayOpacity = [0]
        float3 urdf:collision:origin:rpy = (0, 0, 0)
        point3f urdf:collision:origin:xyz = (0, 0, 0)
        asset urdf:geometry:mesh:filename = @./cheese/meshes/stl/Cheese_045.stl@
        float3 urdf:geometry:mesh:scale = (1, 1, 1)
        token visibility = "invisible"
    }
}

def Urdf "urdf"
{
    string urdf:name = "cheese"
}

def Mujoco "mujoco"
{
    string mujoco:model = "cheese"

    def MujocoAsset "asset"
    {
        def MujocoMesh "meshes"
        {
            def MujocoMesh "Cheese"
            {
                asset mujoco:mesh:file = @cheese/meshes/obj/Cheese.obj@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "Cheese_001"
            {
                asset mujoco:mesh:file = @cheese/meshes/stl/Cheese_001.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "Cheese_002"
            {
                asset mujoco:mesh:file = @cheese/meshes/stl/Cheese_002.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "Cheese_003"
            {
                asset mujoco:mesh:file = @cheese/meshes/stl/Cheese_003.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "Cheese_004"
            {
                asset mujoco:mesh:file = @cheese/meshes/stl/Cheese_004.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "Cheese_005"
            {
                asset mujoco:mesh:file = @cheese/meshes/stl/Cheese_005.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "Cheese_006"
            {
                asset mujoco:mesh:file = @cheese/meshes/stl/Cheese_006.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "Cheese_007"
            {
                asset mujoco:mesh:file = @cheese/meshes/stl/Cheese_007.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "Cheese_008"
            {
                asset mujoco:mesh:file = @cheese/meshes/stl/Cheese_008.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "Cheese_009"
            {
                asset mujoco:mesh:file = @cheese/meshes/stl/Cheese_009.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "Cheese_010"
            {
                asset mujoco:mesh:file = @cheese/meshes/stl/Cheese_010.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "Cheese_011"
            {
                asset mujoco:mesh:file = @cheese/meshes/stl/Cheese_011.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "Cheese_012"
            {
                asset mujoco:mesh:file = @cheese/meshes/stl/Cheese_012.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "Cheese_013"
            {
                asset mujoco:mesh:file = @cheese/meshes/stl/Cheese_013.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "Cheese_014"
            {
                asset mujoco:mesh:file = @cheese/meshes/stl/Cheese_014.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "Cheese_015"
            {
                asset mujoco:mesh:file = @cheese/meshes/stl/Cheese_015.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "Cheese_016"
            {
                asset mujoco:mesh:file = @cheese/meshes/stl/Cheese_016.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "Cheese_017"
            {
                asset mujoco:mesh:file = @cheese/meshes/stl/Cheese_017.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "Cheese_018"
            {
                asset mujoco:mesh:file = @cheese/meshes/stl/Cheese_018.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "Cheese_019"
            {
                asset mujoco:mesh:file = @cheese/meshes/stl/Cheese_019.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "Cheese_020"
            {
                asset mujoco:mesh:file = @cheese/meshes/stl/Cheese_020.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "Cheese_021"
            {
                asset mujoco:mesh:file = @cheese/meshes/stl/Cheese_021.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "Cheese_022"
            {
                asset mujoco:mesh:file = @cheese/meshes/stl/Cheese_022.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "Cheese_023"
            {
                asset mujoco:mesh:file = @cheese/meshes/stl/Cheese_023.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "Cheese_024"
            {
                asset mujoco:mesh:file = @cheese/meshes/stl/Cheese_024.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "Cheese_025"
            {
                asset mujoco:mesh:file = @cheese/meshes/stl/Cheese_025.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "Cheese_026"
            {
                asset mujoco:mesh:file = @cheese/meshes/stl/Cheese_026.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "Cheese_027"
            {
                asset mujoco:mesh:file = @cheese/meshes/stl/Cheese_027.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "Cheese_028"
            {
                asset mujoco:mesh:file = @cheese/meshes/stl/Cheese_028.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "Cheese_029"
            {
                asset mujoco:mesh:file = @cheese/meshes/stl/Cheese_029.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "Cheese_030"
            {
                asset mujoco:mesh:file = @cheese/meshes/stl/Cheese_030.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "Cheese_031"
            {
                asset mujoco:mesh:file = @cheese/meshes/stl/Cheese_031.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "Cheese_032"
            {
                asset mujoco:mesh:file = @cheese/meshes/stl/Cheese_032.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "Cheese_033"
            {
                asset mujoco:mesh:file = @cheese/meshes/stl/Cheese_033.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "Cheese_034"
            {
                asset mujoco:mesh:file = @cheese/meshes/stl/Cheese_034.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "Cheese_035"
            {
                asset mujoco:mesh:file = @cheese/meshes/stl/Cheese_035.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "Cheese_036"
            {
                asset mujoco:mesh:file = @cheese/meshes/stl/Cheese_036.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "Cheese_037"
            {
                asset mujoco:mesh:file = @cheese/meshes/stl/Cheese_037.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "Cheese_038"
            {
                asset mujoco:mesh:file = @cheese/meshes/stl/Cheese_038.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "Cheese_039"
            {
                asset mujoco:mesh:file = @cheese/meshes/stl/Cheese_039.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "Cheese_040"
            {
                asset mujoco:mesh:file = @cheese/meshes/stl/Cheese_040.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "Cheese_041"
            {
                asset mujoco:mesh:file = @cheese/meshes/stl/Cheese_041.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "Cheese_042"
            {
                asset mujoco:mesh:file = @cheese/meshes/stl/Cheese_042.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "Cheese_043"
            {
                asset mujoco:mesh:file = @cheese/meshes/stl/Cheese_043.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "Cheese_044"
            {
                asset mujoco:mesh:file = @cheese/meshes/stl/Cheese_044.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "Cheese_045"
            {
                asset mujoco:mesh:file = @cheese/meshes/stl/Cheese_045.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }
        }

        def MujocoMaterial "materials"
        {
            def MujocoMaterial "M_Cheese"
            {
                rel mujoco:material:texture = </mujoco/asset/textures/T_Cheese>
            }
        }

        def MujocoTexture "textures"
        {
            def MujocoTexture "T_Cheese"
            {
                asset mujoco:texture:file = @T_Cheese.png@
                string mujoco:texture:type = "2d"
            }
        }
    }

    def MujocoEquality "equality"
    {
    }
}

