#usda 1.0
(
    defaultPrim = "mixer"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "mixer" (
    prepend apiSchemas = ["MujocoBodyAPI"]
)
{
    point3f mujoco:body:pos = (0, 0, 0)
    quatf mujoco:body:quat = (1, 0, 0, 0)

    def Xform "mixer_cover" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (0.0074643944, 0.036192957, 0.036193036)
        float mujoco:body:inertial:mass = 6.394795
        point3f mujoco:body:inertial:pos = (-0.000001071119, -4.780319e-7, 0.0636041)
        quatf mujoco:body:inertial:quat = (-0.017323602, 0.70689034, 0.01731916, 0.7068988)
        point3f mujoco:body:pos = (0, 0, 0)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        point3f physics:centerOfMass = (-0.000001071119, -4.780319e-7, 0.0636041)
        float3 physics:diagonalInertia = (0.0074643944, 0.036192957, 0.036193036)
        float physics:mass = 6.394795
        quatf physics:principalAxes = (-0.017323602, 0.70689034, 0.01731916, 0.7068988)
        bool physics:rigidBodyEnabled = 1
        float urdf:link:inertial:inertia:ixx = 0.0074643944
        float urdf:link:inertial:inertia:iyy = 0.036192957
        float urdf:link:inertial:inertia:izz = 0.036193036
        float urdf:link:inertial:mass = 6.394795
        float3 urdf:link:inertial:origin:rpy = (-0.4588449, -1.5707828, -2.6337507)
        point3f urdf:link:inertial:origin:xyz = (-0.000001071119, -4.780319e-7, 0.0636041)

        def Mesh "MixerCover" (
            prepend apiSchemas = ["MaterialBindingAPI", "UrdfLinkVisualAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover.usda@</MixerCover>
        )
        {
            rel material:binding = </mixer/mixer_cover/MixerCover/Materials/M_MixerCover>
            rel mujoco:geom:material = </mujoco/asset/materials/M_MixerCover>
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            asset urdf:geometry:mesh:filename = @./mixer/meshes/obj/MixerCover.obj@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            float3 urdf:visual:origin:rpy = (0, 0, 0)
            point3f urdf:visual:origin:xyz = (0, 0, 0)

            def Scope "Materials"
            {
                def Material "M_MixerCover" (
                    prepend references = @./mixer/materials/usd/M_MixerCover.usda@</M_MixerCover>
                )
                {
                }
            }
        }

        def Mesh "MixerCover_001" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_001.usda@</MixerCover_001>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_001>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_001.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_002" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_002.usda@</MixerCover_002>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_002>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_002.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_003" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_003.usda@</MixerCover_003>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_003>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_003.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_004" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_004.usda@</MixerCover_004>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_004>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_004.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_005" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_005.usda@</MixerCover_005>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_005>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_005.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_006" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_006.usda@</MixerCover_006>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_006>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_006.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_007" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_007.usda@</MixerCover_007>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_007>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_007.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_008" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_008.usda@</MixerCover_008>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_008>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_008.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_009" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_009.usda@</MixerCover_009>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_009>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_009.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_010" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_010.usda@</MixerCover_010>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_010>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_010.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_011" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_011.usda@</MixerCover_011>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_011>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_011.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_012" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_012.usda@</MixerCover_012>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_012>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_012.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_013" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_013.usda@</MixerCover_013>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_013>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_013.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_014" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_014.usda@</MixerCover_014>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_014>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_014.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_015" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_015.usda@</MixerCover_015>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_015>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_015.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_016" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_016.usda@</MixerCover_016>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_016>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_016.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_017" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_017.usda@</MixerCover_017>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_017>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_017.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_018" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_018.usda@</MixerCover_018>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_018>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_018.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_019" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_019.usda@</MixerCover_019>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_019>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_019.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_020" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_020.usda@</MixerCover_020>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_020>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_020.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_021" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_021.usda@</MixerCover_021>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_021>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_021.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_022" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_022.usda@</MixerCover_022>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_022>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_022.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_023" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_023.usda@</MixerCover_023>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_023>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_023.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_024" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_024.usda@</MixerCover_024>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_024>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_024.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_025" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_025.usda@</MixerCover_025>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_025>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_025.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_026" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_026.usda@</MixerCover_026>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_026>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_026.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_027" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_027.usda@</MixerCover_027>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_027>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_027.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_028" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_028.usda@</MixerCover_028>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_028>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_028.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_029" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_029.usda@</MixerCover_029>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_029>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_029.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_030" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_030.usda@</MixerCover_030>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_030>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_030.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_031" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_031.usda@</MixerCover_031>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_031>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_031.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_032" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_032.usda@</MixerCover_032>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_032>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_032.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_033" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_033.usda@</MixerCover_033>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_033>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_033.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_034" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_034.usda@</MixerCover_034>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_034>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_034.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_035" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_035.usda@</MixerCover_035>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_035>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_035.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_036" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_036.usda@</MixerCover_036>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_036>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_036.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_037" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_037.usda@</MixerCover_037>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_037>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_037.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_038" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_038.usda@</MixerCover_038>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_038>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_038.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_039" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_039.usda@</MixerCover_039>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_039>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_039.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_040" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_040.usda@</MixerCover_040>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_040>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_040.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_041" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_041.usda@</MixerCover_041>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_041>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_041.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_042" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_042.usda@</MixerCover_042>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_042>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_042.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_043" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_043.usda@</MixerCover_043>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_043>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_043.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_044" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_044.usda@</MixerCover_044>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_044>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_044.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_045" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_045.usda@</MixerCover_045>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_045>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_045.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_046" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_046.usda@</MixerCover_046>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_046>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_046.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_047" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_047.usda@</MixerCover_047>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_047>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_047.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_048" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_048.usda@</MixerCover_048>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_048>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_048.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_049" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_049.usda@</MixerCover_049>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_049>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_049.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_050" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_050.usda@</MixerCover_050>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_050>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_050.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_051" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_051.usda@</MixerCover_051>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_051>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_051.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_052" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_052.usda@</MixerCover_052>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_052>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_052.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_053" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_053.usda@</MixerCover_053>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_053>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_053.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_054" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_054.usda@</MixerCover_054>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_054>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_054.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_055" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_055.usda@</MixerCover_055>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_055>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_055.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_056" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_056.usda@</MixerCover_056>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_056>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_056.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_057" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_057.usda@</MixerCover_057>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_057>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_057.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_058" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_058.usda@</MixerCover_058>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_058>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_058.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_059" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_059.usda@</MixerCover_059>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_059>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_059.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_060" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_060.usda@</MixerCover_060>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_060>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_060.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_061" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_061.usda@</MixerCover_061>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_061>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_061.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_062" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_062.usda@</MixerCover_062>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_062>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_062.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_063" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_063.usda@</MixerCover_063>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_063>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_063.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_064" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_064.usda@</MixerCover_064>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_064>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_064.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_065" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_065.usda@</MixerCover_065>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_065>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_065.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_066" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_066.usda@</MixerCover_066>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_066>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_066.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_067" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_067.usda@</MixerCover_067>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_067>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_067.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_068" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_068.usda@</MixerCover_068>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_068>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_068.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_069" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_069.usda@</MixerCover_069>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_069>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_069.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_070" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_070.usda@</MixerCover_070>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_070>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_070.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_071" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_071.usda@</MixerCover_071>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_071>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_071.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_072" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_072.usda@</MixerCover_072>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_072>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_072.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_073" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_073.usda@</MixerCover_073>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_073>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_073.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_074" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_074.usda@</MixerCover_074>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_074>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_074.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_075" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_075.usda@</MixerCover_075>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_075>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_075.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_076" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_076.usda@</MixerCover_076>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_076>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_076.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_077" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_077.usda@</MixerCover_077>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_077>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_077.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_078" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_078.usda@</MixerCover_078>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_078>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_078.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_079" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_079.usda@</MixerCover_079>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_079>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_079.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_080" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_080.usda@</MixerCover_080>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_080>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_080.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_081" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_081.usda@</MixerCover_081>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_081>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_081.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_082" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_082.usda@</MixerCover_082>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_082>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_082.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_083" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_083.usda@</MixerCover_083>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_083>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_083.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_084" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_084.usda@</MixerCover_084>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_084>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_084.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_085" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_085.usda@</MixerCover_085>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_085>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_085.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_086" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_086.usda@</MixerCover_086>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_086>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_086.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_087" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_087.usda@</MixerCover_087>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_087>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_087.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_088" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_088.usda@</MixerCover_088>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_088>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_088.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_089" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_089.usda@</MixerCover_089>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_089>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_089.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_090" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_090.usda@</MixerCover_090>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_090>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_090.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_091" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_091.usda@</MixerCover_091>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_091>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_091.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_092" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_092.usda@</MixerCover_092>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_092>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_092.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_093" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_093.usda@</MixerCover_093>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_093>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_093.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_094" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_094.usda@</MixerCover_094>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_094>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_094.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_095" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_095.usda@</MixerCover_095>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_095>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_095.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_096" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_096.usda@</MixerCover_096>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_096>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_096.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_097" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_097.usda@</MixerCover_097>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_097>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_097.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_098" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_098.usda@</MixerCover_098>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_098>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_098.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_099" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_099.usda@</MixerCover_099>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_099>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_099.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_100" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_100.usda@</MixerCover_100>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_100>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_100.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_101" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_101.usda@</MixerCover_101>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_101>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_101.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_102" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_102.usda@</MixerCover_102>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_102>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_102.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_103" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_103.usda@</MixerCover_103>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_103>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_103.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_104" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_104.usda@</MixerCover_104>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_104>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_104.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_105" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_105.usda@</MixerCover_105>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_105>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_105.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_106" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_106.usda@</MixerCover_106>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_106>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_106.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_107" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_107.usda@</MixerCover_107>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_107>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_107.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_108" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_108.usda@</MixerCover_108>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_108>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_108.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_109" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_109.usda@</MixerCover_109>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_109>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_109.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_110" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_110.usda@</MixerCover_110>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_110>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_110.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCover_111" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCover_111.usda@</MixerCover_111>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCover_111>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCover_111.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }
    }

    def Xform "mixer_cup" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (0.010720219, 0.040611785, 0.040611863)
        float mujoco:body:inertial:mass = 8.871997
        point3f mujoco:body:inertial:pos = (-0.000001764558, -5.248667e-7, -0.042765483)
        quatf mujoco:body:inertial:quat = (0.5020855, 0.4978982, 0.502085, -0.49791393)
        point3f mujoco:body:pos = (0, 0, 0)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        point3f physics:centerOfMass = (-0.000001764558, -5.248667e-7, -0.042765483)
        float3 physics:diagonalInertia = (0.010720219, 0.040611785, 0.040611863)
        float physics:mass = 8.871997
        quatf physics:principalAxes = (0.5020855, 0.4978982, 0.502085, -0.49791393)
        bool physics:rigidBodyEnabled = 1
        float urdf:link:inertial:inertia:ixx = 0.010720219
        float urdf:link:inertial:inertia:iyy = 0.040611785
        float urdf:link:inertial:inertia:izz = 0.040611863
        float urdf:link:inertial:mass = 8.871997
        float3 urdf:link:inertial:origin:rpy = (-0.75549966, 1.5707741, -2.3179376)
        point3f urdf:link:inertial:origin:xyz = (-0.000001764558, -5.248667e-7, -0.042765483)

        def Mesh "MixerCup" (
            prepend apiSchemas = ["MaterialBindingAPI", "UrdfLinkVisualAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCup.usda@</MixerCup>
        )
        {
            rel material:binding = </mixer/mixer_cup/MixerCup/Materials/M_MixerCup>
            rel mujoco:geom:material = </mujoco/asset/materials/M_MixerCup>
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCup>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            asset urdf:geometry:mesh:filename = @./mixer/meshes/obj/MixerCup.obj@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            float3 urdf:visual:origin:rpy = (0, 0, 0)
            point3f urdf:visual:origin:xyz = (0, 0, 0)

            def Scope "Materials"
            {
                def Material "M_MixerCup" (
                    prepend references = @./mixer/materials/usd/M_MixerCup.usda@</M_MixerCup>
                )
                {
                }
            }
        }

        def Mesh "MixerCup_001" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCup_001.usda@</MixerCup_001>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCup_001>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCup_001.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCup_002" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCup_002.usda@</MixerCup_002>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCup_002>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCup_002.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCup_003" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCup_003.usda@</MixerCup_003>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCup_003>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCup_003.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCup_004" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCup_004.usda@</MixerCup_004>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCup_004>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCup_004.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCup_005" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCup_005.usda@</MixerCup_005>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCup_005>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCup_005.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCup_006" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCup_006.usda@</MixerCup_006>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCup_006>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCup_006.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCup_007" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCup_007.usda@</MixerCup_007>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCup_007>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCup_007.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCup_008" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCup_008.usda@</MixerCup_008>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCup_008>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCup_008.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCup_009" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCup_009.usda@</MixerCup_009>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCup_009>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCup_009.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCup_010" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCup_010.usda@</MixerCup_010>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCup_010>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCup_010.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCup_011" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCup_011.usda@</MixerCup_011>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCup_011>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCup_011.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCup_012" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCup_012.usda@</MixerCup_012>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCup_012>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCup_012.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCup_013" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCup_013.usda@</MixerCup_013>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCup_013>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCup_013.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCup_014" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCup_014.usda@</MixerCup_014>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCup_014>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCup_014.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCup_015" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCup_015.usda@</MixerCup_015>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCup_015>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCup_015.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCup_016" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCup_016.usda@</MixerCup_016>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCup_016>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCup_016.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCup_017" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCup_017.usda@</MixerCup_017>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCup_017>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCup_017.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCup_018" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCup_018.usda@</MixerCup_018>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCup_018>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCup_018.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCup_019" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCup_019.usda@</MixerCup_019>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCup_019>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCup_019.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCup_020" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCup_020.usda@</MixerCup_020>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCup_020>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCup_020.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCup_021" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCup_021.usda@</MixerCup_021>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCup_021>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCup_021.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCup_022" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCup_022.usda@</MixerCup_022>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCup_022>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCup_022.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCup_023" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCup_023.usda@</MixerCup_023>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCup_023>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCup_023.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCup_024" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCup_024.usda@</MixerCup_024>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCup_024>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCup_024.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCup_025" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCup_025.usda@</MixerCup_025>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCup_025>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCup_025.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCup_026" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCup_026.usda@</MixerCup_026>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCup_026>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCup_026.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCup_027" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCup_027.usda@</MixerCup_027>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCup_027>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCup_027.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCup_028" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCup_028.usda@</MixerCup_028>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCup_028>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCup_028.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCup_029" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCup_029.usda@</MixerCup_029>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCup_029>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCup_029.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCup_030" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCup_030.usda@</MixerCup_030>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCup_030>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCup_030.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCup_031" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCup_031.usda@</MixerCup_031>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCup_031>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCup_031.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCup_032" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCup_032.usda@</MixerCup_032>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCup_032>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCup_032.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCup_033" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCup_033.usda@</MixerCup_033>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCup_033>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCup_033.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCup_034" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCup_034.usda@</MixerCup_034>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCup_034>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCup_034.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCup_035" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCup_035.usda@</MixerCup_035>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCup_035>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCup_035.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCup_036" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCup_036.usda@</MixerCup_036>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCup_036>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCup_036.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "MixerCup_037" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./mixer/meshes/usd/MixerCup_037.usda@</MixerCup_037>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/MixerCup_037>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./mixer/meshes/stl/MixerCup_037.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }
    }
}

def Urdf "urdf"
{
    string urdf:name = "mixer"
}

def Mujoco "mujoco"
{
    string mujoco:model = "mixer"

    def MujocoAsset "asset"
    {
        def MujocoMesh "meshes"
        {
            def MujocoMesh "MixerCover"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_001"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_001.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_002"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_002.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_003"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_003.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_004"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_004.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_005"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_005.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_006"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_006.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_007"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_007.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_008"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_008.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_009"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_009.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_010"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_010.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_011"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_011.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_012"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_012.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_013"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_013.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_014"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_014.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_015"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_015.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_016"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_016.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_017"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_017.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_018"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_018.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_019"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_019.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_020"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_020.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_021"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_021.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_022"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_022.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_023"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_023.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_024"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_024.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_025"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_025.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_026"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_026.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_027"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_027.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_028"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_028.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_029"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_029.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_030"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_030.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_031"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_031.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_032"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_032.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_033"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_033.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_034"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_034.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_035"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_035.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_036"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_036.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_037"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_037.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_038"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_038.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_039"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_039.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_040"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_040.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_041"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_041.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_042"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_042.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_043"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_043.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_044"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_044.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_045"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_045.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_046"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_046.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_047"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_047.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_048"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_048.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_049"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_049.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_050"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_050.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_051"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_051.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_052"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_052.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_053"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_053.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_054"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_054.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_055"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_055.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_056"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_056.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_057"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_057.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_058"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_058.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_059"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_059.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_060"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_060.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_061"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_061.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_062"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_062.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_063"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_063.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_064"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_064.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_065"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_065.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_066"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_066.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_067"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_067.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_068"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_068.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_069"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_069.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_070"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_070.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_071"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_071.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_072"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_072.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_073"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_073.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_074"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_074.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_075"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_075.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_076"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_076.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_077"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_077.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_078"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_078.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_079"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_079.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_080"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_080.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_081"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_081.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_082"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_082.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_083"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_083.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_084"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_084.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_085"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_085.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_086"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_086.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_087"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_087.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_088"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_088.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_089"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_089.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_090"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_090.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_091"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_091.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_092"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_092.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_093"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_093.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_094"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_094.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_095"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_095.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_096"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_096.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_097"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_097.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_098"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_098.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_099"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_099.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_100"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_100.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_101"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_101.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_102"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_102.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_103"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_103.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_104"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_104.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_105"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_105.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_106"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_106.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_107"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_107.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_108"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_108.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_109"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_109.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_110"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_110.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCover_111"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCover_111.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCup"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCup.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCup_001"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCup_001.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCup_002"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCup_002.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCup_003"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCup_003.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCup_004"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCup_004.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCup_005"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCup_005.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCup_006"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCup_006.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCup_007"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCup_007.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCup_008"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCup_008.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCup_009"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCup_009.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCup_010"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCup_010.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCup_011"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCup_011.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCup_012"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCup_012.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCup_013"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCup_013.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCup_014"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCup_014.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCup_015"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCup_015.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCup_016"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCup_016.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCup_017"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCup_017.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCup_018"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCup_018.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCup_019"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCup_019.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCup_020"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCup_020.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCup_021"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCup_021.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCup_022"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCup_022.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCup_023"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCup_023.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCup_024"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCup_024.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCup_025"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCup_025.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCup_026"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCup_026.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCup_027"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCup_027.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCup_028"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCup_028.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCup_029"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCup_029.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCup_030"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCup_030.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCup_031"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCup_031.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCup_032"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCup_032.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCup_033"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCup_033.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCup_034"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCup_034.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCup_035"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCup_035.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCup_036"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCup_036.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "MixerCup_037"
            {
                asset mujoco:mesh:file = @mixer/meshes/stl/MixerCup_037.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }
        }

        def MujocoMaterial "materials"
        {
            def MujocoMaterial "M_MixerCover"
            {
                float mujoco:material:emission = 0
                color4f mujoco:material:rgba = (0.5255, 0.5294, 0.5451, 1)
            }

            def MujocoMaterial "M_MixerCup"
            {
                float mujoco:material:emission = 0
                color4f mujoco:material:rgba = (0.5255, 0.5294, 0.5451, 1)
            }
        }

        def MujocoTexture "textures"
        {
        }
    }

    def MujocoEquality "equality"
    {
    }
}

