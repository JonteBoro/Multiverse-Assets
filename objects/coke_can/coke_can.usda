#usda 1.0
(
    defaultPrim = "coke_can"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "coke_can" (
    prepend apiSchemas = ["MujocoBodyAPI"]
)
{
    point3f mujoco:body:pos = (0, 0, 0)
    quatf mujoco:body:quat = (1, 0, 0, 0)

    def Xform "coke_can_snap_lids" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (2.8933377e-7, 0.0000019589268, 0.0000019595357)
        float mujoco:body:inertial:mass = 0.0007786404
        point3f mujoco:body:inertial:pos = (-0.00005552586, 4.7487924e-7, 0.04825708)
        quatf mujoco:body:inertial:quat = (0.49952662, 0.5011956, 0.49879983, -0.50047463)
        point3f mujoco:body:pos = (0, 0, 0)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        point3f physics:centerOfMass = (-0.00005552586, 4.7487924e-7, 0.04825708)
        float3 physics:diagonalInertia = (2.8933377e-7, 0.0000019589268, 0.0000019595357)
        float physics:mass = 0.0007786404
        quatf physics:principalAxes = (0.49952662, 0.5011956, 0.49879983, -0.50047463)
        bool physics:rigidBodyEnabled = 1
        float urdf:link:inertial:inertia:ixx = 2.8933377e-7
        float urdf:link:inertial:inertia:iyy = 0.0000019589268
        float urdf:link:inertial:inertia:izz = 0.0000019595357
        float urdf:link:inertial:mass = 0.0007786404
        float3 urdf:link:inertial:origin:rpy = (1.5684541, 1.5693486, -0.0056859553)
        point3f urdf:link:inertial:origin:xyz = (-0.00005552586, 4.7487924e-7, 0.04825708)

        def Mesh "CokeCanSnapLids" (
            prepend apiSchemas = ["MaterialBindingAPI", "UrdfLinkVisualAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanSnapLids.usda@</CokeCanSnapLids>
        )
        {
            rel material:binding = </coke_can/coke_can_snap_lids/CokeCanSnapLids/Materials/M_CokeCanSnapLids>
            rel mujoco:geom:material = </mujoco/asset/materials/M_CokeCanSnapLids>
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanSnapLids>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/obj/CokeCanSnapLids.obj@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            float3 urdf:visual:origin:rpy = (0, 0, 0)
            point3f urdf:visual:origin:xyz = (0, 0, 0)

            def Scope "Materials"
            {
                def Material "M_CokeCanSnapLids" (
                    prepend references = @./coke_can/materials/usd/M_CokeCanSnapLids.usda@</M_CokeCanSnapLids>
                )
                {
                }
            }
        }

        def Mesh "CokeCanSnapLids_001" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanSnapLids_001.usda@</CokeCanSnapLids_001>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanSnapLids_001>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanSnapLids_001.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanSnapLids_002" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanSnapLids_002.usda@</CokeCanSnapLids_002>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanSnapLids_002>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanSnapLids_002.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanSnapLids_003" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanSnapLids_003.usda@</CokeCanSnapLids_003>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanSnapLids_003>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanSnapLids_003.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanSnapLids_004" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanSnapLids_004.usda@</CokeCanSnapLids_004>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanSnapLids_004>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanSnapLids_004.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanSnapLids_005" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanSnapLids_005.usda@</CokeCanSnapLids_005>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanSnapLids_005>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanSnapLids_005.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanSnapLids_006" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanSnapLids_006.usda@</CokeCanSnapLids_006>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanSnapLids_006>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanSnapLids_006.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanSnapLids_007" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanSnapLids_007.usda@</CokeCanSnapLids_007>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanSnapLids_007>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanSnapLids_007.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanSnapLids_008" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanSnapLids_008.usda@</CokeCanSnapLids_008>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanSnapLids_008>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanSnapLids_008.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanSnapLids_009" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanSnapLids_009.usda@</CokeCanSnapLids_009>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanSnapLids_009>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanSnapLids_009.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanSnapLids_010" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanSnapLids_010.usda@</CokeCanSnapLids_010>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanSnapLids_010>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanSnapLids_010.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanSnapLids_011" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanSnapLids_011.usda@</CokeCanSnapLids_011>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanSnapLids_011>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanSnapLids_011.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanSnapLids_012" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanSnapLids_012.usda@</CokeCanSnapLids_012>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanSnapLids_012>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanSnapLids_012.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanSnapLids_013" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanSnapLids_013.usda@</CokeCanSnapLids_013>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanSnapLids_013>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanSnapLids_013.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanSnapLids_014" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanSnapLids_014.usda@</CokeCanSnapLids_014>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanSnapLids_014>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanSnapLids_014.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanSnapLids_015" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanSnapLids_015.usda@</CokeCanSnapLids_015>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanSnapLids_015>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanSnapLids_015.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanSnapLids_016" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanSnapLids_016.usda@</CokeCanSnapLids_016>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanSnapLids_016>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanSnapLids_016.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanSnapLids_017" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanSnapLids_017.usda@</CokeCanSnapLids_017>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanSnapLids_017>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanSnapLids_017.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanSnapLids_018" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanSnapLids_018.usda@</CokeCanSnapLids_018>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanSnapLids_018>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanSnapLids_018.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanSnapLids_019" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanSnapLids_019.usda@</CokeCanSnapLids_019>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanSnapLids_019>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanSnapLids_019.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanSnapLids_020" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanSnapLids_020.usda@</CokeCanSnapLids_020>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanSnapLids_020>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanSnapLids_020.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanSnapLids_021" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanSnapLids_021.usda@</CokeCanSnapLids_021>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanSnapLids_021>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanSnapLids_021.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanSnapLids_022" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanSnapLids_022.usda@</CokeCanSnapLids_022>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanSnapLids_022>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanSnapLids_022.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanSnapLids_023" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanSnapLids_023.usda@</CokeCanSnapLids_023>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanSnapLids_023>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanSnapLids_023.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanSnapLids_024" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanSnapLids_024.usda@</CokeCanSnapLids_024>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanSnapLids_024>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanSnapLids_024.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanSnapLids_025" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanSnapLids_025.usda@</CokeCanSnapLids_025>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanSnapLids_025>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanSnapLids_025.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanSnapLids_026" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanSnapLids_026.usda@</CokeCanSnapLids_026>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanSnapLids_026>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanSnapLids_026.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanSnapLids_027" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanSnapLids_027.usda@</CokeCanSnapLids_027>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanSnapLids_027>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanSnapLids_027.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanSnapLids_028" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanSnapLids_028.usda@</CokeCanSnapLids_028>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanSnapLids_028>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanSnapLids_028.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanSnapLids_029" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanSnapLids_029.usda@</CokeCanSnapLids_029>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanSnapLids_029>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanSnapLids_029.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanSnapLids_030" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanSnapLids_030.usda@</CokeCanSnapLids_030>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanSnapLids_030>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanSnapLids_030.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanSnapLids_031" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanSnapLids_031.usda@</CokeCanSnapLids_031>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanSnapLids_031>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanSnapLids_031.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanSnapLids_032" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanSnapLids_032.usda@</CokeCanSnapLids_032>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanSnapLids_032>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanSnapLids_032.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanSnapLids_033" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanSnapLids_033.usda@</CokeCanSnapLids_033>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanSnapLids_033>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanSnapLids_033.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanSnapLids_034" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanSnapLids_034.usda@</CokeCanSnapLids_034>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanSnapLids_034>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanSnapLids_034.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }
    }

    def Xform "coke_can_bottom" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (4.580787e-7, 0.000002438796, 0.0000024387978)
        float mujoco:body:inertial:mass = 0.0010213015
        point3f mujoco:body:inertial:pos = (4.945118e-7, -2.1482299e-8, -0.046416074)
        quatf mujoco:body:inertial:quat = (-0.049327265, 0.70538026, 0.049328215, 0.705388)
        point3f mujoco:body:pos = (0, 0, 0)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        point3f physics:centerOfMass = (4.945118e-7, -2.1482299e-8, -0.046416074)
        float3 physics:diagonalInertia = (4.580787e-7, 0.000002438796, 0.0000024387978)
        float physics:mass = 0.0010213015
        quatf physics:principalAxes = (-0.049327265, 0.70538026, 0.049328215, 0.705388)
        bool physics:rigidBodyEnabled = 1
        float urdf:link:inertial:inertia:ixx = 4.580787e-7
        float urdf:link:inertial:inertia:iyy = 0.000002438796
        float urdf:link:inertial:inertia:izz = 0.0000024387978
        float urdf:link:inertial:mass = 0.0010213015
        float3 urdf:link:inertial:origin:rpy = (0.1918041, -1.5707853, 3.089422)
        point3f urdf:link:inertial:origin:xyz = (4.945118e-7, -2.1482299e-8, -0.046416074)

        def Mesh "CokeCanBottom" (
            prepend apiSchemas = ["MaterialBindingAPI", "UrdfLinkVisualAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom.usda@</CokeCanBottom>
        )
        {
            rel material:binding = </coke_can/coke_can_bottom/CokeCanBottom/Materials/M_CokeCanBottom>
            rel mujoco:geom:material = </mujoco/asset/materials/M_CokeCanBottom>
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/obj/CokeCanBottom.obj@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            float3 urdf:visual:origin:rpy = (0, 0, 0)
            point3f urdf:visual:origin:xyz = (0, 0, 0)

            def Scope "Materials"
            {
                def Material "M_CokeCanBottom" (
                    prepend references = @./coke_can/materials/usd/M_CokeCanBottom.usda@</M_CokeCanBottom>
                )
                {
                }
            }
        }

        def Mesh "CokeCanBottom_001" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_001.usda@</CokeCanBottom_001>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_001>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_001.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_002" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_002.usda@</CokeCanBottom_002>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_002>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_002.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_003" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_003.usda@</CokeCanBottom_003>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_003>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_003.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_004" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_004.usda@</CokeCanBottom_004>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_004>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_004.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_005" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_005.usda@</CokeCanBottom_005>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_005>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_005.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_006" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_006.usda@</CokeCanBottom_006>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_006>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_006.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_007" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_007.usda@</CokeCanBottom_007>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_007>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_007.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_008" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_008.usda@</CokeCanBottom_008>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_008>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_008.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_009" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_009.usda@</CokeCanBottom_009>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_009>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_009.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_010" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_010.usda@</CokeCanBottom_010>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_010>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_010.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_011" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_011.usda@</CokeCanBottom_011>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_011>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_011.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_012" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_012.usda@</CokeCanBottom_012>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_012>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_012.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_013" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_013.usda@</CokeCanBottom_013>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_013>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_013.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_014" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_014.usda@</CokeCanBottom_014>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_014>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_014.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_015" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_015.usda@</CokeCanBottom_015>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_015>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_015.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_016" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_016.usda@</CokeCanBottom_016>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_016>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_016.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_017" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_017.usda@</CokeCanBottom_017>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_017>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_017.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_018" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_018.usda@</CokeCanBottom_018>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_018>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_018.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_019" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_019.usda@</CokeCanBottom_019>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_019>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_019.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_020" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_020.usda@</CokeCanBottom_020>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_020>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_020.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_021" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_021.usda@</CokeCanBottom_021>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_021>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_021.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_022" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_022.usda@</CokeCanBottom_022>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_022>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_022.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_023" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_023.usda@</CokeCanBottom_023>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_023>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_023.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_024" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_024.usda@</CokeCanBottom_024>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_024>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_024.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_025" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_025.usda@</CokeCanBottom_025>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_025>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_025.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_026" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_026.usda@</CokeCanBottom_026>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_026>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_026.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_027" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_027.usda@</CokeCanBottom_027>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_027>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_027.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_028" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_028.usda@</CokeCanBottom_028>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_028>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_028.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_029" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_029.usda@</CokeCanBottom_029>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_029>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_029.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_030" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_030.usda@</CokeCanBottom_030>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_030>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_030.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_031" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_031.usda@</CokeCanBottom_031>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_031>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_031.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_032" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_032.usda@</CokeCanBottom_032>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_032>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_032.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_033" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_033.usda@</CokeCanBottom_033>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_033>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_033.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_034" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_034.usda@</CokeCanBottom_034>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_034>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_034.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_035" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_035.usda@</CokeCanBottom_035>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_035>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_035.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_036" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_036.usda@</CokeCanBottom_036>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_036>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_036.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_037" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_037.usda@</CokeCanBottom_037>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_037>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_037.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_038" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_038.usda@</CokeCanBottom_038>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_038>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_038.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_039" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_039.usda@</CokeCanBottom_039>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_039>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_039.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_040" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_040.usda@</CokeCanBottom_040>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_040>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_040.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_041" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_041.usda@</CokeCanBottom_041>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_041>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_041.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_042" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_042.usda@</CokeCanBottom_042>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_042>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_042.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_043" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_043.usda@</CokeCanBottom_043>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_043>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_043.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_044" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_044.usda@</CokeCanBottom_044>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_044>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_044.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_045" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_045.usda@</CokeCanBottom_045>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_045>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_045.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_046" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_046.usda@</CokeCanBottom_046>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_046>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_046.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_047" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_047.usda@</CokeCanBottom_047>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_047>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_047.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_048" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_048.usda@</CokeCanBottom_048>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_048>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_048.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_049" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_049.usda@</CokeCanBottom_049>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_049>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_049.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_050" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_050.usda@</CokeCanBottom_050>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_050>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_050.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_051" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_051.usda@</CokeCanBottom_051>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_051>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_051.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_052" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_052.usda@</CokeCanBottom_052>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_052>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_052.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_053" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_053.usda@</CokeCanBottom_053>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_053>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_053.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_054" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_054.usda@</CokeCanBottom_054>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_054>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_054.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_055" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_055.usda@</CokeCanBottom_055>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_055>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_055.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_056" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_056.usda@</CokeCanBottom_056>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_056>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_056.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_057" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_057.usda@</CokeCanBottom_057>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_057>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_057.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_058" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_058.usda@</CokeCanBottom_058>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_058>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_058.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_059" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_059.usda@</CokeCanBottom_059>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_059>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_059.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_060" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_060.usda@</CokeCanBottom_060>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_060>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_060.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_061" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_061.usda@</CokeCanBottom_061>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_061>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_061.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_062" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_062.usda@</CokeCanBottom_062>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_062>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_062.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_063" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_063.usda@</CokeCanBottom_063>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_063>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_063.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_064" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_064.usda@</CokeCanBottom_064>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_064>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_064.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_065" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_065.usda@</CokeCanBottom_065>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_065>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_065.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_066" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_066.usda@</CokeCanBottom_066>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_066>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_066.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_067" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_067.usda@</CokeCanBottom_067>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_067>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_067.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_068" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_068.usda@</CokeCanBottom_068>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_068>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_068.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_069" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_069.usda@</CokeCanBottom_069>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_069>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_069.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_070" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_070.usda@</CokeCanBottom_070>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_070>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_070.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_071" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_071.usda@</CokeCanBottom_071>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_071>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_071.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_072" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_072.usda@</CokeCanBottom_072>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_072>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_072.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_073" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_073.usda@</CokeCanBottom_073>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_073>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_073.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_074" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_074.usda@</CokeCanBottom_074>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_074>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_074.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_075" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_075.usda@</CokeCanBottom_075>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_075>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_075.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_076" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_076.usda@</CokeCanBottom_076>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_076>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_076.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_077" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_077.usda@</CokeCanBottom_077>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_077>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_077.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanBottom_078" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanBottom_078.usda@</CokeCanBottom_078>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanBottom_078>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanBottom_078.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }
    }

    def Xform "coke_can_pull_ring" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (2.840849e-9, 1.5642728e-7, 1.5753662e-7)
        float mujoco:body:inertial:mass = 0.000064723004
        point3f mujoco:body:inertial:pos = (0.0027700658, 5.7589798e-8, 0.048945554)
        quatf mujoco:body:inertial:quat = (0.48551956, 0.48550877, 0.5140832, -0.5140725)
        point3f mujoco:body:pos = (0, 0, 0)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        point3f physics:centerOfMass = (0.0027700658, 5.7589798e-8, 0.048945554)
        float3 physics:diagonalInertia = (2.840849e-9, 1.5642728e-7, 1.5753662e-7)
        float physics:mass = 0.000064723004
        quatf physics:principalAxes = (0.48551956, 0.48550877, 0.5140832, -0.5140725)
        bool physics:rigidBodyEnabled = 1
        float urdf:link:inertial:inertia:ixx = 2.840849e-9
        float urdf:link:inertial:inertia:iyy = 1.5642728e-7
        float urdf:link:inertial:inertia:izz = 1.5753662e-7
        float urdf:link:inertial:mass = 0.000064723004
        float3 urdf:link:inertial:origin:rpy = (-1.570806, 1.5136611, -3.1415808)
        point3f urdf:link:inertial:origin:xyz = (0.0027700658, 5.7589798e-8, 0.048945554)

        def Mesh "CokeCanPullRing" (
            prepend apiSchemas = ["MaterialBindingAPI", "UrdfLinkVisualAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanPullRing.usda@</CokeCanPullRing>
        )
        {
            rel material:binding = </coke_can/coke_can_pull_ring/CokeCanPullRing/Materials/M_CokeCanPullRing>
            rel mujoco:geom:material = </mujoco/asset/materials/M_CokeCanPullRing>
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanPullRing>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/obj/CokeCanPullRing.obj@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            float3 urdf:visual:origin:rpy = (0, 0, 0)
            point3f urdf:visual:origin:xyz = (0, 0, 0)

            def Scope "Materials"
            {
                def Material "M_CokeCanPullRing" (
                    prepend references = @./coke_can/materials/usd/M_CokeCanPullRing.usda@</M_CokeCanPullRing>
                )
                {
                }
            }
        }

        def Mesh "CokeCanPullRing_001" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanPullRing_001.usda@</CokeCanPullRing_001>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanPullRing_001>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanPullRing_001.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanPullRing_002" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanPullRing_002.usda@</CokeCanPullRing_002>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanPullRing_002>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanPullRing_002.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanPullRing_003" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanPullRing_003.usda@</CokeCanPullRing_003>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanPullRing_003>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanPullRing_003.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanPullRing_004" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanPullRing_004.usda@</CokeCanPullRing_004>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanPullRing_004>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanPullRing_004.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanPullRing_005" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanPullRing_005.usda@</CokeCanPullRing_005>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanPullRing_005>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanPullRing_005.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanPullRing_006" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanPullRing_006.usda@</CokeCanPullRing_006>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanPullRing_006>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanPullRing_006.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanPullRing_007" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanPullRing_007.usda@</CokeCanPullRing_007>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanPullRing_007>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanPullRing_007.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanPullRing_008" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanPullRing_008.usda@</CokeCanPullRing_008>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanPullRing_008>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanPullRing_008.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanPullRing_009" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanPullRing_009.usda@</CokeCanPullRing_009>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanPullRing_009>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanPullRing_009.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanPullRing_010" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanPullRing_010.usda@</CokeCanPullRing_010>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanPullRing_010>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanPullRing_010.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanPullRing_011" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanPullRing_011.usda@</CokeCanPullRing_011>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanPullRing_011>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanPullRing_011.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanPullRing_012" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanPullRing_012.usda@</CokeCanPullRing_012>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanPullRing_012>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanPullRing_012.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanPullRing_013" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanPullRing_013.usda@</CokeCanPullRing_013>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanPullRing_013>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanPullRing_013.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanPullRing_014" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanPullRing_014.usda@</CokeCanPullRing_014>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanPullRing_014>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanPullRing_014.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanPullRing_015" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanPullRing_015.usda@</CokeCanPullRing_015>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanPullRing_015>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanPullRing_015.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanPullRing_016" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanPullRing_016.usda@</CokeCanPullRing_016>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanPullRing_016>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanPullRing_016.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanPullRing_017" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanPullRing_017.usda@</CokeCanPullRing_017>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanPullRing_017>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanPullRing_017.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanPullRing_018" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanPullRing_018.usda@</CokeCanPullRing_018>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanPullRing_018>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanPullRing_018.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanPullRing_019" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanPullRing_019.usda@</CokeCanPullRing_019>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanPullRing_019>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanPullRing_019.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanPullRing_020" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanPullRing_020.usda@</CokeCanPullRing_020>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanPullRing_020>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanPullRing_020.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanPullRing_021" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanPullRing_021.usda@</CokeCanPullRing_021>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanPullRing_021>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanPullRing_021.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanPullRing_022" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanPullRing_022.usda@</CokeCanPullRing_022>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanPullRing_022>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanPullRing_022.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanPullRing_023" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanPullRing_023.usda@</CokeCanPullRing_023>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanPullRing_023>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanPullRing_023.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanPullRing_024" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanPullRing_024.usda@</CokeCanPullRing_024>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanPullRing_024>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanPullRing_024.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanPullRing_025" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanPullRing_025.usda@</CokeCanPullRing_025>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanPullRing_025>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanPullRing_025.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanPullRing_026" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanPullRing_026.usda@</CokeCanPullRing_026>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanPullRing_026>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanPullRing_026.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanPullRing_027" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanPullRing_027.usda@</CokeCanPullRing_027>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanPullRing_027>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanPullRing_027.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanPullRing_028" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanPullRing_028.usda@</CokeCanPullRing_028>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanPullRing_028>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanPullRing_028.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanPullRing_029" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanPullRing_029.usda@</CokeCanPullRing_029>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanPullRing_029>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanPullRing_029.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanPullRing_030" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanPullRing_030.usda@</CokeCanPullRing_030>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanPullRing_030>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanPullRing_030.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanPullRing_031" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanPullRing_031.usda@</CokeCanPullRing_031>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanPullRing_031>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanPullRing_031.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanPullRing_032" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanPullRing_032.usda@</CokeCanPullRing_032>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanPullRing_032>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanPullRing_032.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanPullRing_033" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanPullRing_033.usda@</CokeCanPullRing_033>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanPullRing_033>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanPullRing_033.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanPullRing_034" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanPullRing_034.usda@</CokeCanPullRing_034>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanPullRing_034>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanPullRing_034.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanPullRing_035" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanPullRing_035.usda@</CokeCanPullRing_035>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanPullRing_035>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanPullRing_035.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanPullRing_036" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanPullRing_036.usda@</CokeCanPullRing_036>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanPullRing_036>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanPullRing_036.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanPullRing_037" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanPullRing_037.usda@</CokeCanPullRing_037>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanPullRing_037>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanPullRing_037.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }
    }

    def Xform "coke_can_trademark" (
        prepend apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMassAPI", "UrdfLinkInertialAPI", "MujocoBodyInertialAPI", "MujocoBodyAPI"]
    )
    {
        float3 mujoco:body:inertial:diaginertia = (0.0000034531995, 0.000004712011, 0.000004712086)
        float mujoco:body:inertial:mass = 0.0041005076
        point3f mujoco:body:inertial:pos = (5.346418e-7, 4.568727e-7, 0.0027659459)
        quatf mujoco:body:inertial:quat = (0.3506251, 0.6140515, -0.3506267, 0.6140551)
        point3f mujoco:body:pos = (0, 0, 0)
        quatf mujoco:body:quat = (1, 0, 0, 0)
        point3f physics:centerOfMass = (5.346418e-7, 4.568727e-7, 0.0027659459)
        float3 physics:diagonalInertia = (0.0000034531995, 0.000004712011, 0.000004712086)
        float physics:mass = 0.0041005076
        quatf physics:principalAxes = (0.3506251, 0.6140515, -0.3506267, 0.6140551)
        bool physics:rigidBodyEnabled = 1
        float urdf:link:inertial:inertia:ixx = 0.0000034531995
        float urdf:link:inertial:inertia:iyy = 0.000004712011
        float urdf:link:inertial:inertia:izz = 0.000004712086
        float urdf:link:inertial:mass = 0.0041005076
        float3 urdf:link:inertial:origin:rpy = (-0.9416787, -1.5707908, 3.0456219)
        point3f urdf:link:inertial:origin:xyz = (5.346418e-7, 4.568727e-7, 0.0027659459)

        def Mesh "CokeCanTrademark" (
            prepend apiSchemas = ["MaterialBindingAPI", "UrdfLinkVisualAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanTrademark.usda@</CokeCanTrademark>
        )
        {
            rel material:binding = </coke_can/coke_can_trademark/CokeCanTrademark/Materials/M_CokeCanTrademark>
            rel mujoco:geom:material = </mujoco/asset/materials/M_CokeCanTrademark>
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanTrademark>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/obj/CokeCanTrademark.obj@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            float3 urdf:visual:origin:rpy = (0, 0, 0)
            point3f urdf:visual:origin:xyz = (0, 0, 0)

            def Scope "Materials"
            {
                def Material "M_CokeCanTrademark" (
                    prepend references = @./coke_can/materials/usd/M_CokeCanTrademark.usda@</M_CokeCanTrademark>
                )
                {
                }
            }
        }

        def Mesh "CokeCanTrademark_001" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanTrademark_001.usda@</CokeCanTrademark_001>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanTrademark_001>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanTrademark_001.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanTrademark_002" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanTrademark_002.usda@</CokeCanTrademark_002>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanTrademark_002>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanTrademark_002.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanTrademark_003" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanTrademark_003.usda@</CokeCanTrademark_003>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanTrademark_003>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanTrademark_003.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanTrademark_004" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanTrademark_004.usda@</CokeCanTrademark_004>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanTrademark_004>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanTrademark_004.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanTrademark_005" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanTrademark_005.usda@</CokeCanTrademark_005>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanTrademark_005>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanTrademark_005.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanTrademark_006" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanTrademark_006.usda@</CokeCanTrademark_006>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanTrademark_006>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanTrademark_006.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanTrademark_007" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanTrademark_007.usda@</CokeCanTrademark_007>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanTrademark_007>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanTrademark_007.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanTrademark_008" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanTrademark_008.usda@</CokeCanTrademark_008>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanTrademark_008>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanTrademark_008.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanTrademark_009" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanTrademark_009.usda@</CokeCanTrademark_009>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanTrademark_009>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanTrademark_009.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanTrademark_010" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanTrademark_010.usda@</CokeCanTrademark_010>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanTrademark_010>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanTrademark_010.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanTrademark_011" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanTrademark_011.usda@</CokeCanTrademark_011>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanTrademark_011>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanTrademark_011.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanTrademark_012" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanTrademark_012.usda@</CokeCanTrademark_012>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanTrademark_012>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanTrademark_012.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanTrademark_013" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanTrademark_013.usda@</CokeCanTrademark_013>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanTrademark_013>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanTrademark_013.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanTrademark_014" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanTrademark_014.usda@</CokeCanTrademark_014>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanTrademark_014>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanTrademark_014.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanTrademark_015" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanTrademark_015.usda@</CokeCanTrademark_015>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanTrademark_015>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanTrademark_015.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanTrademark_016" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanTrademark_016.usda@</CokeCanTrademark_016>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanTrademark_016>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanTrademark_016.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanTrademark_017" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanTrademark_017.usda@</CokeCanTrademark_017>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanTrademark_017>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanTrademark_017.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanTrademark_018" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanTrademark_018.usda@</CokeCanTrademark_018>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanTrademark_018>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanTrademark_018.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanTrademark_019" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanTrademark_019.usda@</CokeCanTrademark_019>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanTrademark_019>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanTrademark_019.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanTrademark_020" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanTrademark_020.usda@</CokeCanTrademark_020>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanTrademark_020>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanTrademark_020.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanTrademark_021" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanTrademark_021.usda@</CokeCanTrademark_021>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanTrademark_021>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanTrademark_021.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanTrademark_022" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanTrademark_022.usda@</CokeCanTrademark_022>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanTrademark_022>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanTrademark_022.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanTrademark_023" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanTrademark_023.usda@</CokeCanTrademark_023>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanTrademark_023>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanTrademark_023.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanTrademark_024" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanTrademark_024.usda@</CokeCanTrademark_024>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanTrademark_024>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanTrademark_024.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanTrademark_025" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanTrademark_025.usda@</CokeCanTrademark_025>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanTrademark_025>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanTrademark_025.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanTrademark_026" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanTrademark_026.usda@</CokeCanTrademark_026>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanTrademark_026>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanTrademark_026.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanTrademark_027" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanTrademark_027.usda@</CokeCanTrademark_027>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanTrademark_027>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanTrademark_027.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }

        def Mesh "CokeCanTrademark_028" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysicsMeshCollisionAPI", "UrdfLinkCollisionAPI", "UrdfGeometryMeshAPI", "MujocoGeomAPI"]
            prepend references = @./coke_can/meshes/usd/CokeCanTrademark_028.usda@</CokeCanTrademark_028>
        )
        {
            rel mujoco:geom:mesh = </mujoco/asset/meshes/CokeCanTrademark_028>
            point3f mujoco:geom:pos = (0, 0, 0)
            quatf mujoco:geom:quat = (1, 0, 0, 0)
            vector3f mujoco:geom:size = (1, 1, 1)
            uniform token mujoco:geom:type = "mesh"
            uniform token physics:approximation = "convexHull"
            bool physics:collisionEnabled = 1
            float[] primvars:displayOpacity = [0]
            float3 urdf:collision:origin:rpy = (0, 0, 0)
            point3f urdf:collision:origin:xyz = (0, 0, 0)
            asset urdf:geometry:mesh:filename = @./coke_can/meshes/stl/CokeCanTrademark_028.stl@
            float3 urdf:geometry:mesh:scale = (1, 1, 1)
            token visibility = "invisible"
        }
    }
}

def Urdf "urdf"
{
    string urdf:name = "coke_can"
}

def Mujoco "mujoco"
{
    string mujoco:model = "coke_can"

    def MujocoAsset "asset"
    {
        def MujocoMesh "meshes"
        {
            def MujocoMesh "CokeCanSnapLids"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanSnapLids.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanSnapLids_001"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanSnapLids_001.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanSnapLids_002"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanSnapLids_002.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanSnapLids_003"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanSnapLids_003.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanSnapLids_004"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanSnapLids_004.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanSnapLids_005"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanSnapLids_005.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanSnapLids_006"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanSnapLids_006.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanSnapLids_007"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanSnapLids_007.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanSnapLids_008"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanSnapLids_008.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanSnapLids_009"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanSnapLids_009.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanSnapLids_010"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanSnapLids_010.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanSnapLids_011"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanSnapLids_011.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanSnapLids_012"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanSnapLids_012.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanSnapLids_013"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanSnapLids_013.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanSnapLids_014"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanSnapLids_014.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanSnapLids_015"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanSnapLids_015.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanSnapLids_016"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanSnapLids_016.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanSnapLids_017"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanSnapLids_017.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanSnapLids_018"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanSnapLids_018.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanSnapLids_019"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanSnapLids_019.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanSnapLids_020"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanSnapLids_020.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanSnapLids_021"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanSnapLids_021.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanSnapLids_022"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanSnapLids_022.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanSnapLids_023"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanSnapLids_023.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanSnapLids_024"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanSnapLids_024.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanSnapLids_025"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanSnapLids_025.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanSnapLids_026"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanSnapLids_026.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanSnapLids_027"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanSnapLids_027.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanSnapLids_028"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanSnapLids_028.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanSnapLids_029"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanSnapLids_029.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanSnapLids_030"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanSnapLids_030.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanSnapLids_031"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanSnapLids_031.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanSnapLids_032"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanSnapLids_032.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanSnapLids_033"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanSnapLids_033.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanSnapLids_034"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanSnapLids_034.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_001"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_001.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_002"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_002.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_003"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_003.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_004"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_004.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_005"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_005.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_006"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_006.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_007"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_007.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_008"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_008.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_009"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_009.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_010"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_010.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_011"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_011.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_012"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_012.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_013"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_013.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_014"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_014.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_015"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_015.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_016"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_016.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_017"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_017.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_018"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_018.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_019"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_019.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_020"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_020.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_021"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_021.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_022"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_022.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_023"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_023.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_024"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_024.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_025"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_025.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_026"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_026.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_027"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_027.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_028"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_028.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_029"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_029.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_030"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_030.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_031"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_031.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_032"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_032.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_033"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_033.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_034"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_034.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_035"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_035.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_036"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_036.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_037"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_037.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_038"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_038.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_039"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_039.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_040"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_040.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_041"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_041.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_042"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_042.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_043"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_043.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_044"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_044.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_045"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_045.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_046"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_046.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_047"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_047.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_048"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_048.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_049"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_049.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_050"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_050.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_051"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_051.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_052"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_052.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_053"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_053.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_054"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_054.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_055"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_055.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_056"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_056.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_057"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_057.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_058"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_058.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_059"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_059.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_060"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_060.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_061"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_061.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_062"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_062.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_063"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_063.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_064"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_064.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_065"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_065.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_066"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_066.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_067"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_067.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_068"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_068.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_069"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_069.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_070"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_070.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_071"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_071.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_072"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_072.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_073"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_073.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_074"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_074.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_075"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_075.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_076"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_076.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_077"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_077.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanBottom_078"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanBottom_078.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanPullRing"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanPullRing.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanPullRing_001"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanPullRing_001.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanPullRing_002"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanPullRing_002.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanPullRing_003"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanPullRing_003.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanPullRing_004"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanPullRing_004.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanPullRing_005"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanPullRing_005.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanPullRing_006"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanPullRing_006.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanPullRing_007"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanPullRing_007.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanPullRing_008"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanPullRing_008.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanPullRing_009"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanPullRing_009.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanPullRing_010"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanPullRing_010.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanPullRing_011"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanPullRing_011.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanPullRing_012"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanPullRing_012.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanPullRing_013"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanPullRing_013.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanPullRing_014"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanPullRing_014.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanPullRing_015"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanPullRing_015.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanPullRing_016"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanPullRing_016.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanPullRing_017"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanPullRing_017.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanPullRing_018"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanPullRing_018.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanPullRing_019"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanPullRing_019.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanPullRing_020"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanPullRing_020.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanPullRing_021"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanPullRing_021.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanPullRing_022"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanPullRing_022.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanPullRing_023"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanPullRing_023.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanPullRing_024"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanPullRing_024.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanPullRing_025"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanPullRing_025.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanPullRing_026"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanPullRing_026.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanPullRing_027"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanPullRing_027.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanPullRing_028"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanPullRing_028.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanPullRing_029"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanPullRing_029.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanPullRing_030"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanPullRing_030.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanPullRing_031"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanPullRing_031.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanPullRing_032"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanPullRing_032.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanPullRing_033"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanPullRing_033.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanPullRing_034"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanPullRing_034.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanPullRing_035"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanPullRing_035.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanPullRing_036"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanPullRing_036.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanPullRing_037"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanPullRing_037.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanTrademark"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanTrademark.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanTrademark_001"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanTrademark_001.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanTrademark_002"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanTrademark_002.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanTrademark_003"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanTrademark_003.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanTrademark_004"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanTrademark_004.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanTrademark_005"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanTrademark_005.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanTrademark_006"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanTrademark_006.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanTrademark_007"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanTrademark_007.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanTrademark_008"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanTrademark_008.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanTrademark_009"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanTrademark_009.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanTrademark_010"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanTrademark_010.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanTrademark_011"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanTrademark_011.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanTrademark_012"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanTrademark_012.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanTrademark_013"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanTrademark_013.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanTrademark_014"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanTrademark_014.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanTrademark_015"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanTrademark_015.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanTrademark_016"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanTrademark_016.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanTrademark_017"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanTrademark_017.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanTrademark_018"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanTrademark_018.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanTrademark_019"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanTrademark_019.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanTrademark_020"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanTrademark_020.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanTrademark_021"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanTrademark_021.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanTrademark_022"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanTrademark_022.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanTrademark_023"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanTrademark_023.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanTrademark_024"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanTrademark_024.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanTrademark_025"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanTrademark_025.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanTrademark_026"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanTrademark_026.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanTrademark_027"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanTrademark_027.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }

            def MujocoMesh "CokeCanTrademark_028"
            {
                asset mujoco:mesh:file = @coke_can/meshes/stl/CokeCanTrademark_028.stl@
                float3 mujoco:mesh:scale = (1, 1, 1)
            }
        }

        def MujocoMaterial "materials"
        {
            def MujocoMaterial "M_CokeCanSnapLids"
            {
                float mujoco:material:emission = 0
                color4f mujoco:material:rgba = (0.6745, 0.6745, 0.6745, 1)
            }

            def MujocoMaterial "M_CokeCanBottom"
            {
                float mujoco:material:emission = 0
                color4f mujoco:material:rgba = (0.6745, 0.6745, 0.6745, 1)
            }

            def MujocoMaterial "M_CokeCanPullRing"
            {
                float mujoco:material:emission = 0
                color4f mujoco:material:rgba = (0.6745, 0.6745, 0.6745, 1)
            }

            def MujocoMaterial "M_CokeCanTrademark"
            {
                float mujoco:material:emission = 0
                color4f mujoco:material:rgba = (0.6745, 0.6745, 0.6745, 1)
            }
        }

        def MujocoTexture "textures"
        {
        }
    }

    def MujocoEquality "equality"
    {
    }
}

